{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/PowerMeter.svelte","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.esm.js","../../src/Live.svelte","../../src/Yearly.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n    import { onMount } from \"svelte\";\n    import type { PowerSummary } from \"./powersummary\";\n\n    export let year: number;\n    export let month: number = 1;\n\n    const formater = new Intl.NumberFormat(\"en-CA\", {\n        minimumIntegerDigits: 2,\n    });\n\n    let entries: PowerSummary[] = [];\n    let mounted: boolean;\n    onMount(() => (mounted = true));\n\n    // update URL only when year and month are valid.\n    let url: string;\n    $: {\n        if (year > 2000 && year < 2100 && month >= 1 && month <= 12) {\n            // @ts-ignore: SERVICE_URL is included in rollup build.\n            url = SERVICE_URL + `/${year}/${month}`;\n        }\n    }\n\n    // fetch data.\n    $: {\n        const fetchPower = async () => {\n            const resp = await fetch(url);\n            entries = await resp.json();\n        };\n        if (mounted) {\n            fetchPower();\n        }\n    }\n\n    // calculate total power consumption.\n    let total: number;\n    $: total = entries\n        ? entries.reduce((sum, current) => sum + current.consumption, 0)\n        : 0;\n</script>\n\n<table>\n    <thead>\n        <tr><th>Date</th><th>Consumption</th></tr>\n    </thead>\n    <tbody>\n        {#each entries as u}\n            <tr>\n                <td\n                    >{u.year}-{formater.format(u.month)}-{formater.format(\n                        u.day\n                    )}</td\n                >\n                <td>{u.consumption}</td>\n            </tr>\n        {/each}\n        <tr>\n            <td />\n            <td>{total}</td>\n        </tr>\n    </tbody>\n</table>\n","/*!\n * Chart.js v3.0.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function() {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay);\n    } else {\n      fn();\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right) => align === 'right' ? right : align === 'center' ? (left + right) / 2 : left;\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  ctx.font = font.string;\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    if (opts.strikethrough || opts.underline) {\n      const metrics = ctx.measureText(line);\n      const left = x - metrics.actualBoundingBoxLeft;\n      const right = x + metrics.actualBoundingBoxRight;\n      const top = y - metrics.actualBoundingBoxAscent;\n      const bottom = y + metrics.actualBoundingBoxDescent;\n      const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n      ctx.strokeStyle = ctx.fillStyle;\n      ctx.beginPath();\n      ctx.lineWidth = opts.decorationWidth || 2;\n      ctx.moveTo(left, yDecoration);\n      ctx.lineTo(right, yDecoration);\n      ctx.stroke();\n    }\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style: valueOrDefault(options.style, fallback.style),\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace) {\n  const {min, max} = minmax;\n  return {\n    min: min - Math.abs(toDimension(grace, min)),\n    max: max + toDimension(grace, max)\n  };\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  const result = [];\n  set.forEach(item => {\n    result.push(item);\n  });\n  return result;\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      scopes[0][prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  let value = target[prop];\n  if (defined(value)) {\n    return value;\n  }\n  value = resolve();\n  if (defined(value)) {\n    target[prop] = value;\n  }\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + [..._stack].join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  const firstParent = parentScopes[0];\n  if (isObject(firstParent) && !(prop in firstParent)) {\n    set.add(firstParent[prop] = {});\n  }\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver([...set], [''], rootScopes, fallback);\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return [...set];\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK) {\n  const pointsLen = points.length;\n  let deltaX, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const {x, y} = pointCurrent;\n    if (pointBefore) {\n      deltaX = (x - pointBefore.x) / 3;\n      pointCurrent.cp1x = x - deltaX;\n      pointCurrent.cp1y = y - deltaX * mK[i];\n    }\n    if (pointAfter) {\n      deltaX = (pointAfter.x - x) / 3;\n      pointCurrent.cp2x = x + deltaX;\n      pointCurrent.cp2y = y + deltaX * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points) {\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDeltaX = (pointAfter.x - pointCurrent.x);\n      deltaK[i] = slopeDeltaX !== 0 ? (pointAfter.y - pointCurrent.y) / slopeDeltaX : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = chart.currentDevicePixelRatio = forceRatio || 1;\n  const {canvas, width, height} = chart;\n  canvas.height = height * pixelRatio;\n  canvas.width = width * pixelRatio;\n  chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = height + 'px';\n    canvas.style.width = width + 'px';\n  }\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= s && n <= e,\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction makeSubSegment(start, end, loop, count) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(makeSubSegment(subStart, i, loop, count));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(makeSubSegment(subStart, end, loop, count));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return [{start, end, loop}];\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return solidSegments(points, start, max, completeLoop);\n}\n\nexport { _capitalize as $, _isPointInArea as A, _rlookupByKey as B, toPadding as C, each as D, getMaximumSize as E, _getParentNode as F, readUsedSize as G, HALF_PI as H, throttled as I, supportsEventListenerOptions as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, toDegrees as O, PI as P, _measureText as Q, _int16Range as R, _alignPixel as S, TAU as T, renderText as U, toFont as V, _toLeftRightCenter as W, _alignStartEnd as X, overrides as Y, merge as Z, _arrayUnique as _, resolve as a, descriptors as a0, isFunction as a1, _attachContext as a2, _createResolver as a3, _descriptors as a4, mergeIf as a5, uid as a6, debounce as a7, retinaScale as a8, clearCanvas as a9, _decimalPlaces as aA, _longestText as aB, _filterBetween as aC, _lookup as aD, getHoverColor as aE, clone$1 as aF, _merger as aG, _mergerIf as aH, _deprecated as aI, toFontString as aJ, splineCurve as aK, splineCurveMonotone as aL, getStyle as aM, fontString as aN, toLineHeight as aO, PITAU as aP, INFINITY as aQ, RAD_PER_DEG as aR, QUARTER_PI as aS, TWO_THIRDS_PI as aT, _angleDiff as aU, _elementsEqual as aa, getAngleFromPoint as ab, _updateBezierControlPoints as ac, _computeSegments as ad, _boundSegments as ae, _steppedInterpolation as af, _bezierInterpolation as ag, _pointInLine as ah, _steppedLineTo as ai, _bezierCurveTo as aj, drawPoint as ak, toTRBL as al, toTRBLCorners as am, _boundSegment as an, _normalizeAngle as ao, getRtlAdapter as ap, overrideTextDirection as aq, _textX as ar, restoreTextDirection as as, noop as at, distanceBetweenPoints as au, _addGrace as av, _setMinAndMaxByKey as aw, niceNum as ax, almostWhole as ay, almostEquals as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, isNullOrUndef as j, clipArea as k, listenArrayEvents as l, unclipArea as m, toPercentage as n, toDimension as o, formatNumber as p, _angleBetween as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, isNumber as w, _limitValue as x, _lookupByKey as y, getRelativePosition as z };\n","/*!\n * Chart.js v3.0.2\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, b as isArray, d as defaults, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as isNullOrUndef, k as clipArea, m as unclipArea, _ as _arrayUnique, t as toRadians, n as toPercentage, o as toDimension, T as TAU, p as formatNumber, q as _angleBetween, H as HALF_PI, P as PI, w as isNumber, x as _limitValue, y as _lookupByKey, z as getRelativePosition$1, A as _isPointInArea, B as _rlookupByKey, C as toPadding, D as each, E as getMaximumSize, F as _getParentNode, G as readUsedSize, I as throttled, J as supportsEventListenerOptions, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as toDegrees, Q as _measureText, R as _int16Range, S as _alignPixel, U as renderText, V as toFont, W as _toLeftRightCenter, X as _alignStartEnd, Y as overrides, Z as merge, $ as _capitalize, a0 as descriptors, a1 as isFunction, a2 as _attachContext, a3 as _createResolver, a4 as _descriptors, a5 as mergeIf, a6 as uid, a7 as debounce, a8 as retinaScale, a9 as clearCanvas, aa as _elementsEqual, ab as getAngleFromPoint, ac as _updateBezierControlPoints, ad as _computeSegments, ae as _boundSegments, af as _steppedInterpolation, ag as _bezierInterpolation, ah as _pointInLine, ai as _steppedLineTo, aj as _bezierCurveTo, ak as drawPoint, al as toTRBL, am as toTRBLCorners, an as _boundSegment, ao as _normalizeAngle, ap as getRtlAdapter, aq as overrideTextDirection, ar as _textX, as as restoreTextDirection, at as noop, au as distanceBetweenPoints, av as _addGrace, aw as _setMinAndMaxByKey, ax as niceNum, ay as almostWhole, az as almostEquals, aA as _decimalPlaces, aB as _longestText, aC as _filterBetween, aD as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    const me = this;\n    if (me._request) {\n      return;\n    }\n    me._running = true;\n    me._request = requestAnimFrame.call(window, () => {\n      me._update();\n      me._request = null;\n      if (me._running) {\n        me._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    const me = this;\n    let remaining = 0;\n    me._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        me._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        me._notify(chart, anims, date, 'complete');\n      }\n      remaining += items.length;\n    });\n    me._lastDate = date;\n    if (remaining === 0) {\n      me._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    const me = this;\n    if (me._active) {\n      me._notify(false);\n      const currentValue = me._target[me._prop];\n      const elapsed = date - me._start;\n      const remain = me._duration - elapsed;\n      me._start = date;\n      me._duration = Math.floor(Math.max(remain, cfg.duration));\n      me._total += elapsed;\n      me._loop = !!cfg.loop;\n      me._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      me._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    const me = this;\n    if (me._active) {\n      me.tick(Date.now());\n      me._active = false;\n      me._notify(false);\n    }\n  }\n  tick(date) {\n    const me = this;\n    const elapsed = date - me._start;\n    const duration = me._duration;\n    const prop = me._prop;\n    const from = me._from;\n    const loop = me._loop;\n    const to = me._to;\n    let factor;\n    me._active = from !== to && (loop || (elapsed < duration));\n    if (!me._active) {\n      me._target[prop] = to;\n      me._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      me._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = me._easing(Math.min(1, Math.max(0, factor)));\n    me._target[prop] = me._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return indexScale.id + '.' + valueScale.id + '.' + meta.stack + '.' + meta.type;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return Object.assign(Object.create(parent),\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return Object.assign(Object.create(parent), {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[meta.vScale.id] === undefined || stacks[meta.vScale.id][meta.index] === undefined) {\n      return;\n    }\n    delete stacks[meta.vScale.id][meta.index];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this.initialize();\n  }\n  initialize() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    me.addElements();\n  }\n  updateIndex(datasetIndex) {\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = me.getScaleForId(xid);\n    meta.yScale = me.getScaleForId(yid);\n    meta.rScale = me.getScaleForId(rid);\n    meta.iScale = me.getScaleForId(iid);\n    meta.vScale = me.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const me = this;\n    const dataset = me.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    if (isObject(data)) {\n      me._data = convertObjectDataToArray(data);\n    } else if (me._data !== data) {\n      if (me._data) {\n        unlistenArrayEvents(me._data, me);\n        clearStacks(me._cachedMeta);\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, me);\n      }\n      me._data = data;\n    }\n  }\n  addElements() {\n    const me = this;\n    const meta = me._cachedMeta;\n    me._dataCheck();\n    if (me.datasetElementType) {\n      meta.dataset = new me.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = me.getDataset();\n    let stackChanged = false;\n    me._dataCheck();\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    me._resyncElements(resetNewElements);\n    if (stackChanged) {\n      updateStacks(me, meta._parsed);\n    }\n  }\n  configure() {\n    const me = this;\n    const config = me.chart.config;\n    const scopeKeys = config.datasetScopeKeys(me._type);\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys, true);\n    me.options = config.createResolver(scopes, me.getContext());\n    me._parsing = me.options.parsing;\n  }\n  parse(start, count) {\n    const me = this;\n    const {_cachedMeta: meta, _data: data} = me;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (me._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n    } else {\n      if (isArray(data[start])) {\n        parsed = me.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = me.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = me.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(me, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n      value = applyStack(stack, parsedValue, this._cachedMeta.index, {all: true});\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = me._getOtherScale(scale);\n    const stack = canStack && meta._stacked && {keys: getSortedDatasetIndices(me.chart, true), values: null};\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, value, parsed, otherValue;\n    function _skip() {\n      parsed = _parsed[i];\n      value = parsed[scale.axis];\n      otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(value) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      me.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        me.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.configure();\n    me._cachedDataOpts = {};\n    me.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(me.options.clip, defaultClip(meta.xScale, meta.yScale, me.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const me = this;\n    const ctx = me._ctx;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = me._drawStart || 0;\n    const count = me._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    let context;\n    if (index >= 0 && index < me._cachedMeta.data.length) {\n      const element = me._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(me.getContext(), index, element));\n      context.parsed = me.getParsed(index);\n      context.raw = dataset.data[index];\n    } else {\n      context = me.$context ||\n        (me.$context = createDatasetContext(me.chart.getContext(), me.index));\n      context.dataset = dataset;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const me = this;\n    const active = mode === 'active';\n    const cache = me._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = me.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = me.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(me._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => me.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const me = this;\n    const chart = me.chart;\n    const cache = me._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = me.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(me._type, transition);\n      const scopes = config.getOptionScopes(me.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, me.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const me = this;\n    const numMeta = me._cachedMeta.data.length;\n    const numData = me._data.length;\n    if (numData > numMeta) {\n      me._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      me._removeElements(numData, numMeta - numData);\n    }\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      me.parse(0, count);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new me.dataElementType();\n    }\n    if (me._parsing) {\n      move(meta._parsed);\n    }\n    me.parse(start, count);\n    if (resetNewElements) {\n      me.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const me = this;\n    const meta = me._cachedMeta;\n    if (me._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._insertElements(this.getDataset().data.length - count, count);\n  }\n  _onDataPop() {\n    this._removeElements(this._cachedMeta.data.length - 1, 1);\n  }\n  _onDataShift() {\n    this._removeElements(0, 1);\n  }\n  _onDataSplice(start, count) {\n    this._removeElements(start, count);\n    this._insertElements(start, arguments.length - 2);\n  }\n  _onDataUnshift() {\n    this._insertElements(0, arguments.length);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale) {\n  if (!scale._cache.$bar) {\n    const metas = scale.getMatchingVisibleMetas('bar');\n    let values = [];\n    for (let i = 0, ilen = metas.length; i < ilen; i++) {\n      values = values.concat(metas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(scale) {\n  const values = getAllScaleValues(scale);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    min = Math.min(min, i && Math.abs(curr - prev) || min);\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    const me = this;\n    me.enableOptionSharing = true;\n    super.initialize();\n    const meta = me._cachedMeta;\n    meta.stack = me.getDataset().stack;\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    me.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const vScale = me._cachedMeta.vScale;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = me._getRuler();\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const vpixels = reset ? {base, head: base} : me._calculateBarValuePixels(i);\n      const ipixels = me._calculateBarIndexPixels(i, ruler);\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : undefined,\n        width: horizontal ? undefined : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      me.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(me._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name) {\n    const stacks = this._getStacks(datasetIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(me.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(iScale);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: me._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const me = this;\n    const {vScale, _stacked} = me._cachedMeta;\n    const {base: baseValue, minBarLength} = me.options;\n    const parsed = me.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? me.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n      size = size < 0 ? -minBarLength : minBarLength;\n      if (value === 0) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    const actualBase = baseValue || 0;\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = vScale.getLineWidthForValue(actualBase) / 2;\n      if (size > 0) {\n        base += halfGrid;\n        size -= halfGrid;\n      } else if (size < 0) {\n        base -= halfGrid;\n        size += halfGrid;\n      }\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const me = this;\n    const scale = ruler.scale;\n    const options = me.options;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = options.skipNull ? me._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = me._getStackIndex(me.index, me._cachedMeta.stack);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(me.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const me = this;\n    const chart = me.chart;\n    const meta = me._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    clipArea(chart.ctx, chart.chartArea);\n    for (; i < ilen; ++i) {\n      if (me.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(me._ctx);\n      }\n    }\n    unclipArea(chart.ctx);\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  interaction: {\n    mode: 'index'\n  },\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = [];\n    let i, ilen, item;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      item = data[i];\n      parsed.push({\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), i),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), i),\n        _custom: item && item.r && +item.r\n      });\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const {data, _parsed} = this._cachedMeta;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size() / 2, _parsed[i]._custom);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = me.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const me = this;\n    const points = me._cachedMeta.data;\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && me.getParsed(i);\n      const x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(parsed.x);\n      const y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(parsed.y);\n      const properties = {\n        x,\n        y,\n        skip: isNaN(x) || isNaN(y)\n      };\n      if (includeOptions) {\n        properties.options = me.resolveDataElementOptions(i, mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      me.updateElement(point, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    let i, ilen;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      meta._parsed[i] = +data[i];\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    const me = this;\n    for (let i = 0; i < me.chart.data.datasets.length; ++i) {\n      if (me.chart.isDatasetVisible(i)) {\n        const controller = me.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const me = this;\n    const chart = me.chart;\n    const {chartArea} = chart;\n    const meta = me._cachedMeta;\n    const arcs = meta.data;\n    const spacing = me.getMaxBorderWidth() + me.getMaxOffset(arcs);\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(me.options.cutout, maxSize), 1);\n    const chartWeight = me._getRingWeight(me.index);\n    const {circumference, rotation} = me._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(me.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / me._getVisibleDatasetWeightTotal();\n    me.offsetX = offsetX * outerRadius;\n    me.offsetY = offsetY * outerRadius;\n    meta.total = me.calculateTotal();\n    me.outerRadius = outerRadius - radiusLength * me._getRingWeightOffset(me.index);\n    me.innerRadius = Math.max(me.outerRadius - radiusLength * chartWeight, 0);\n    me.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const me = this;\n    const opts = me.options;\n    const meta = me._cachedMeta;\n    const circumference = me._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null) {\n      return 0;\n    }\n    return me.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : me.innerRadius;\n    const outerRadius = animateScale ? 0 : me.outerRadius;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    let startAngle = me._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += me._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = me._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + me.offsetX,\n        y: centerY + me.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      startAngle += circumference;\n      me.updateElement(arc, i, properties, mode);\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i)) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const chart = me.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    const me = this;\n    let max = 0;\n    const chart = me.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== me) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  indexAxis: 'r',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = me.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    me._drawStart = start;\n    me._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      me.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    }\n    me.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const {xScale, yScale, _stacked} = me._cachedMeta;\n    const firstOpts = me.resolveDataElementOptions(start, mode);\n    const sharedOptions = me.getSharedOptions(firstOpts);\n    const includeOptions = me.includeOptions(mode, sharedOptions);\n    const spanGaps = me.options.spanGaps;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = me.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && me.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = me.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const x = properties.x = xScale.getPixelForValue(parsed.x, i);\n      const y = properties.y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(_stacked ? me.applyStack(yScale, parsed, _stacked) : parsed.y, i);\n      properties.skip = isNaN(x) || isNaN(y);\n      properties.stop = i > 0 && (parsed.x - prevParsed.x) > maxGapLength;\n      if (includeOptions) {\n        properties.options = sharedOptions || me.resolveDataElementOptions(i, mode);\n      }\n      if (!directUpdate) {\n        me.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    me.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const me = this;\n    const meta = me._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(me.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(me.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    this._cachedMeta.dataset.updateControlPoints(this.chart.chartArea);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const me = this;\n    const chart = me.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    me.outerRadius = outerRadius - (radiusLength * me.index);\n    me.innerRadius = me.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const me = this;\n    const reset = mode === 'reset';\n    const chart = me.chart;\n    const dataset = me.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = me._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / me.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += me._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + me._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: me.resolveDataElementOptions(i, mode)\n      };\n      me.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const me = this;\n    const vScale = me._cachedMeta.vScale;\n    const parsed = me.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const me = this;\n    const meta = me._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = me.resolveDatasetElementOptions(mode);\n      if (!me.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      me.updateElement(line, undefined, properties, mode);\n    }\n    me.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const me = this;\n    const dataset = me.getDataset();\n    const scale = me._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = me.resolveDataElementOptions(i, mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      me.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: either no adapter can be found or an incomplete integration was provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos: box.position,\n      horizontal: box.isHorizontal(),\n      weight: box.weight\n    });\n  }\n  return layoutBoxes;\n}\nfunction setLayoutDims(layouts, params) {\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    if (layout.horizontal) {\n      layout.width = layout.box.fullSize && params.availableWidth;\n      layout.height = params.hBoxMaxHeight;\n    } else {\n      layout.width = params.vBoxMaxWidth;\n      layout.height = layout.box.fullSize && params.availableHeight;\n    }\n  }\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout) {\n  const box = layout.box;\n  const maxPadding = chartArea.maxPadding;\n  if (isObject(layout.pos)) {\n    return {same: false, other: false};\n  }\n  if (layout.size) {\n    chartArea[layout.pos] -= layout.size;\n  }\n  layout.size = layout.horizontal ? box.height : box.width;\n  chartArea[layout.pos] += layout.size;\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params) || changed;\n}\nfunction placeBoxes(boxes, chartArea, params) {\n  const userPadding = params.padding;\n  let x = chartArea.x;\n  let y = chartArea.y;\n  let i, ilen, layout, box;\n  for (i = 0, ilen = boxes.length; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    if (layout.horizontal) {\n      box.left = box.fullSize ? userPadding.left : chartArea.left;\n      box.right = box.fullSize ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;\n      box.top = y;\n      box.bottom = y + box.height;\n      box.width = box.right - box.left;\n      y = box.bottom;\n    } else {\n      box.left = x;\n      box.right = x + box.width;\n      box.top = box.fullSize ? userPadding.top : chartArea.top;\n      box.bottom = box.fullSize ? params.outerHeight - userPadding.right : chartArea.top + chartArea.h;\n      box.height = box.bottom - box.top;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = width - padding.width;\n    const availableHeight = height - padding.height;\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params);\n    fitBoxes(verticalBoxes, chartArea, params);\n    if (fitBoxes(horizontalBoxes, chartArea, params)) {\n      fitBoxes(verticalBoxes, chartArea, params);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  const element = container || canvas;\n  const observer = new MutationObserver(entries => {\n    const parent = _getParentNode(element);\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.addedNodes.length; i++) {\n        const added = entry.addedNodes[i];\n        if (added === element || added === parent) {\n          listener(entry.target);\n        }\n      }\n    });\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const observer = new MutationObserver(entries => {\n    entries.forEach(entry => {\n      for (let i = 0; i < entry.removedNodes.length; i++) {\n        if (entry.removedNodes[i] === canvas) {\n          listener();\n          break;\n        }\n      }\n    });\n  });\n  observer.observe(container, {childList: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && _getParentNode(container));\n  }\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const me = this;\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return me;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : me[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) > 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderColor: (_ctx, options) => options.color,\n    borderWidth: (_ctx, options) => options.lineWidth\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return Object.assign(Object.create(parent), {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return Object.assign(Object.create(parent), {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right} = scale;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    titleY = offsetFromEdge(scale, position, offset);\n    maxWidth = right - left;\n  } else {\n    titleX = offsetFromEdge(scale, position, offset);\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    const me = this;\n    me.options = options;\n    me.axis = options.axis;\n    me._userMin = me.parse(options.min);\n    me._userMax = me.parse(options.max);\n    me._suggestedMin = me.parse(options.suggestedMin);\n    me._suggestedMax = me.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    const me = this;\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = me.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(me, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    const me = this;\n    return {\n      left: me.paddingLeft || 0,\n      top: me.paddingTop || 0,\n      right: me.paddingRight || 0,\n      bottom: me.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    const sampleSize = tickOpts.sampleSize;\n    me.beforeUpdate();\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    me.ticks = null;\n    me._labelSizes = null;\n    me._gridLineItems = null;\n    me._labelItems = null;\n    me.beforeSetDimensions();\n    me.setDimensions();\n    me.afterSetDimensions();\n    me._maxLength = me.isHorizontal()\n      ? me.width + margins.left + margins.right\n      : me.height + margins.top + margins.bottom;\n    if (!me._dataLimitsCached) {\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits();\n      me._dataLimitsCached = true;\n    }\n    me.beforeBuildTicks();\n    me.ticks = me.buildTicks() || [];\n    me.afterBuildTicks();\n    const samplingEnabled = sampleSize < me.ticks.length;\n    me._convertTicksToLabels(samplingEnabled ? sample(me.ticks, sampleSize) : me.ticks);\n    me.configure();\n    me.beforeCalculateLabelRotation();\n    me.calculateLabelRotation();\n    me.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      me.ticks = autoSkip(me, me.ticks);\n      me._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      me._convertTicksToLabels(me.ticks);\n    }\n    me.beforeFit();\n    me.fit();\n    me.afterFit();\n    me.afterUpdate();\n  }\n  configure() {\n    const me = this;\n    let reversePixels = me.options.reverse;\n    let startPixel, endPixel;\n    if (me.isHorizontal()) {\n      startPixel = me.left;\n      endPixel = me.right;\n    } else {\n      startPixel = me.top;\n      endPixel = me.bottom;\n      reversePixels = !reversePixels;\n    }\n    me._startPixel = startPixel;\n    me._endPixel = endPixel;\n    me._reversePixels = reversePixels;\n    me._length = endPixel - startPixel;\n    me._alignToPixels = me.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n    me.paddingLeft = 0;\n    me.paddingTop = 0;\n    me.paddingRight = 0;\n    me.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    const me = this;\n    me.chart.notifyPlugins(name, me.getContext());\n    callback(me.options[name], [me]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], me);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const me = this;\n    const options = me.options;\n    const tickOpts = options.ticks;\n    const numTicks = me.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {\n      me.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = me._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(me.chart.width - maxLabelWidth, 0, me.maxWidth);\n    tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = me.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, me.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),\n        Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    me.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const me = this;\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = me;\n    const display = me._isVisible();\n    const isHorizontal = me.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = me.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = me.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && me.ticks.length) {\n        const {first, last, widest, highest} = me._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(me.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        me._calculatePadding(first, last, sin, cos);\n      }\n    }\n    me._handleMargins();\n    if (isHorizontal) {\n      me.width = me._length = chart.width - me._margins.left - me._margins.right;\n      me.height = minSize.height;\n    } else {\n      me.width = minSize.width;\n      me.height = me._length = chart.height - me._margins.top - me._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const me = this;\n    const {ticks: {align, padding}, position} = me.options;\n    const isRotated = me.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && me.axis === 'x';\n    if (me.isHorizontal()) {\n      const offsetLeft = me.getPixelForTick(0) - me.left;\n      const offsetRight = me.right - me.getPixelForTick(me.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      me.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * me.width / (me.width - offsetLeft), 0);\n      me.paddingRight = Math.max((paddingRight - offsetRight + padding) * me.width / (me.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      me.paddingTop = paddingTop + padding;\n      me.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    const me = this;\n    if (me._margins) {\n      me._margins.left = Math.max(me.paddingLeft, me._margins.left);\n      me._margins.top = Math.max(me.paddingTop, me._margins.top);\n      me._margins.right = Math.max(me.paddingRight, me._margins.right);\n      me._margins.bottom = Math.max(me.paddingBottom, me._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    const me = this;\n    me.beforeTickToLabelConversion();\n    me.generateTickLabels(ticks);\n    me.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    const me = this;\n    let labelSizes = me._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = me.options.ticks.sampleSize;\n      let ticks = me.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      me._labelSizes = labelSizes = me._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest)\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    const me = this;\n    if (me._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = me._startPixel + decimal * me._length;\n    return _int16Range(me._alignToPixels ? _alignPixel(me.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const me = this;\n    const ticks = me.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(me.getContext(), index, tick));\n    }\n    return me.$context ||\n\t\t\t(me.$context = createScaleContext(me.chart.getContext(), me));\n  }\n  _tickSize() {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    const rot = toRadians(me.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = me._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return me.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const chart = me.chart;\n    const options = me.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(me.bottom);\n      ty1 = me.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(me.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = me.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(me.right);\n      tx1 = me.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(me.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = me.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(me.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    for (i = 0; i < ticksLength; ++i) {\n      const optsAtIndex = grid.setContext(me.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(me, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    me._ticksLength = ticksLength;\n    me._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const me = this;\n    const axis = me.axis;\n    const options = me.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = me.isHorizontal();\n    const ticks = me.ticks;\n    const {align, crossAlign, padding} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const rotation = -toRadians(me.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = me.bottom - tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = me.top + tickAndPadding;\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = me.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = me._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = me.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = me._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(me.getContext(i));\n      pixel = me.getPixelForTick(i) + optionTicks.labelOffset;\n      font = me._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y]\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const me = this;\n    const {position, ticks} = me.options;\n    const rotation = -toRadians(me.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const me = this;\n    const {position, ticks: {crossAlign, mirror, padding}} = me.options;\n    const labelSizes = me._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        textAlign = 'left';\n        x = me.right - padding;\n      } else {\n        x = me.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = me.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        textAlign = 'right';\n        x = me.left + padding;\n      } else {\n        x = me.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = me.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    const me = this;\n    if (me.options.ticks.mirror) {\n      return;\n    }\n    const chart = me.chart;\n    const position = me.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: me.left, bottom: chart.height, right: me.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: me.top, left: 0, bottom: me.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const me = this;\n    const grid = me.options.grid;\n    if (!me._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = me.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(me.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const me = this;\n    const grid = me.options.grid;\n    const ctx = me.ctx;\n    const chart = me.chart;\n    const borderOpts = grid.setContext(me.getContext(0));\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    const items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n    if (axisWidth) {\n      const edgeOpts = grid.setContext(me.getContext(me._ticksLength - 1));\n      const lastLineWidth = edgeOpts.lineWidth;\n      const borderValue = me._borderValue;\n      let x1, x2, y1, y2;\n      if (me.isHorizontal()) {\n        x1 = _alignPixel(chart, me.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, me.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n      drawLine(\n        {x: x1, y: y1},\n        {x: x2, y: y2},\n        {width: axisWidth, color: edgeOpts.borderColor});\n    }\n  }\n  drawLabels(chartArea) {\n    const me = this;\n    const optionTicks = me.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = me.ctx;\n    const area = me._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = me._labelItems || (me._labelItems = me._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom') {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    const me = this;\n    if (!me._isVisible()) {\n      return;\n    }\n    me.drawBackground();\n    me.drawGrid(chartArea);\n    me.drawTitle();\n    me.drawLabels(chartArea);\n  }\n  _layers() {\n    const me = this;\n    const opts = me.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = opts.grid && opts.grid.z || 0;\n    if (!me._isVisible() || tz === gz || me.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw(chartArea) {\n          me.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw(chartArea) {\n        me.drawBackground();\n        me.drawGrid(chartArea);\n        me.drawTitle();\n      }\n    }, {\n      z: tz,\n      draw(chartArea) {\n        me.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const me = this;\n    const metas = me.chart.getSortedVisibleDatasetMetas();\n    const axisID = me.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === me.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const me = this;\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = me.register(proto);\n    }\n    const items = me.items;\n    const id = item.id;\n    const scope = me.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (me.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    const me = this;\n    [...args].forEach(arg => {\n      const reg = typedRegistry || me._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === me.plugins && arg.id)) {\n        me._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || me._getRegistryForType(item);\n          me._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args) {\n    const me = this;\n    if (hook === 'beforeInit') {\n      me._init = me._createDescriptors(chart, true);\n      me._notify(me._init, chart, 'install');\n    }\n    const descriptors = me._descriptors(chart);\n    const result = me._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      me._notify(descriptors, chart, 'stop');\n      me._notify(me._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initConfig(config) {\n  config = config || {};\n  const data = config.data = config.data || {datasets: [], labels: []};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = data;\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = [...scopes];\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    if ((isScriptable(prop) && isFunction(proxy[prop]))\n      || (isIndexable(prop) && isArray(proxy[prop]))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.0.2\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction getCanvas(item) {\n  if (isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, config) {\n    const me = this;\n    this.config = config = new Config(config);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    this.platform = me._initializePlatform(initialCanvas, config);\n    const context = me.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._sortedMetasets = [];\n    this.scales = {};\n    this.scale = undefined;\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(() => this.update('resize'), options.resizeDelay || 0);\n    instances[me.id] = me;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(me, 'complete', onAnimationsComplete);\n    animator.listen(me, 'progress', onAnimationProgress);\n    me._initialize();\n    if (me.attached) {\n      me.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    const me = this;\n    me.notifyPlugins('beforeInit');\n    if (me.options.responsive) {\n      me.resize();\n    } else {\n      retinaScale(me, me.options.devicePixelRatio);\n    }\n    me.bindEvents();\n    me.notifyPlugins('afterInit');\n    return me;\n  }\n  _initializePlatform(canvas, config) {\n    if (config.platform) {\n      return new config.platform();\n    } else if (!isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n      return new BasicPlatform();\n    }\n    return new DomPlatform();\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const me = this;\n    const options = me.options;\n    const canvas = me.canvas;\n    const aspectRatio = options.maintainAspectRatio && me.aspectRatio;\n    const newSize = me.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const oldRatio = me.currentDevicePixelRatio;\n    const newRatio = options.devicePixelRatio || me.platform.getDevicePixelRatio();\n    if (me.width === newSize.width && me.height === newSize.height && oldRatio === newRatio) {\n      return;\n    }\n    me.width = newSize.width;\n    me.height = newSize.height;\n    me._aspectRatio = me.aspectRatio;\n    retinaScale(me, newRatio, true);\n    me.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [me, newSize], me);\n    if (me.attached) {\n      if (me._doResize()) {\n        me.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const me = this;\n    const options = me.options;\n    const scaleOpts = options.scales;\n    const scales = me.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: me.ctx,\n          chart: me\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(me, scale, scale.options);\n      layouts.addBox(me, scale);\n    });\n  }\n  _updateMetasetIndex(meta, index) {\n    const metasets = this._metasets;\n    const oldIndex = meta.index;\n    if (oldIndex !== index) {\n      metasets[oldIndex] = metasets[index];\n      metasets[index] = meta;\n      meta.index = index;\n    }\n  }\n  _updateMetasets() {\n    const me = this;\n    const metasets = me._metasets;\n    const numData = me.data.datasets.length;\n    const numMeta = metasets.length;\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        me._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    me._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const me = this;\n    const {_metasets: metasets, data: {datasets}} = me;\n    if (metasets.length > datasets.length) {\n      delete me._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        me._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const me = this;\n    const newControllers = [];\n    const datasets = me.data.datasets;\n    let i, ilen;\n    me._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = me.getDatasetMeta(i);\n      const type = dataset.type || me.config.type;\n      if (meta.type && meta.type !== type) {\n        me._destroyDatasetMeta(i);\n        meta = me.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, me.options);\n      meta.order = dataset.order || 0;\n      me._updateMetasetIndex(meta, i);\n      meta.label = '' + dataset.label;\n      meta.visible = me.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(me, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    me._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    const me = this;\n    each(me.data.datasets, (dataset, datasetIndex) => {\n      me.getDatasetMeta(datasetIndex).controller.reset();\n    }, me);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const me = this;\n    const config = me.config;\n    config.update();\n    me._options = config.createResolver(config.chartOptionScopes(), me.getContext());\n    each(me.scales, (scale) => {\n      layouts.removeBox(me, scale);\n    });\n    const animsDisabled = me._animationsDisabled = !me.options.animation;\n    me.ensureScalesHaveIDs();\n    me.buildOrUpdateScales();\n    me._plugins.invalidate();\n    if (me.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = me.buildOrUpdateControllers();\n    me.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; i++) {\n      const {controller} = me.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    me._minPadding = minPadding;\n    me._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    me._updateDatasets(mode);\n    me.notifyPlugins('afterUpdate', {mode});\n    me._layers.sort(compare2Level('z', '_idx'));\n    if (me._lastEvent) {\n      me._eventHandler(me._lastEvent, true);\n    }\n    me.render();\n  }\n  _updateLayout(minPadding) {\n    const me = this;\n    if (me.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(me, me.width, me.height, minPadding);\n    const area = me.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    me._layers = [];\n    each(me.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      me._layers.push(...box._layers());\n    }, me);\n    me._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    me.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    const me = this;\n    const isFunction = typeof mode === 'function';\n    if (me.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._updateDataset(i, isFunction ? mode({datasetIndex: i}) : mode);\n    }\n    me.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const me = this;\n    const meta = me.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (me.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    const me = this;\n    if (me.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(me)) {\n      if (me.attached && !animator.running(me)) {\n        animator.start(me);\n      }\n    } else {\n      me.draw();\n      onAnimationsComplete({chart: me});\n    }\n  }\n  draw() {\n    const me = this;\n    let i;\n    if (me._resizeBeforeDraw) {\n      const {width, height} = me._resizeBeforeDraw;\n      me._resize(width, height);\n      me._resizeBeforeDraw = null;\n    }\n    me.clear();\n    if (me.width <= 0 || me.height <= 0) {\n      return;\n    }\n    if (me.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = me._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(me.chartArea);\n    }\n    me.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const me = this;\n    const metasets = me._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    const me = this;\n    if (me.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = me.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      me._drawDataset(metasets[i]);\n    }\n    me.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const me = this;\n    const ctx = me.ctx;\n    const clip = meta._clip;\n    const area = me.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (me.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    clipArea(ctx, {\n      left: clip.left === false ? 0 : area.left - clip.left,\n      right: clip.right === false ? me.width : area.right + clip.right,\n      top: clip.top === false ? 0 : area.top - clip.top,\n      bottom: clip.bottom === false ? me.height : area.bottom + clip.bottom\n    });\n    meta.controller.draw();\n    unclipArea(ctx);\n    args.cancelable = false;\n    me.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const me = this;\n    const dataset = me.data.datasets[datasetIndex];\n    const metasets = me._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = metasets[datasetIndex] = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = {chart: this, type: 'chart'});\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateDatasetVisibility(datasetIndex, visible) {\n    const me = this;\n    const mode = visible ? 'show' : 'hide';\n    const meta = me.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    me.setDatasetVisibility(datasetIndex, visible);\n    anims.update(meta, {visible});\n    me.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n  }\n  hide(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, false);\n  }\n  show(datasetIndex) {\n    this._updateDatasetVisibility(datasetIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const me = this;\n    const meta = me._metasets && me._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n      delete me._metasets[datasetIndex];\n    }\n  }\n  destroy() {\n    const me = this;\n    const {canvas, ctx} = me;\n    let i, ilen;\n    me.stop();\n    animator.remove(me);\n    for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n      me._destroyDatasetMeta(i);\n    }\n    me.config.clearCache();\n    if (canvas) {\n      me.unbindEvents();\n      clearCanvas(canvas, ctx);\n      me.platform.releaseContext(ctx);\n      me.canvas = null;\n      me.ctx = null;\n    }\n    me.notifyPlugins('destroy');\n    delete instances[me.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    const platform = me.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(me, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(me, type, listener);\n        delete listeners[type];\n      }\n    };\n    let listener = function(e, x, y) {\n      e.offsetX = x;\n      e.offsetY = y;\n      me._eventHandler(e);\n    };\n    each(me.options.events, (type) => _add(type, listener));\n    if (me.options.responsive) {\n      listener = (width, height) => {\n        if (me.canvas) {\n          me.resize(width, height);\n        }\n      };\n      let detached;\n      const attached = () => {\n        _remove('attach', attached);\n        me.attached = true;\n        me.resize();\n        _add('resize', listener);\n        _add('detach', detached);\n      };\n      detached = () => {\n        me.attached = false;\n        _remove('resize', listener);\n        _add('attach', attached);\n      };\n      if (platform.isAttached(me.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    } else {\n      me.attached = true;\n    }\n  }\n  unbindEvents() {\n    const me = this;\n    const listeners = me._listeners;\n    if (!listeners) {\n      return;\n    }\n    delete me._listeners;\n    each(listeners, (listener, type) => {\n      me.platform.removeEventListener(me, type, listener);\n    });\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const me = this;\n    const lastActive = me._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args) {\n    return this._plugins.notify(this, hook, args);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const me = this;\n    const hoverOptions = me.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      me.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      me.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const me = this;\n    const args = {event: e, replay, cancelable: true};\n    if (me.notifyPlugins('beforeEvent', args) === false) {\n      return;\n    }\n    const changed = me._handleEvent(e, replay);\n    args.cancelable = false;\n    me.notifyPlugins('afterEvent', args);\n    if (changed || args.changed) {\n      me.render();\n    }\n    return me;\n  }\n  _handleEvent(e, replay) {\n    const me = this;\n    const {_active: lastActive = [], options} = me;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? me._lastEvent : e;\n    }\n    me._lastEvent = null;\n    callback(options.onHover, [e, active, me], me);\n    if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n      if (_isPointInArea(e, me.chartArea, me._minPadding)) {\n        callback(options.onClick, [e, active, me], me);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      me._active = active;\n      me._updateHoverStyles(active, lastActive, replay);\n    }\n    me._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element) {\n  const {startAngle, endAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction pathArc(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n}\nfunction drawArc(ctx, element) {\n  if (element.fullCircles) {\n    element.endAngle = element.startAngle + TAU;\n    pathArc(ctx, element);\n    for (let i = 0; i < element.fullCircles; ++i) {\n      ctx.fill();\n    }\n  }\n  if (!isNaN(element.circumference)) {\n    element.endAngle = element.startAngle + element.circumference % TAU;\n  }\n  pathArc(ctx, element);\n  ctx.fill();\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, endAngle, pixelMargin} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    element.endAngle = element.startAngle + TAU;\n    clipArc(ctx, element);\n    element.endAngle = endAngle;\n    if (element.endAngle === element.startAngle) {\n      element.endAngle += TAU;\n      element.fullCircles--;\n    }\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < element.fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element) {\n  const {x, y, startAngle, endAngle, pixelMargin, options} = element;\n  const outerRadius = element.outerRadius;\n  const innerRadius = element.innerRadius + pixelMargin;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, endAngle);\n  ctx.arc(x, y, innerRadius, endAngle, startAngle, true);\n  ctx.closePath();\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius && distance <= outerRadius);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    const offset = options.offset || 0;\n    me.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    me.fullCircles = Math.floor(me.circumference / TAU);\n    if (me.circumference === 0 || me.innerRadius < 0 || me.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    if (offset && me.circumference < TAU) {\n      const halfAngle = (me.startAngle + me.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    drawArc(ctx, me);\n    drawBorder(ctx, me);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderWidth: 2,\n  offset: 0,\n  angle: undefined\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, vm) {\n  ctx.lineCap = vm.borderCapStyle;\n  ctx.setLineDash(vm.borderDash);\n  ctx.lineDashOffset = vm.borderDashOffset;\n  ctx.lineJoin = vm.borderJoinStyle;\n  ctx.lineWidth = vm.borderWidth;\n  ctx.strokeStyle = vm.borderColor;\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension) {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params) {\n  params = params || {};\n  const count = points.length;\n  const start = Math.max(params.start || 0, segment.start);\n  const end = Math.min(params.end || count - 1, segment.end);\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension) {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  ctx.beginPath();\n  if (line.path(ctx, start, count)) {\n    ctx.closePath();\n  }\n  ctx.stroke();\n}\nconst usePath2D = typeof Path2D === 'function';\nconst strokePath = usePath2D ? strokePathWithCache : strokePathDirect;\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea) {\n    const me = this;\n    const options = me.options;\n    if (options.tension && !options.stepped && !me._pointsUpdated) {\n      const loop = options.spanGaps ? me._loop : me._fullLoop;\n      _updateBezierControlPoints(me._points, options, chartArea, loop);\n      me._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    const me = this;\n    me._points = points;\n    delete me._segments;\n    delete me._path;\n    me._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const me = this;\n    const options = me.options;\n    const value = point[property];\n    const points = me.points;\n    const segments = _boundSegments(me, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const me = this;\n    const segments = me.segments;\n    const ilen = segments.length;\n    const segmentMethod = _getSegmentMethod(me);\n    let loop = me._loop;\n    start = start || 0;\n    count = count || (me.points.length - start);\n    for (let i = 0; i < ilen; ++i) {\n      loop &= segmentMethod(ctx, me, segments[i], {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const me = this;\n    const options = me.options || {};\n    const points = me.points || [];\n    if (!points.length || !options.borderWidth) {\n      return;\n    }\n    ctx.save();\n    setStyle(ctx, options);\n    strokePath(ctx, me, start, count);\n    ctx.restore();\n    if (me.animated) {\n      me._pointsUpdated = false;\n      me._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options;\n    if (me.skip || options.radius < 0.1) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, me.x, me.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction parseBorderSkipped(bar) {\n  let edge = bar.options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    return res;\n  }\n  edge = bar.horizontal\n    ? parseEdge(edge, 'left', 'right', bar.base > bar.x)\n    : parseEdge(edge, 'bottom', 'top', bar.base < bar.y);\n  res[edge] = true;\n  return res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : Math.max(Math.min(value, max), min);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = parseBorderSkipped(bar);\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = parseBorderSkipped(bar);\n  return {\n    topLeft: skipOrLimit(skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const options = this.options;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, outer);\n      ctx.clip();\n      addRectPath(ctx, inner);\n      ctx.fillStyle = options.borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inner);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  const decimated = [];\n  const bucketWidth = (data.length - 2) / (samples - 2);\n  let sampledIndex = 0;\n  let a = 0;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, data.length);\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX = data[j].x;\n      avgY = data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1;\n    const rangeTo = Math.floor((i + 1) * bucketWidth) + 1;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[data.length - 1];\n  return decimated;\n}\nfunction minMaxDecimation(data, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const xMin = data[0].x;\n  const xMax = data[data.length - 1].x;\n  const dx = xMax - xMin;\n  for (i = 0; i < data.length; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    if (dataset._decimated) {\n      const data = dataset._data;\n      delete dataset._decimated;\n      delete dataset._data;\n      Object.defineProperty(dataset, 'data', {value: data});\n    }\n  });\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      if (data.length <= 4 * availableWidth) {\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach((segment) => {\n    const first = linePoints[segment.start];\n    const last = linePoints[segment.end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {chart, scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(chart, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nconst isLineAndNotInHideAnimation = (meta) => meta.type === 'line' && !meta.hidden;\nfunction getLinesBelow(chart, index) {\n  const below = [];\n  const metas = chart.getSortedVisibleDatasetMetas();\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (isLineAndNotInHideAnimation(meta)) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const bounds = getBounds(property, points[segment.start], points[segment.end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[segment.start],\n        end: points[segment.end]\n      });\n      continue;\n    }\n    const subs = _boundSegments(target, bounds);\n    for (let j = 0; j < subs.length; ++j) {\n      const sub = subs[j];\n      const subBounds = getBounds(property, tpoints[sub.start], tpoints[sub.end], sub.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (let k = 0; k < fillSources.length; k++) {\n        parts.push({\n          source: fillSources[k],\n          target: sub,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  ctx.fillStyle = color;\n  for (let i = 0, ilen = segments.length; i < ilen; ++i) {\n    const {source: src, target: tgt, start, end} = segments[i];\n    ctx.save();\n    clipBounds(ctx, scale, getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      interpolatedLineTo(ctx, target, end, property);\n    }\n    const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n    const loop = lineLoop && targetLoop;\n    if (!loop) {\n      interpolatedLineTo(ctx, target, start, property);\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : 'x';\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const propagate = options.propagate;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          scale: meta.vScale,\n          line\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, propagate);\n    }\n  },\n  beforeDatasetsDraw(chart) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    let i, meta;\n    for (i = metasets.length - 1; i >= 0; --i) {\n      meta = metasets[i].$filler;\n      if (meta) {\n        meta.line.updateControlPoints(area);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args) {\n    const area = chart.chartArea;\n    const ctx = chart.ctx;\n    const source = args.meta.$filler;\n    if (!source || source.fill === false) {\n      return;\n    }\n    const target = getTarget(source);\n    const {line, scale} = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const {above = color, below = color} = fillOption || {};\n    if (target && line.points.length) {\n      clipArea(ctx, area);\n      doFill(ctx, {line, target, above, below, area, scale});\n      unclipArea(ctx);\n    }\n  },\n  defaults: {\n    propagate: true\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    const me = this;\n    me.maxWidth = maxWidth;\n    me.maxHeight = maxHeight;\n    me._margins = margins;\n    me.setDimensions();\n    me.buildLabels();\n    me.fit();\n  }\n  setDimensions() {\n    const me = this;\n    if (me.isHorizontal()) {\n      me.width = me.maxWidth;\n      me.left = 0;\n      me.right = me.width;\n    } else {\n      me.height = me.maxHeight;\n      me.top = 0;\n      me.bottom = me.height;\n    }\n  }\n  buildLabels() {\n    const me = this;\n    const labelOpts = me.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [me.chart], me) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, me.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, me.chart.data));\n    }\n    if (me.options.reverse) {\n      legendItems.reverse();\n    }\n    me.legendItems = legendItems;\n  }\n  fit() {\n    const me = this;\n    const {options, ctx} = me;\n    if (!options.display) {\n      me.width = me.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = me._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (me.isHorizontal()) {\n      width = me.maxWidth;\n      height = me._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = me.maxHeight;\n      width = me._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    me.width = Math.min(width, options.maxWidth || me.maxWidth);\n    me.height = Math.min(height, options.maxHeight || me.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxWidth, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const lineWidths = me.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const me = this;\n    const {ctx, maxHeight, options: {labels: {padding}}} = me;\n    const hitboxes = me.legendHitBoxes = [];\n    const columnSizes = me.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let top = 0;\n    let col = 0;\n    me.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + fontSize + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        top = 0;\n        currentColWidth = currentColHeight = 0;\n      }\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += fontSize + padding;\n      hitboxes[i] = {left, top, col, width: itemWidth, height: itemHeight};\n      top += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    const me = this;\n    if (!me.options.display) {\n      return;\n    }\n    const titleHeight = me._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}}} = me;\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, me.left + padding, me.right - me.lineWidths[row]);\n        }\n        hitbox.top += me.top + titleHeight + padding;\n        hitbox.left = left;\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - me.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += me.left + padding;\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    const me = this;\n    if (me.options.display) {\n      const ctx = me.ctx;\n      clipArea(ctx, me);\n      me._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const me = this;\n    const {options: opts, columnSizes, lineWidths, ctx} = me;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    me.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.strokeStyle = fontColor;\n    ctx.fillStyle = fontColor;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        if (lineWidth !== 0) {\n          ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), yBoxTop, boxWidth, boxHeight);\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: legendItem.textAlign\n      });\n    };\n    const isHorizontal = me.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, me.left + padding, me.right - lineWidths[0]),\n        y: me.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: me.left + padding,\n        y: _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(me.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    me.legendItems.forEach((legendItem, i) => {\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + (fontSize / 2) + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(me.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > me.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, me.left + padding, me.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > me.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, me.top + titleHeight + padding, me.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, me.right);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(me.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const me = this;\n    const opts = me.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, me.left, me.width);\n    const ctx = me.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = me.left;\n    let maxWidth = me.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...me.lineWidths);\n      y = me.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, me.right - maxWidth);\n    } else {\n      const maxHeight = me.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, me.top, me.bottom - maxHeight - opts.labels.padding - me._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    const me = this;\n    let i, hitBox, lh;\n    if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n      lh = me.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return me.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const me = this;\n    const opts = me.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = me._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = me._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, me], me);\n      }\n      me._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, me], me);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, me], me);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const me = this;\n    const opts = me.options;\n    me.left = 0;\n    me.top = 0;\n    if (!opts.display) {\n      me.width = me.height = me.right = me.bottom = 0;\n      return;\n    }\n    me.width = me.right = maxWidth;\n    me.height = me.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    me._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + me._padding.height;\n    if (me.isHorizontal()) {\n      me.height = textSize;\n    } else {\n      me.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + me._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = me._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      style: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const radiusAndPadding = cornerRadius + caretPadding;\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= radiusAndPadding;\n  } else if (xAlign === 'right') {\n    x += radiusAndPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return Object.assign(Object.create(parent), {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const me = this;\n    const cached = me._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = me._chart;\n    const options = me.options.setContext(me.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(me._chart, opts);\n    if (opts._cacheable) {\n      me._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    const me = this;\n    return me.$context ||\n\t\t\t(me.$context = createTooltipContext(me._chart.getContext(), me, me._tooltipItems));\n  }\n  getTitle(context, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(me, [context]);\n    const title = callbacks.title.apply(me, [context]);\n    const afterTitle = callbacks.afterTitle.apply(me, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(me, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(me, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(me, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const me = this;\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(me, [tooltipItems]);\n    const footer = callbacks.footer.apply(me, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(me, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const me = this;\n    const active = me._active;\n    const data = me._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(me._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(me, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(me, context));\n      labelTextColors.push(scoped.labelTextColor.call(me, context));\n    });\n    me.labelColors = labelColors;\n    me.labelPointStyles = labelPointStyles;\n    me.labelTextColors = labelTextColors;\n    me.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    const active = me._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (me.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(me, active, me._eventPosition);\n      tooltipItems = me._createItems(options);\n      me.title = me.getTitle(tooltipItems, options);\n      me.beforeBody = me.getBeforeBody(tooltipItems, options);\n      me.body = me.getBody(tooltipItems, options);\n      me.afterBody = me.getAfterBody(tooltipItems, options);\n      me.footer = me.getFooter(tooltipItems, options);\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(me._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, me._chart);\n      me.xAlign = alignment.xAlign;\n      me.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    me._tooltipItems = tooltipItems;\n    me.$context = undefined;\n    if (properties) {\n      me._resolveAnimations().update(me, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(me, {chart: me._chart, tooltip: me, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {cornerRadius, caretSize} = options;\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + cornerRadius + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - cornerRadius - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const me = this;\n    const title = me.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const me = this;\n    const labelColors = me.labelColors[i];\n    const labelPointStyle = me.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(me, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.fillStyle = options.multiKeyBackground;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.lineWidth = 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, boxWidth), colorY, boxWidth, boxHeight);\n      ctx.fillStyle = labelColors.backgroundColor;\n      ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2), colorY + 1, boxWidth - 2, boxHeight - 2);\n    }\n    ctx.fillStyle = me.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const me = this;\n    const {body} = me;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(me, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(me.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + 1) : (boxWidth + 2)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = me.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        me._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(me.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const me = this;\n    const footer = me.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, me.x, me.width);\n      pt.x = getAlignedX(me, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const radius = options.cornerRadius;\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + radius, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - radius, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - radius);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + radius, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + radius);\n    ctx.quadraticCurveTo(x, y, x + radius, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const me = this;\n    const chart = me._chart;\n    const anims = me.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(me, me._active, me._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = me._size = getTooltipSize(me, options);\n      const positionAndSize = Object.assign({}, position, me._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        me.xAlign = alignment.xAlign;\n        me.yAlign = alignment.yAlign;\n        me.width = size.width;\n        me.height = size.height;\n        me.caretX = position.x;\n        me.caretY = position.y;\n        me._resolveAnimations().update(me, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const me = this;\n    const options = me.options.setContext(me.getContext());\n    let opacity = me.opacity;\n    if (!opacity) {\n      return;\n    }\n    me._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: me.width,\n      height: me.height\n    };\n    const pt = {\n      x: me.x,\n      y: me.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = me.title.length || me.beforeBody.length || me.body.length || me.afterBody.length || me.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      me.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      me.drawTitle(pt, ctx, options);\n      me.drawBody(pt, ctx, options);\n      me.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const me = this;\n    const lastActive = me._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = me._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = me._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      me._active = active;\n      me._eventPosition = eventPosition;\n      me.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const me = this;\n    const options = me.options;\n    const lastActive = me._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = me._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = me._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      me._active = active;\n      if (options.enabled || options.external) {\n        me._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        me.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const me = this;\n    const position = positioners[me.options.position].call(me, active, e);\n    return me.caretX !== position.x || me.caretY !== position.y;\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      style: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      style: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me.getMinMax(true);\n    if (me.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = me.getLabels().length - 1;\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const min = me.min;\n    const max = me.max;\n    const offset = me.options.offset;\n    const ticks = [];\n    let labels = me.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    me._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    me._startValue = me.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const labels = me.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    const me = this;\n    super.configure();\n    if (!me.isHorizontal()) {\n      me._reversePixels = !me._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (typeof value !== 'number') {\n      value = me.parse(value);\n    }\n    return value === null ? NaN : me.getPixelForDecimal((value - me._startValue) / me._valueRange);\n  }\n  getPixelForTick(index) {\n    const me = this;\n    const ticks = me.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return me.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    return Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {step, min, max, precision, count, maxTicks} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  niceMin = Math.floor(rmin / spacing) * spacing;\n  niceMax = Math.ceil(rmax / spacing) * spacing;\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.min((max - min) / spacing, maxTicks);\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  factor = Math.pow(10, isNullOrUndef(precision) ? _decimalPlaces(spacing) : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    ticks.push({value: min});\n    if (niceMin <= min) {\n      j++;\n    }\n    if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, spacing / 10)) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined) {\n    if (almostEquals(ticks[ticks.length - 1].value, max, spacing / 10)) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {beginAtZero, stacked} = me.options;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let {min, max} = me;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero || stacked) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      setMax(max + 1);\n      if (!beginAtZero) {\n        setMin(min - 1);\n      }\n    }\n    me.min = min;\n    me.max = max;\n  }\n  getTickLimit() {\n    const me = this;\n    const tickOpts = me.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n    } else {\n      maxTicks = me.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = me.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n    };\n    const ticks = generateTicks$1(numericGeneratorOptions, _addGrace(me, opts.grace));\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const me = this;\n    const ticks = me.ticks;\n    let start = me.min;\n    let end = me.max;\n    super.configure();\n    if (me.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    me._startValue = start;\n    me._endValue = end;\n    me._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? min : 0;\n    me.max = isNumberFinite(max) ? max : 1;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const me = this;\n    if (me.isHorizontal()) {\n      return Math.ceil(me.width / 40);\n    }\n    const tickFont = me._resolveTickFontOptions(0);\n    return Math.ceil(me.height / tickFont.lineHeight);\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(true);\n    me.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    me.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (me.options.beginAtZero) {\n      me._zero = true;\n    }\n    me.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const me = this;\n    const {minDefined, maxDefined} = me.getUserBounds();\n    let min = me.min;\n    let max = me.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (me._zero && me.min !== me._suggestedMin && min === exp(me.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    me.min = min;\n    me.max = max;\n  }\n  buildTicks() {\n    const me = this;\n    const opts = me.options;\n    const generationOptions = {\n      min: me._userMin,\n      max: me._userMax\n    };\n    const ticks = generateTicks(generationOptions, me);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, me, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      me.start = me.max;\n      me.end = me.min;\n    } else {\n      me.start = me.min;\n      me.end = me.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const me = this;\n    const start = me.min;\n    super.configure();\n    me._startValue = log10(start);\n    me._valueRange = log10(me.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    if (value === undefined || value === 0) {\n      value = me.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return me.getPixelForDecimal(value === me.min\n      ? 0\n      : (log10(value) - me._startValue) / me._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const decimal = me.getDecimalForPixel(pixel);\n    return Math.pow(10, me._startValue + decimal * me._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, lineHeight, label) {\n  if (isArray(label)) {\n    return {\n      w: _longestText(ctx, ctx.font, label),\n      h: label.length * lineHeight\n    };\n  }\n  return {\n    w: ctx.measureText(label).width,\n    h: lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  let i, textSize, pointPosition;\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getContext(i));\n    padding[i] = opts.padding;\n    pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    scale.ctx.font = plFont.string;\n    textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = [];\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    adjustPointPositionForLabelHeight(angle, size, pointLabelPosition);\n    const textAlign = getTextAlignForAngle(angle);\n    let left;\n    if (textAlign === 'left') {\n      left = pointLabelPosition.x;\n    } else if (textAlign === 'center') {\n      left = pointLabelPosition.x - (size.w / 2);\n    } else {\n      left = pointLabelPosition.x - size.w;\n    }\n    const right = left + size.w;\n    scale._pointLabelItems[i] = {\n      x: pointLabelPosition.x,\n      y: pointLabelPosition.y,\n      textAlign,\n      left,\n      top: pointLabelPosition.y,\n      right,\n      bottom: pointLabelPosition.y + size.h,\n    };\n  }\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n  if (angle === 90 || angle === 270) {\n    position.y -= (textSize.h / 2);\n  } else if (angle > 270 || angle < 90) {\n    position.y -= textSize.h;\n  }\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    const me = this;\n    me.width = me.maxWidth;\n    me.height = me.maxHeight;\n    me.paddingTop = getTickBackdropHeight(me.options) / 2;\n    me.xCenter = Math.floor(me.width / 2);\n    me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n    me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n  }\n  determineDataLimits() {\n    const me = this;\n    const {min, max} = me.getMinMax(false);\n    me.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    me.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    me.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    const me = this;\n    LinearScaleBase.prototype.generateTickLabels.call(me, ticks);\n    me._pointLabels = me.getLabels().map((value, index) => {\n      const label = callback(me.options.pointLabels.callback, [value, index], me);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const me = this;\n    const opts = me.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(me);\n    } else {\n      me.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    const me = this;\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    me.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const me = this;\n    const maxRight = me.width - rightMovement - me.drawingArea;\n    const maxLeft = leftMovement + me.drawingArea;\n    const maxTop = topMovement + me.drawingArea;\n    const maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;\n    me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);\n    me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    const me = this;\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = me.drawingArea / (me.max - me.min);\n    if (me.options.reverse) {\n      return (me.max - value) * scalingFactor;\n    }\n    return (value - me.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const me = this;\n    const scaledDistance = distance / (me.drawingArea / (me.max - me.min));\n    return me.options.reverse ? me.max - scaledDistance : me.min + scaledDistance;\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const me = this;\n    const angle = me.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + me.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + me.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const me = this;\n    const {backgroundColor, grid: {circular}} = me.options;\n    if (backgroundColor) {\n      const ctx = me.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(me, me.getDistanceFromCenterForValue(me._endValue), circular, me.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const {angleLines, grid} = opts;\n    const labelCount = me.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(me, labelCount);\n    }\n    if (grid.display) {\n      me.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = me.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(me.getContext(index - 1));\n          drawRadiusLine(me, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = me.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(me.getContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);\n        position = me.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(me.xCenter, me.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawLabels() {\n    const me = this;\n    const ctx = me.ctx;\n    const opts = me.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = me.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(me.xCenter, me.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    me.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(me.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = me.getDistanceFromCenterForValue(me.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    backdropColor: 'rgba(255,255,255,0.75)',\n    backdropPadding: 2,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const options = scale.options.time;\n  const {parser, round, isoWeekday} = options;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const me = this;\n    const options = me.options;\n    const adapter = me._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = me.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(me._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(me.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    me.min = Math.min(min, max - 1);\n    me.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const me = this;\n    const options = me.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? me.getLabelTimestamps() : me._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      me.min = me._userMin || timestamps[0];\n      me.max = me._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = me.min;\n    const max = me.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    me._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, me._getLabelCapacity(min))\n      : determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));\n    me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined\n      : determineMajorUnit(me._unit);\n    me.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(me, ticks, me._majorUnit);\n  }\n  initOffsets(timestamps) {\n    const me = this;\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (me.options.offset && timestamps.length) {\n      first = me.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (me.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = me.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - me.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    me._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const me = this;\n    const adapter = me._adapter;\n    const min = me.min;\n    const max = me.max;\n    const options = me.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, me._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && me.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const me = this;\n    const adapter = me._adapter;\n    const timeOpts = me.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const me = this;\n    const options = me.options;\n    const formats = options.time.displayFormats;\n    const unit = me._unit;\n    const majorUnit = me._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = me._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? formatter(label, index, ticks) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    const me = this;\n    return value === null ? NaN : (value - me.min) / (me.max - me.min);\n  }\n  getPixelForValue(value) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return me.min + pos * (me.max - me.min);\n  }\n  _getLabelSize(label) {\n    const me = this;\n    const ticksOpts = me.options.ticks;\n    const tickLabelWidth = me.ctx.measureText(label).width;\n    const angle = toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = me._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const me = this;\n    const timeOpts = me.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = me._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);\n    const size = me._getLabelSize(exampleLabel);\n    const capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    const me = this;\n    let timestamps = me._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = me.getMatchingVisibleMetas();\n    if (me._normalized && metas.length) {\n      return (me._cache.data = metas[0].controller.getAllParsedValues(me));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(me));\n    }\n    return (me._cache.data = me.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const me = this;\n    const timestamps = me._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = me.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(me, labels[i]));\n    }\n    return (me._cache.labels = me._normalized ? timestamps : me.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    prevSource = Math.floor(val);\n    nextSource = Math.ceil(val);\n    prevTarget = table[prevSource];\n    nextTarget = table[nextSource];\n  } else {\n    const result = _lookup(table, val);\n    prevTarget = result.lo;\n    nextTarget = result.hi;\n    prevSource = table[prevTarget];\n    nextSource = table[nextTarget];\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._maxIndex = undefined;\n  }\n  initOffsets() {\n    const me = this;\n    const timestamps = me._getTimestampsForTable();\n    me._table = me.buildLookupTable(timestamps);\n    me._maxIndex = me._table.length - 1;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const me = this;\n    const {min, max} = me;\n    if (!timestamps.length) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    const items = [min];\n    let i, ilen, curr;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n    items.push(max);\n    return items;\n  }\n  _getTimestampsForTable() {\n    const me = this;\n    let timestamps = me._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = me.getDataTimestamps();\n    const label = me.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = me.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = me._cache.all = timestamps;\n    return timestamps;\n  }\n  getPixelForValue(value, index) {\n    const me = this;\n    const offsets = me._offsets;\n    const pos = me._normalized && me._maxIndex > 0 && !isNullOrUndef(index)\n      ? index / me._maxIndex : me.getDecimalForValue(value);\n    return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getDecimalForValue(value) {\n    return interpolate(this._table, value) / this._maxIndex;\n  }\n  getValueForPixel(pixel) {\n    const me = this;\n    const offsets = me._offsets;\n    const decimal = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(me._table, decimal * this._maxIndex, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","<script lang=\"ts\">\n    import {\n        Chart,\n        LinearScale,\n        BarController,\n        LineController,\n        CategoryScale,\n        BarElement,\n        Title,\n        Tooltip,\n        PointElement,\n        LineElement,\n    } from \"chart.js\";\n    import { onDestroy, onMount } from \"svelte\";\n    import type { PowerSummary } from \"./powersummary\";\n\n    Chart.register(\n        LinearScale,\n        BarController,\n        LineController,\n        CategoryScale,\n        BarElement,\n        Title,\n        Tooltip,\n        PointElement,\n        LineElement\n    );\n\n    // refreshRateInMS sets the refresh rate of the live view in milliseconds\n    export let refreshRateInMS: number = 60_000;\n\n    async function fetchPower() {\n        // fetch Power entries\n        const today: Date = new Date();\n        const queries: Promise<Response>[] = [];\n\n        // fetch 3 days worth of data to ensure we are able to get 48 entries\n        for (let i = 0; i < 3; i++) {\n            const y: number = today.getFullYear();\n            const m: number = today.getMonth() + 1;\n            const d: number = today.getDate();\n\n            // @ts-ignore: SERVICE_URL is included in rollup build.\n            const url = SERVICE_URL + `/${y}/${m}/${d}`;\n            queries.push(fetch(url));\n            today.setDate(d - 1);\n        }\n\n        const resp = await Promise.all<Response, Response, Response>([\n            queries[0],\n            queries[1],\n            queries[2],\n        ]);\n\n        let usage = await Promise.all<\n            PowerSummary[],\n            PowerSummary[],\n            PowerSummary[]\n        >([resp[0].json(), resp[1].json(), resp[2].json()]);\n\n        const allUsage = [...usage[2], ...usage[1], ...usage[0]];\n\n        const now: Date = new Date();\n\n        let entries: number[] = new Array(48);\n        let labels: string[] = new Array(48);\n        let j = allUsage.length - 1;\n        for (let i = 47; i >= 0; i--) {\n            const h = now.getHours();\n            labels[i] = `${h}h`;\n\n            entries[i] = 0;\n            if (j >= 0 && allUsage[j].hour == h) {\n                entries[i] = allUsage[j].consumption;\n                j--;\n            }\n\n            now.setHours(h - 1);\n        }\n\n        let avg = new Array<number>(3);\n        chart.data.labels = labels;\n        chart.data.datasets[0].data = entries;\n        chart.data.datasets[1].data = entries.map<number>((v, i) => {\n            avg[i % 3] = v;\n            return avg.reduce<number>((tot, v) => tot + v, 0) / 3;\n        });\n        chart.options.scales.y.max = Math.max(...entries) + 1;\n        chart.update();\n    }\n\n    let ctx: HTMLCanvasElement;\n    let timer: number;\n    let chart: Chart;\n\n    onMount(() => {\n        fetchPower();\n        timer = setInterval(() => fetchPower(), refreshRateInMS);\n\n        chart = new Chart(ctx, {\n            type: \"bar\",\n            data: {\n                datasets: [\n                    {\n                        type: \"bar\",\n                        label: \"kWh\",\n                        backgroundColor: \"rgba(0, 128, 0, 0.6)\",\n                        data: null,\n                        borderWidth: 1,\n                    },\n                    {\n                        type: \"line\",\n                        label: \"3-hour moving average\",\n                        borderColor: \"rgba(255, 215, 0, 1)\",\n                        data: null,\n                        fill: false,\n                    },\n                ],\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: true,\n                aspectRatio: 5,\n                scales: {\n                    y: {\n                        beginAtZero: true,\n                        max: 10,\n                    },\n                },\n            },\n        });\n    });\n\n    onDestroy(() => clearInterval(timer));\n</script>\n\n<canvas bind:this={ctx} />\n","<script lang=\"ts\">\n    import {\n        Chart,\n        LinearScale,\n        BarController,\n        LineController,\n        CategoryScale,\n        BarElement,\n        Title,\n        Tooltip,\n        PointElement,\n        LineElement,\n        Legend,\n    } from \"chart.js\";\n    import type { ChartDataset } from \"chart.js\";\n    import { onMount } from \"svelte\";\n    import type { PowerSummary } from \"./powersummary\";\n    import PowerMeter from \"./PowerMeter.svelte\";\n\n    Chart.register(\n        LinearScale,\n        BarController,\n        LineController,\n        CategoryScale,\n        BarElement,\n        Title,\n        Tooltip,\n        PointElement,\n        LineElement,\n        Legend\n    );\n\n    let ctx: HTMLCanvasElement;\n    let chart: Chart;\n\n    const colors = [\n        \"rgba(255, 99, 132, 0.5)\",\n        \"rgba(54, 162, 235, 0.5)\",\n        \"rgba(255, 206, 86, 0.5)\",\n        \"rgba(75, 192, 192, 0.5)\",\n        \"rgba(153, 102, 255, 0.5)\",\n        \"rgba(255, 159, 64, 0.5)\",\n    ];\n\n    onMount(async () => {\n        // @ts-ignore: SERVICE_URL is included in rollup build.\n        const serviceURL = SERVICE_URL;\n\n        chart = new Chart(ctx, {\n            type: \"bar\",\n            data: {\n                datasets: [],\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: true,\n                aspectRatio: 4,\n                scales: {\n                    y: {\n                        beginAtZero: true,\n                    },\n                },\n            },\n        });\n\n        const years: PowerSummary[] = await fetch(serviceURL).then(async (r) =>\n            r.json()\n        );\n\n        var yearDetail = await Promise.all(\n            years.map((y) =>\n                fetch(serviceURL + `/${y.year}`).then((response) =>\n                    response.json()\n                )\n            )\n        );\n\n        yearDetail.map((usage, i) => {\n            const dataset: ChartDataset<\"bar\", number[]> = {\n                data: new Array<number>(12),\n                backgroundColor: colors[i % colors.length],\n                label: `${usage[0].year}`,\n            };\n\n            dataset.data = usage.map(\n                (u) => (dataset.data[u.month - 1] = u.consumption)\n            );\n\n            chart.data.datasets.push(dataset);\n        });\n\n        chart.data.labels = [\n            \"January\",\n            \"February\",\n            \"March\",\n            \"April\",\n            \"May\",\n            \"June\",\n            \"July\",\n            \"September\",\n            \"October\",\n            \"November\",\n            \"December\",\n        ];\n\n        chart.update();\n    });\n</script>\n\n<canvas bind:this={ctx} />\n","<script lang=\"ts\">\n\timport PowerMeter from \"./PowerMeter.svelte\";\n\timport Live from \"./Live.svelte\";\n\timport Yearly from \"./Yearly.svelte\";\n\n\tlet year: number = new Date().getFullYear();\n\tlet month: number = new Date().getMonth() + 1;\n\n\tfunction next() {\n\t\tmonth++;\n\t\tif (month <= 12) {\n\t\t\treturn;\n\t\t}\n\n\t\tyear++;\n\t\tmonth = 1;\n\t}\n\n\tfunction prev() {\n\t\tmonth--;\n\t\tif (month >= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tyear--;\n\t\tmonth = 12;\n\t}\n</script>\n\n<main>\n\t<h1>PowerMeter</h1>\n\n\t<Live />\n\n\t<Yearly />\n\n\t<button on:click={prev}>&lt;</button>\n\t<label>\n\t\t<input type=\"number\" bind:value={year} />\n\t</label>\n\n\t<label>\n\t\t<input type=\"number\" bind:value={month} />\n\t</label>\n\t<button on:click={next}>&gt;</button>\n\n\t<PowerMeter {year} {month} />\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\t/* text-transform: uppercase; */\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n\tlabel,\n\tbutton {\n\t\tdisplay: inline;\n\t\tfont-size: 1.5em;\n\t}\n\n\tinput {\n\t\twidth: 4em;\n\t\ttext-align: center;\n\t}\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","year","format","month","day","consumption","iterations","__awaiter","thisArg","_arguments","P","generator","formater","Intl","NumberFormat","minimumIntegerDigits","mounted","url","total","entries","fetchPower","resp","fetch","json","reduce","sum","current","requestAnimFrame","window","requestAnimationFrame","throttled","updateFn","updateArgs","args","prototype","slice","call","ticking","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isNullOrUndef","isArray","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","len","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","klen","k","isValidKey","key","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","niceRange","pow","floor","fraction","isNumber","n","isNaN","almostEquals","x","y","epsilon","abs","toRadians","degrees","distanceBetweenPoints","pt1","pt2","sqrt","_angleDiff","_normalizeAngle","_angleBetween","angle","s","e","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","min","max","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInBounce","easeOutBounce","easeInOutBounce","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","v","r","g","isShort","round","lim","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","map$1","Z","Y","X","W","V","U","T","S","R","Q","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","rgbParse","Color","_rgb","_valid","valid","hslString","color","weight","me","c1","c2","w2","w1","val","deg","rotate","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","saturate","darken","overrides","descriptors","getScope$1","split","set","root","scope","values","defaults","_descriptors","animation","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","width","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","strokeStyle","lineWidth","strokeText","maxWidth","fillText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","LINE_HEIGHT","RegExp","toLineHeight","matches","match","readValueToProps","objProps","read","prop","toTRBL","toPadding","toFont","fallback","toFontString","inputs","info","cacheable","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","array","listener","stub","_chartjs","listeners","_createResolver","scopes","prefixes","rootScopes","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","override","Proxy","deleteProperty","_keys","get","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","item","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","firstParent","addScopesFromKey","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDeltaX","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","deltaX","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","property","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","getNumberFormat","getRtlAdapter","rtl","rectX","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","makeSubSegment","count","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","animator","_request","_charts","_running","_lastDate","anims","date","numSteps","duration","currentStep","_update","_refresh","Date","now","remaining","running","items","draw","_active","_total","tick","_notify","charts","complete","progress","cb","_getAnims","acc","cur","_duration","cancel","interpolators","boolean","to","factor","c0","mix","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","elapsed","remain","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","active","resize","show","animations","visible","hide","Animations","config","_chart","_properties","configure","animatedProps","getOwnPropertyNames","option","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","wait","all","awaitAll","_animateOptions","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","vScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","initialize","linkScales","_stacked","addElements","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","_dataCheck","datasetElementType","resetNewElements","stackChanged","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","parse","xAxisKey","yAxisKey","parsedValue","NaN","canStack","otherScale","_getOtherScale","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","updateRangeFromParsed","getParsed","label","getLabelForValue","_clip","toClip","defaultClip","getMaxOverflow","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","transition","datasetAnimationScopeKeys","sharedOptions","_animationsDisabled","_resolveAnimations","getSharedOptions","_setStyle","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","arguments","getAllScaleValues","_cache","$bar","metas","getMatchingVisibleMetas","concat","getAllParsedValues","_arrayUnique","sort","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","BarController","iAxisKey","vAxisKey","super","bars","reset","getBasePixel","horizontal","isHorizontal","ruler","_getRuler","firstOpts","includeOptions","updateSharedOptions","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","updateElement","last","_getStacks","pixels","getPixelForValue","barThickness","curr","_length","updateMinAndPrev","ticks","getPixelForTick","computeMinSampleSize","_startPixel","_endPixel","stackCount","_getStackCount","grouped","categoryPercentage","barPercentage","baseValue","minBarLength","floating","getDataVisibility","actualBase","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","skipNull","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","_getStackIndex","rects","_index_","offset","grid","_value_","beginAtZero","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","stop","border","lastPoint","updateControlPoints","getRelativePosition$1","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","jlen","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","params","layout","same","other","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","fullSize","placeBoxes","userPadding","padding","layouts","_layers","z","layoutItem","minPadding","availableWidth","availableHeight","layoutBoxes","wrapBoxes","wrap","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","display","vBoxMaxWidth","hBoxMaxHeight","setLayoutDims","updatePos","change","handleMaxPadding","BasePlatform","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","createAttachObserver","observer","MutationObserver","addedNodes","added","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","initial","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","Element","getProps","final","defaultRoutes","formatters","tickValue","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","numeric","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","spacing","ceil","skipMajors","evenMajorSpacing","diff","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","borderDash","borderDashOffset","title","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","route","offsetFromEdge","edge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","getMinMax","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","notifyPlugins","_callHooks","beforeTickToLabelConversion","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","generateTickLabels","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","gcLen","garbageCollect","valueAt","decimal","getBaseValue","createTickContext","optionTicks","rot","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","fillRect","findIndex","_computeGridLineItems","drawLine","setLineDash","lineDashOffset","edgeOpts","lastLineWidth","_computeLabelArea","_computeLabelItems","titleX","titleY","titleArgs","drawBackground","drawGrid","drawTitle","drawLabels","tz","gz","axisID","TypedRegistry","isPrototypeOf","parentScope","isIChartComponent","register","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","registry","controllers","_typedRegistries","_each","_get","typedRegistry","arg","reg","_getRegistryForType","isForType","_exec","itemReg","camelMethod","PluginService","_init","hook","_createDescriptors","descriptor","plugin","cancelable","_oldCache","_notifyStateChanges","getPlugin","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","mainScope","resetCache","keyLists","_cachedScopes","subPrefixes","getResolver","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","isDomSupported","getCanvas","getElementById","instances","getChart","Chart","initialCanvas","existingChart","chartOptionScopes","_initializePlatform","acquireContext","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","console","error","bindEvents","OffscreenCanvas","_resizeBeforeDraw","_resize","newSize","oldRatio","newRatio","onResize","render","axisOptions","scaleOpts","updated","isRadial","dposition","dtype","scaleType","getScale","hasUpdated","addBox","oldIndex","_destroyDatasetMeta","newControllers","_removeUnreferencedMetasets","order","_updateMetasetIndex","isDatasetVisible","updateIndex","ControllerClass","getController","getElement","_updateMetasets","_resetElements","removeBox","animsDisabled","ensureScalesHaveIDs","buildOrUpdateScales","invalidate","buildOrUpdateControllers","buildOrUpdateElements","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","hidden","setDatasetVisibility","_updateDatasetVisibility","_destroy","remove","unbindEvents","releaseContext","toDataURL","_add","_remove","detached","isAttached","activeElements","lastActive","_updateHoverStyles","notify","replay","hoverOptions","deactivated","activated","updateHoverStyle","_handleEvent","lastEvent","getElementsAtEventForMode","invalidatePlugins","pathVars","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","minY","maxY","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","version","unregister","strokePath","Path2D","path","_path","LineElement","_fullLoop","_points","_segments","_pointsUpdated","segments","findStartAndEnd","solidSegments","_computeSegments","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","segmentMethod","vm","lineCap","borderCapStyle","lineJoin","borderJoinStyle","setStyle","inRange$1","hitRadius","PointElement","mouseX","mouseY","hoverRadius","getBarBounds","bar","half","parseBorderSkipped","borderSkipped","parseEdge","orig","v2","startEnd","skipOrLimit","parseBorderRadius","maxW","maxH","toTRBLCorners","borderRadius","maxR","topLeft","topRight","bottomLeft","bottomRight","boundingRects","parseBorderWidth","outer","inner","skipX","skipY","addRoundedRectPath","addNormalRectPath","hoverBorderWidth","BarElement","addRectPath","getBoxSize","labelOpts","fontSize","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","generateLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","legendItem","heightLimit","totalWidth","currentColWidth","currentColHeight","col","hitbox","_draw","defaultColor","rtlHelper","fontColor","halfFontSize","cursor","textDirection","setWidth","lineDash","drawOptions","SQRT2","centerX","yBoxTop","strokeRect","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","hitBox","lh","onLeave","isListened","hoveredItem","_getLegendItemAt","sameItem","plugin_legend","_element","_args","legend","adjustHitBoxes","handleEvent","ci","Title","_padding","textSize","fontOpts","_drawArgs","plugin_title","titleBlock","createTitle","positioners","hasValue","tooltipPosition","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getLabelAndValue","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","beforeTitle","afterTitle","bodyItems","scoped","beforeLabel","afterLabel","beforeFooter","afterFooter","itemSort","labelColor","labelPointStyle","labelTextColor","_createItems","getTitle","getBeforeBody","getBody","getAfterBody","getFooter","positionAndSize","backgroundPoint","external","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","colorX","rtlColorX","yOffSet","colorY","centerY","multiKeyBackground","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","_drawColorBox","footerAlign","footerColor","tooltipSize","drawCaret","quadraticCurveTo","animX","animY","_updateAnimationTarget","hasTooltipContent","globalAlpha","drawBody","drawFooter","positionChanged","_positionChanged","plugin_tooltip","labelCount","tooltipItem","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","getPixelForDecimal","getDecimalForPixel","generateTicks$1","generationOptions","dataRange","step","precision","maxTicks","unit","maxSpaces","rmin","rmax","countDefined","niceMin","niceMax","numSpaces","rounded","almostWhole","_decimalPlaces","LinearScaleBase","_endValue","setMin","setMax","minSign","maxSign","stepSize","computeTickLimit","getTickLimit","minmax","_addGrace","_setMinAndMaxByKey","LinearScale","handleTickRangeOptions","timer","refreshRateInMS","today","queries","getFullYear","getMonth","getDate","setDate","usage","allUsage","getHours","hour","setHours","avg","tot","setInterval","clearInterval","serviceURL","years","response","u"],"mappings":"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"}