{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/PowerMeter.svelte","../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../node_modules/chart.js/dist/chart.esm.js","../../src/Live.svelte","../../src/Yearly.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.1' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\n    import { onMount } from \"svelte\";\n    import type { PowerSummary } from \"./powersummary\";\n\n    export let year: number;\n    export let month: number = 1;\n\n    const formater = new Intl.NumberFormat(\"en-CA\", {\n        minimumIntegerDigits: 2,\n    });\n\n    let entries: PowerSummary[] = [];\n    let mounted: boolean;\n    onMount(() => (mounted = true));\n\n    // update URL only when year and month are valid.\n    let url: string;\n    $: {\n        if (year > 2000 && year < 2100 && month >= 1 && month <= 12) {\n            // @ts-ignore: SERVICE_URL is included in rollup build.\n            url = SERVICE_URL + `/${year}/${month}`;\n        }\n    }\n\n    // fetch data.\n    $: {\n        const fetchPower = async () => {\n            const resp = await fetch(url);\n            entries = await resp.json();\n        };\n        if (mounted) {\n            fetchPower();\n        }\n    }\n\n    // calculate total power consumption.\n    let total: number;\n    $: total = entries\n        ? entries.reduce((sum, current) => sum + current.consumption, 0)\n        : 0;\n</script>\n\n<table>\n    <thead>\n        <tr><th>Date</th><th>Consumption</th></tr>\n    </thead>\n    <tbody>\n        {#each entries as u}\n            <tr>\n                <td\n                    >{u.year}-{formater.format(u.month)}-{formater.format(\n                        u.day\n                    )}</td\n                >\n                <td>{u.consumption}</td>\n            </tr>\n        {/each}\n        <tr>\n            <td />\n            <td>{total}</td>\n        </tr>\n    </tbody>\n</table>\n","/*!\n * Chart.js v3.6.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\nconst requestAnimFrame = (function() {\n  if (typeof window === 'undefined') {\n    return function(callback) {\n      return callback();\n    };\n  }\n  return window.requestAnimationFrame;\n}());\nfunction throttled(fn, thisArg, updateFn) {\n  const updateArgs = updateFn || ((args) => Array.prototype.slice.call(args));\n  let ticking = false;\n  let args = [];\n  return function(...rest) {\n    args = updateArgs(rest);\n    if (!ticking) {\n      ticking = true;\n      requestAnimFrame.call(window, () => {\n        ticking = false;\n        fn.apply(thisArg, args);\n      });\n    }\n  };\n}\nfunction debounce(fn, delay) {\n  let timeout;\n  return function(...args) {\n    if (delay) {\n      clearTimeout(timeout);\n      timeout = setTimeout(fn, delay, args);\n    } else {\n      fn.apply(this, args);\n    }\n    return delay;\n  };\n}\nconst _toLeftRightCenter = (align) => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\nconst _alignStartEnd = (align, start, end) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\nconst _textX = (align, left, right, rtl) => {\n  const check = rtl ? 'left' : 'right';\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n\nfunction noop() {}\nconst uid = (function() {\n  let id = 0;\n  return function() {\n    return id++;\n  };\n}());\nfunction isNullOrUndef(value) {\n  return value === null || typeof value === 'undefined';\n}\nfunction isArray(value) {\n  if (Array.isArray && Array.isArray(value)) {\n    return true;\n  }\n  const type = Object.prototype.toString.call(value);\n  if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n    return true;\n  }\n  return false;\n}\nfunction isObject(value) {\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\nconst isNumberFinite = (value) => (typeof value === 'number' || value instanceof Number) && isFinite(+value);\nfunction finiteOrDefault(value, defaultValue) {\n  return isNumberFinite(value) ? value : defaultValue;\n}\nfunction valueOrDefault(value, defaultValue) {\n  return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100\n    : value / dimension;\nconst toDimension = (value, dimension) =>\n  typeof value === 'string' && value.endsWith('%') ?\n    parseFloat(value) / 100 * dimension\n    : +value;\nfunction callback(fn, args, thisArg) {\n  if (fn && typeof fn.call === 'function') {\n    return fn.apply(thisArg, args);\n  }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n  let i, len, keys;\n  if (isArray(loopable)) {\n    len = loopable.length;\n    if (reverse) {\n      for (i = len - 1; i >= 0; i--) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    } else {\n      for (i = 0; i < len; i++) {\n        fn.call(thisArg, loopable[i], i);\n      }\n    }\n  } else if (isObject(loopable)) {\n    keys = Object.keys(loopable);\n    len = keys.length;\n    for (i = 0; i < len; i++) {\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\n    }\n  }\n}\nfunction _elementsEqual(a0, a1) {\n  let i, ilen, v0, v1;\n  if (!a0 || !a1 || a0.length !== a1.length) {\n    return false;\n  }\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\n    v0 = a0[i];\n    v1 = a1[i];\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction clone$1(source) {\n  if (isArray(source)) {\n    return source.map(clone$1);\n  }\n  if (isObject(source)) {\n    const target = Object.create(null);\n    const keys = Object.keys(source);\n    const klen = keys.length;\n    let k = 0;\n    for (; k < klen; ++k) {\n      target[keys[k]] = clone$1(source[keys[k]]);\n    }\n    return target;\n  }\n  return source;\n}\nfunction isValidKey(key) {\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\n}\nfunction _merger(key, target, source, options) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    merge(tval, sval, options);\n  } else {\n    target[key] = clone$1(sval);\n  }\n}\nfunction merge(target, source, options) {\n  const sources = isArray(source) ? source : [source];\n  const ilen = sources.length;\n  if (!isObject(target)) {\n    return target;\n  }\n  options = options || {};\n  const merger = options.merger || _merger;\n  for (let i = 0; i < ilen; ++i) {\n    source = sources[i];\n    if (!isObject(source)) {\n      continue;\n    }\n    const keys = Object.keys(source);\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\n      merger(keys[k], target, source, options);\n    }\n  }\n  return target;\n}\nfunction mergeIf(target, source) {\n  return merge(target, source, {merger: _mergerIf});\n}\nfunction _mergerIf(key, target, source) {\n  if (!isValidKey(key)) {\n    return;\n  }\n  const tval = target[key];\n  const sval = source[key];\n  if (isObject(tval) && isObject(sval)) {\n    mergeIf(tval, sval);\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n    target[key] = clone$1(sval);\n  }\n}\nfunction _deprecated(scope, value, previous, current) {\n  if (value !== undefined) {\n    console.warn(scope + ': \"' + previous +\n\t\t\t'\" is deprecated. Please use \"' + current + '\" instead');\n  }\n}\nconst emptyString = '';\nconst dot = '.';\nfunction indexOfDotOrLength(key, start) {\n  const idx = key.indexOf(dot, start);\n  return idx === -1 ? key.length : idx;\n}\nfunction resolveObjectKey(obj, key) {\n  if (key === emptyString) {\n    return obj;\n  }\n  let pos = 0;\n  let idx = indexOfDotOrLength(key, pos);\n  while (obj && idx > pos) {\n    obj = obj[key.substr(pos, idx - pos)];\n    pos = idx + 1;\n    idx = indexOfDotOrLength(key, pos);\n  }\n  return obj;\n}\nfunction _capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value) => typeof value !== 'undefined';\nconst isFunction = (value) => typeof value === 'function';\nconst setsEqual = (a, b) => {\n  if (a.size !== b.size) {\n    return false;\n  }\n  for (const item of a) {\n    if (!b.has(item)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction niceNum(range) {\n  const roundedRange = Math.round(range);\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\n  const fraction = range / niceRange;\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n  return niceFraction * niceRange;\n}\nfunction _factorize(value) {\n  const result = [];\n  const sqrt = Math.sqrt(value);\n  let i;\n  for (i = 1; i < sqrt; i++) {\n    if (value % i === 0) {\n      result.push(i);\n      result.push(value / i);\n    }\n  }\n  if (sqrt === (sqrt | 0)) {\n    result.push(sqrt);\n  }\n  result.sort((a, b) => a - b).pop();\n  return result;\n}\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostEquals(x, y, epsilon) {\n  return Math.abs(x - y) < epsilon;\n}\nfunction almostWhole(x, epsilon) {\n  const rounded = Math.round(x);\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\n}\nfunction _setMinAndMaxByKey(array, target, property) {\n  let i, ilen, value;\n  for (i = 0, ilen = array.length; i < ilen; i++) {\n    value = array[i][property];\n    if (!isNaN(value)) {\n      target.min = Math.min(target.min, value);\n      target.max = Math.max(target.max, value);\n    }\n  }\n}\nfunction toRadians(degrees) {\n  return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n  return radians * (180 / PI);\n}\nfunction _decimalPlaces(x) {\n  if (!isNumberFinite(x)) {\n    return;\n  }\n  let e = 1;\n  let p = 0;\n  while (Math.round(x * e) / e !== x) {\n    e *= 10;\n    p++;\n  }\n  return p;\n}\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n  if (angle < (-0.5 * PI)) {\n    angle += TAU;\n  }\n  return {\n    angle,\n    distance: radialDistanceFromCenter\n  };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\nfunction _angleDiff(a, b) {\n  return (a - b + PITAU) % TAU - PI;\n}\nfunction _normalizeAngle(a) {\n  return (a % TAU + TAU) % TAU;\n}\nfunction _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n  const a = _normalizeAngle(angle);\n  const s = _normalizeAngle(start);\n  const e = _normalizeAngle(end);\n  const angleToStart = _normalizeAngle(s - a);\n  const angleToEnd = _normalizeAngle(e - a);\n  const startToAngle = _normalizeAngle(a - s);\n  const endToAngle = _normalizeAngle(a - e);\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\n}\nfunction _limitValue(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nfunction _int16Range(value) {\n  return _limitValue(value, -32768, 32767);\n}\n\nconst atEdge = (t) => t === 0 || t === 1;\nconst elasticIn = (t, s, p) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\nconst effects = {\n  linear: t => t,\n  easeInQuad: t => t * t,\n  easeOutQuad: t => -t * (t - 2),\n  easeInOutQuad: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t\n    : -0.5 * ((--t) * (t - 2) - 1),\n  easeInCubic: t => t * t * t,\n  easeOutCubic: t => (t -= 1) * t * t + 1,\n  easeInOutCubic: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t\n    : 0.5 * ((t -= 2) * t * t + 2),\n  easeInQuart: t => t * t * t * t,\n  easeOutQuart: t => -((t -= 1) * t * t * t - 1),\n  easeInOutQuart: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t\n    : -0.5 * ((t -= 2) * t * t * t - 2),\n  easeInQuint: t => t * t * t * t * t,\n  easeOutQuint: t => (t -= 1) * t * t * t * t + 1,\n  easeInOutQuint: t => ((t /= 0.5) < 1)\n    ? 0.5 * t * t * t * t * t\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\n  easeInSine: t => -Math.cos(t * HALF_PI) + 1,\n  easeOutSine: t => Math.sin(t * HALF_PI),\n  easeInOutSine: t => -0.5 * (Math.cos(PI * t) - 1),\n  easeInExpo: t => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\n  easeOutExpo: t => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\n  easeInOutExpo: t => atEdge(t) ? t : t < 0.5\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n  easeInCirc: t => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\n  easeOutCirc: t => Math.sqrt(1 - (t -= 1) * t),\n  easeInOutCirc: t => ((t /= 0.5) < 1)\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n  easeInElastic: t => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n  easeOutElastic: t => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n  easeInOutElastic(t) {\n    const s = 0.1125;\n    const p = 0.45;\n    return atEdge(t) ? t :\n      t < 0.5\n        ? 0.5 * elasticIn(t * 2, s, p)\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n  },\n  easeInBack(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n  },\n  easeOutBack(t) {\n    const s = 1.70158;\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\n  },\n  easeInOutBack(t) {\n    let s = 1.70158;\n    if ((t /= 0.5) < 1) {\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n    }\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n  },\n  easeInBounce: t => 1 - effects.easeOutBounce(1 - t),\n  easeOutBounce(t) {\n    const m = 7.5625;\n    const d = 2.75;\n    if (t < (1 / d)) {\n      return m * t * t;\n    }\n    if (t < (2 / d)) {\n      return m * (t -= (1.5 / d)) * t + 0.75;\n    }\n    if (t < (2.5 / d)) {\n      return m * (t -= (2.25 / d)) * t + 0.9375;\n    }\n    return m * (t -= (2.625 / d)) * t + 0.984375;\n  },\n  easeInOutBounce: t => (t < 0.5)\n    ? effects.easeInBounce(t * 2) * 0.5\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\n};\n\n/*!\n * @kurkle/color v0.1.9\n * https://github.com/kurkle/color#readme\n * (c) 2020 Jukka Kurkela\n * Released under the MIT License\n */\nconst map = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = '0123456789ABCDEF';\nconst h1 = (b) => hex[b & 0xF];\nconst h2 = (b) => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = (b) => (((b & 0xF0) >> 4) === (b & 0xF));\nfunction isShort(v) {\n\treturn eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\n}\nfunction hexParse(str) {\n\tvar len = str.length;\n\tvar ret;\n\tif (str[0] === '#') {\n\t\tif (len === 4 || len === 5) {\n\t\t\tret = {\n\t\t\t\tr: 255 & map[str[1]] * 17,\n\t\t\t\tg: 255 & map[str[2]] * 17,\n\t\t\t\tb: 255 & map[str[3]] * 17,\n\t\t\t\ta: len === 5 ? map[str[4]] * 17 : 255\n\t\t\t};\n\t\t} else if (len === 7 || len === 9) {\n\t\t\tret = {\n\t\t\t\tr: map[str[1]] << 4 | map[str[2]],\n\t\t\t\tg: map[str[3]] << 4 | map[str[4]],\n\t\t\t\tb: map[str[5]] << 4 | map[str[6]],\n\t\t\t\ta: len === 9 ? (map[str[7]] << 4 | map[str[8]]) : 255\n\t\t\t};\n\t\t}\n\t}\n\treturn ret;\n}\nfunction hexString(v) {\n\tvar f = isShort(v) ? h1 : h2;\n\treturn v\n\t\t? '#' + f(v.r) + f(v.g) + f(v.b) + (v.a < 255 ? f(v.a) : '')\n\t\t: v;\n}\nfunction round(v) {\n\treturn v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n\treturn lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n\treturn lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n\treturn lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n\treturn lim(round(v * 100), 0, 100);\n}\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n\tconst m = RGB_RE.exec(str);\n\tlet a = 255;\n\tlet r, g, b;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[7] !== r) {\n\t\tconst v = +m[7];\n\t\ta = 255 & (m[8] ? p2b(v) : v * 255);\n\t}\n\tr = +m[1];\n\tg = +m[3];\n\tb = +m[5];\n\tr = 255 & (m[2] ? p2b(r) : r);\n\tg = 255 & (m[4] ? p2b(g) : g);\n\tb = 255 & (m[6] ? p2b(b) : b);\n\treturn {\n\t\tr: r,\n\t\tg: g,\n\t\tb: b,\n\t\ta: a\n\t};\n}\nfunction rgbString(v) {\n\treturn v && (\n\t\tv.a < 255\n\t\t\t? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n\t\t\t: `rgb(${v.r}, ${v.g}, ${v.b})`\n\t);\n}\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n\tconst a = s * Math.min(l, 1 - l);\n\tconst f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n\treturn [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n\tconst f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n\treturn [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n\tconst rgb = hsl2rgbn(h, 1, 0.5);\n\tlet i;\n\tif (w + b > 1) {\n\t\ti = 1 / (w + b);\n\t\tw *= i;\n\t\tb *= i;\n\t}\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] *= 1 - w - b;\n\t\trgb[i] += w;\n\t}\n\treturn rgb;\n}\nfunction rgb2hsl(v) {\n\tconst range = 255;\n\tconst r = v.r / range;\n\tconst g = v.g / range;\n\tconst b = v.b / range;\n\tconst max = Math.max(r, g, b);\n\tconst min = Math.min(r, g, b);\n\tconst l = (max + min) / 2;\n\tlet h, s, d;\n\tif (max !== min) {\n\t\td = max - min;\n\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\th = max === r\n\t\t\t? ((g - b) / d) + (g < b ? 6 : 0)\n\t\t\t: max === g\n\t\t\t\t? (b - r) / d + 2\n\t\t\t\t: (r - g) / d + 4;\n\t\th = h * 60 + 0.5;\n\t}\n\treturn [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n\treturn (\n\t\tArray.isArray(a)\n\t\t\t? f(a[0], a[1], a[2])\n\t\t\t: f(a, b, c)\n\t).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n\treturn calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n\treturn calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n\treturn calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n\treturn (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n\tconst m = HUE_RE.exec(str);\n\tlet a = 255;\n\tlet v;\n\tif (!m) {\n\t\treturn;\n\t}\n\tif (m[5] !== v) {\n\t\ta = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n\t}\n\tconst h = hue(+m[2]);\n\tconst p1 = +m[3] / 100;\n\tconst p2 = +m[4] / 100;\n\tif (m[1] === 'hwb') {\n\t\tv = hwb2rgb(h, p1, p2);\n\t} else if (m[1] === 'hsv') {\n\t\tv = hsv2rgb(h, p1, p2);\n\t} else {\n\t\tv = hsl2rgb(h, p1, p2);\n\t}\n\treturn {\n\t\tr: v[0],\n\t\tg: v[1],\n\t\tb: v[2],\n\t\ta: a\n\t};\n}\nfunction rotate(v, deg) {\n\tvar h = rgb2hsl(v);\n\th[0] = hue(h[0] + deg);\n\th = hsl2rgb(h);\n\tv.r = h[0];\n\tv.g = h[1];\n\tv.b = h[2];\n}\nfunction hslString(v) {\n\tif (!v) {\n\t\treturn;\n\t}\n\tconst a = rgb2hsl(v);\n\tconst h = a[0];\n\tconst s = n2p(a[1]);\n\tconst l = n2p(a[2]);\n\treturn v.a < 255\n\t\t? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n\t\t: `hsl(${h}, ${s}%, ${l}%)`;\n}\nconst map$1 = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n\tconst unpacked = {};\n\tconst keys = Object.keys(names);\n\tconst tkeys = Object.keys(map$1);\n\tlet i, j, k, ok, nk;\n\tfor (i = 0; i < keys.length; i++) {\n\t\tok = nk = keys[i];\n\t\tfor (j = 0; j < tkeys.length; j++) {\n\t\t\tk = tkeys[j];\n\t\t\tnk = nk.replace(k, map$1[k]);\n\t\t}\n\t\tk = parseInt(names[ok], 16);\n\t\tunpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n\t}\n\treturn unpacked;\n}\nlet names$1;\nfunction nameParse(str) {\n\tif (!names$1) {\n\t\tnames$1 = unpack();\n\t\tnames$1.transparent = [0, 0, 0, 0];\n\t}\n\tconst a = names$1[str.toLowerCase()];\n\treturn a && {\n\t\tr: a[0],\n\t\tg: a[1],\n\t\tb: a[2],\n\t\ta: a.length === 4 ? a[3] : 255\n\t};\n}\nfunction modHSL(v, i, ratio) {\n\tif (v) {\n\t\tlet tmp = rgb2hsl(v);\n\t\ttmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n\t\ttmp = hsl2rgb(tmp);\n\t\tv.r = tmp[0];\n\t\tv.g = tmp[1];\n\t\tv.b = tmp[2];\n\t}\n}\nfunction clone(v, proto) {\n\treturn v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n\tvar v = {r: 0, g: 0, b: 0, a: 255};\n\tif (Array.isArray(input)) {\n\t\tif (input.length >= 3) {\n\t\t\tv = {r: input[0], g: input[1], b: input[2], a: 255};\n\t\t\tif (input.length > 3) {\n\t\t\t\tv.a = n2b(input[3]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tv = clone(input, {r: 0, g: 0, b: 0, a: 1});\n\t\tv.a = n2b(v.a);\n\t}\n\treturn v;\n}\nfunction functionParse(str) {\n\tif (str.charAt(0) === 'r') {\n\t\treturn rgbParse(str);\n\t}\n\treturn hueParse(str);\n}\nclass Color {\n\tconstructor(input) {\n\t\tif (input instanceof Color) {\n\t\t\treturn input;\n\t\t}\n\t\tconst type = typeof input;\n\t\tlet v;\n\t\tif (type === 'object') {\n\t\t\tv = fromObject(input);\n\t\t} else if (type === 'string') {\n\t\t\tv = hexParse(input) || nameParse(input) || functionParse(input);\n\t\t}\n\t\tthis._rgb = v;\n\t\tthis._valid = !!v;\n\t}\n\tget valid() {\n\t\treturn this._valid;\n\t}\n\tget rgb() {\n\t\tvar v = clone(this._rgb);\n\t\tif (v) {\n\t\t\tv.a = b2n(v.a);\n\t\t}\n\t\treturn v;\n\t}\n\tset rgb(obj) {\n\t\tthis._rgb = fromObject(obj);\n\t}\n\trgbString() {\n\t\treturn this._valid ? rgbString(this._rgb) : this._rgb;\n\t}\n\thexString() {\n\t\treturn this._valid ? hexString(this._rgb) : this._rgb;\n\t}\n\thslString() {\n\t\treturn this._valid ? hslString(this._rgb) : this._rgb;\n\t}\n\tmix(color, weight) {\n\t\tconst me = this;\n\t\tif (color) {\n\t\t\tconst c1 = me.rgb;\n\t\t\tconst c2 = color.rgb;\n\t\t\tlet w2;\n\t\t\tconst p = weight === w2 ? 0.5 : weight;\n\t\t\tconst w = 2 * p - 1;\n\t\t\tconst a = c1.a - c2.a;\n\t\t\tconst w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\t\tw2 = 1 - w1;\n\t\t\tc1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n\t\t\tc1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n\t\t\tc1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n\t\t\tc1.a = p * c1.a + (1 - p) * c2.a;\n\t\t\tme.rgb = c1;\n\t\t}\n\t\treturn me;\n\t}\n\tclone() {\n\t\treturn new Color(this.rgb);\n\t}\n\talpha(a) {\n\t\tthis._rgb.a = n2b(a);\n\t\treturn this;\n\t}\n\tclearer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 - ratio;\n\t\treturn this;\n\t}\n\tgreyscale() {\n\t\tconst rgb = this._rgb;\n\t\tconst val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n\t\trgb.r = rgb.g = rgb.b = val;\n\t\treturn this;\n\t}\n\topaquer(ratio) {\n\t\tconst rgb = this._rgb;\n\t\trgb.a *= 1 + ratio;\n\t\treturn this;\n\t}\n\tnegate() {\n\t\tconst v = this._rgb;\n\t\tv.r = 255 - v.r;\n\t\tv.g = 255 - v.g;\n\t\tv.b = 255 - v.b;\n\t\treturn this;\n\t}\n\tlighten(ratio) {\n\t\tmodHSL(this._rgb, 2, ratio);\n\t\treturn this;\n\t}\n\tdarken(ratio) {\n\t\tmodHSL(this._rgb, 2, -ratio);\n\t\treturn this;\n\t}\n\tsaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, ratio);\n\t\treturn this;\n\t}\n\tdesaturate(ratio) {\n\t\tmodHSL(this._rgb, 1, -ratio);\n\t\treturn this;\n\t}\n\trotate(deg) {\n\t\trotate(this._rgb, deg);\n\t\treturn this;\n\t}\n}\nfunction index_esm(input) {\n\treturn new Color(input);\n}\n\nconst isPatternOrGradient = (value) => value instanceof CanvasGradient || value instanceof CanvasPattern;\nfunction color(value) {\n  return isPatternOrGradient(value) ? value : index_esm(value);\n}\nfunction getHoverColor(value) {\n  return isPatternOrGradient(value)\n    ? value\n    : index_esm(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\nfunction getScope$1(node, key) {\n  if (!key) {\n    return node;\n  }\n  const keys = key.split('.');\n  for (let i = 0, n = keys.length; i < n; ++i) {\n    const k = keys[i];\n    node = node[k] || (node[k] = Object.create(null));\n  }\n  return node;\n}\nfunction set(root, scope, values) {\n  if (typeof scope === 'string') {\n    return merge(getScope$1(root, scope), values);\n  }\n  return merge(getScope$1(root, ''), scope);\n}\nclass Defaults {\n  constructor(_descriptors) {\n    this.animation = undefined;\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\n    this.borderColor = 'rgba(0,0,0,0.1)';\n    this.color = '#666';\n    this.datasets = {};\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\n    this.elements = {};\n    this.events = [\n      'mousemove',\n      'mouseout',\n      'click',\n      'touchstart',\n      'touchmove'\n    ];\n    this.font = {\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n      size: 12,\n      style: 'normal',\n      lineHeight: 1.2,\n      weight: null\n    };\n    this.hover = {};\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\n    this.indexAxis = 'x';\n    this.interaction = {\n      mode: 'nearest',\n      intersect: true\n    };\n    this.maintainAspectRatio = true;\n    this.onHover = null;\n    this.onClick = null;\n    this.parsing = true;\n    this.plugins = {};\n    this.responsive = true;\n    this.scale = undefined;\n    this.scales = {};\n    this.showLine = true;\n    this.describe(_descriptors);\n  }\n  set(scope, values) {\n    return set(this, scope, values);\n  }\n  get(scope) {\n    return getScope$1(this, scope);\n  }\n  describe(scope, values) {\n    return set(descriptors, scope, values);\n  }\n  override(scope, values) {\n    return set(overrides, scope, values);\n  }\n  route(scope, name, targetScope, targetName) {\n    const scopeObject = getScope$1(this, scope);\n    const targetScopeObject = getScope$1(this, targetScope);\n    const privateName = '_' + name;\n    Object.defineProperties(scopeObject, {\n      [privateName]: {\n        value: scopeObject[name],\n        writable: true\n      },\n      [name]: {\n        enumerable: true,\n        get() {\n          const local = this[privateName];\n          const target = targetScopeObject[targetName];\n          if (isObject(local)) {\n            return Object.assign({}, target, local);\n          }\n          return valueOrDefault(local, target);\n        },\n        set(value) {\n          this[privateName] = value;\n        }\n      }\n    });\n  }\n}\nvar defaults = new Defaults({\n  _scriptable: (name) => !name.startsWith('on'),\n  _indexable: (name) => name !== 'events',\n  hover: {\n    _fallback: 'interaction'\n  },\n  interaction: {\n    _scriptable: false,\n    _indexable: false,\n  }\n});\n\nfunction toFontString(font) {\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n    return null;\n  }\n  return (font.style ? font.style + ' ' : '')\n\t\t+ (font.weight ? font.weight + ' ' : '')\n\t\t+ font.size + 'px '\n\t\t+ font.family;\n}\nfunction _measureText(ctx, data, gc, longest, string) {\n  let textWidth = data[string];\n  if (!textWidth) {\n    textWidth = data[string] = ctx.measureText(string).width;\n    gc.push(string);\n  }\n  if (textWidth > longest) {\n    longest = textWidth;\n  }\n  return longest;\n}\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n  cache = cache || {};\n  let data = cache.data = cache.data || {};\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\n  if (cache.font !== font) {\n    data = cache.data = {};\n    gc = cache.garbageCollect = [];\n    cache.font = font;\n  }\n  ctx.save();\n  ctx.font = font;\n  let longest = 0;\n  const ilen = arrayOfThings.length;\n  let i, j, jlen, thing, nestedThing;\n  for (i = 0; i < ilen; i++) {\n    thing = arrayOfThings[i];\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n      longest = _measureText(ctx, data, gc, longest, thing);\n    } else if (isArray(thing)) {\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\n        nestedThing = thing[j];\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\n        }\n      }\n    }\n  }\n  ctx.restore();\n  const gcLen = gc.length / 2;\n  if (gcLen > arrayOfThings.length) {\n    for (i = 0; i < gcLen; i++) {\n      delete data[gc[i]];\n    }\n    gc.splice(0, gcLen);\n  }\n  return longest;\n}\nfunction _alignPixel(chart, pixel, width) {\n  const devicePixelRatio = chart.currentDevicePixelRatio;\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\nfunction clearCanvas(canvas, ctx) {\n  ctx = ctx || canvas.getContext('2d');\n  ctx.save();\n  ctx.resetTransform();\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\n  ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n  let type, xOffset, yOffset, size, cornerRadius;\n  const style = options.pointStyle;\n  const rotation = options.rotation;\n  const radius = options.radius;\n  let rad = (rotation || 0) * RAD_PER_DEG;\n  if (style && typeof style === 'object') {\n    type = style.toString();\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.rotate(rad);\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n      ctx.restore();\n      return;\n    }\n  }\n  if (isNaN(radius) || radius <= 0) {\n    return;\n  }\n  ctx.beginPath();\n  switch (style) {\n  default:\n    ctx.arc(x, y, radius, 0, TAU);\n    ctx.closePath();\n    break;\n  case 'triangle':\n    ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    rad += TWO_THIRDS_PI;\n    ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n    ctx.closePath();\n    break;\n  case 'rectRounded':\n    cornerRadius = radius * 0.516;\n    size = radius - cornerRadius;\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\n    ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n    ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n    ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n    ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n    ctx.closePath();\n    break;\n  case 'rect':\n    if (!rotation) {\n      size = Math.SQRT1_2 * radius;\n      ctx.rect(x - size, y - size, 2 * size, 2 * size);\n      break;\n    }\n    rad += QUARTER_PI;\n  case 'rectRot':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    ctx.closePath();\n    break;\n  case 'crossRot':\n    rad += QUARTER_PI;\n  case 'cross':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'star':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    rad += QUARTER_PI;\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    ctx.moveTo(x + yOffset, y - xOffset);\n    ctx.lineTo(x - yOffset, y + xOffset);\n    break;\n  case 'line':\n    xOffset = Math.cos(rad) * radius;\n    yOffset = Math.sin(rad) * radius;\n    ctx.moveTo(x - xOffset, y - yOffset);\n    ctx.lineTo(x + xOffset, y + yOffset);\n    break;\n  case 'dash':\n    ctx.moveTo(x, y);\n    ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n    break;\n  }\n  ctx.fill();\n  if (options.borderWidth > 0) {\n    ctx.stroke();\n  }\n}\nfunction _isPointInArea(point, area, margin) {\n  margin = margin || 0.5;\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\n}\nfunction clipArea(ctx, area) {\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n  ctx.clip();\n}\nfunction unclipArea(ctx) {\n  ctx.restore();\n}\nfunction _steppedLineTo(ctx, previous, target, flip, mode) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  if (mode === 'middle') {\n    const midpoint = (previous.x + target.x) / 2.0;\n    ctx.lineTo(midpoint, previous.y);\n    ctx.lineTo(midpoint, target.y);\n  } else if (mode === 'after' !== !!flip) {\n    ctx.lineTo(previous.x, target.y);\n  } else {\n    ctx.lineTo(target.x, previous.y);\n  }\n  ctx.lineTo(target.x, target.y);\n}\nfunction _bezierCurveTo(ctx, previous, target, flip) {\n  if (!previous) {\n    return ctx.lineTo(target.x, target.y);\n  }\n  ctx.bezierCurveTo(\n    flip ? previous.cp1x : previous.cp2x,\n    flip ? previous.cp1y : previous.cp2y,\n    flip ? target.cp2x : target.cp1x,\n    flip ? target.cp2y : target.cp1y,\n    target.x,\n    target.y);\n}\nfunction renderText(ctx, text, x, y, font, opts = {}) {\n  const lines = isArray(text) ? text : [text];\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n  let i, line;\n  ctx.save();\n  ctx.font = font.string;\n  setRenderOpts(ctx, opts);\n  for (i = 0; i < lines.length; ++i) {\n    line = lines[i];\n    if (stroke) {\n      if (opts.strokeColor) {\n        ctx.strokeStyle = opts.strokeColor;\n      }\n      if (!isNullOrUndef(opts.strokeWidth)) {\n        ctx.lineWidth = opts.strokeWidth;\n      }\n      ctx.strokeText(line, x, y, opts.maxWidth);\n    }\n    ctx.fillText(line, x, y, opts.maxWidth);\n    decorateText(ctx, x, y, line, opts);\n    y += font.lineHeight;\n  }\n  ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n  if (opts.translation) {\n    ctx.translate(opts.translation[0], opts.translation[1]);\n  }\n  if (!isNullOrUndef(opts.rotation)) {\n    ctx.rotate(opts.rotation);\n  }\n  if (opts.color) {\n    ctx.fillStyle = opts.color;\n  }\n  if (opts.textAlign) {\n    ctx.textAlign = opts.textAlign;\n  }\n  if (opts.textBaseline) {\n    ctx.textBaseline = opts.textBaseline;\n  }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n  if (opts.strikethrough || opts.underline) {\n    const metrics = ctx.measureText(line);\n    const left = x - metrics.actualBoundingBoxLeft;\n    const right = x + metrics.actualBoundingBoxRight;\n    const top = y - metrics.actualBoundingBoxAscent;\n    const bottom = y + metrics.actualBoundingBoxDescent;\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.beginPath();\n    ctx.lineWidth = opts.decorationWidth || 2;\n    ctx.moveTo(left, yDecoration);\n    ctx.lineTo(right, yDecoration);\n    ctx.stroke();\n  }\n}\nfunction addRoundedRectPath(ctx, rect) {\n  const {x, y, w, h, radius} = rect;\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n  ctx.lineTo(x, y + h - radius.bottomLeft);\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n  ctx.lineTo(x + w, y + radius.topRight);\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n  ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\nfunction toLineHeight(value, size) {\n  const matches = ('' + value).match(LINE_HEIGHT);\n  if (!matches || matches[1] === 'normal') {\n    return size * 1.2;\n  }\n  value = +matches[2];\n  switch (matches[3]) {\n  case 'px':\n    return value;\n  case '%':\n    value /= 100;\n    break;\n  }\n  return size * value;\n}\nconst numberOrZero = v => +v || 0;\nfunction _readValueToProps(value, props) {\n  const ret = {};\n  const objProps = isObject(props);\n  const keys = objProps ? Object.keys(props) : props;\n  const read = isObject(value)\n    ? objProps\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\n      : prop => value[prop]\n    : () => value;\n  for (const prop of keys) {\n    ret[prop] = numberOrZero(read(prop));\n  }\n  return ret;\n}\nfunction toTRBL(value) {\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\n}\nfunction toTRBLCorners(value) {\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\n}\nfunction toPadding(value) {\n  const obj = toTRBL(value);\n  obj.width = obj.left + obj.right;\n  obj.height = obj.top + obj.bottom;\n  return obj;\n}\nfunction toFont(options, fallback) {\n  options = options || {};\n  fallback = fallback || defaults.font;\n  let size = valueOrDefault(options.size, fallback.size);\n  if (typeof size === 'string') {\n    size = parseInt(size, 10);\n  }\n  let style = valueOrDefault(options.style, fallback.style);\n  if (style && !('' + style).match(FONT_STYLE)) {\n    console.warn('Invalid font style specified: \"' + style + '\"');\n    style = '';\n  }\n  const font = {\n    family: valueOrDefault(options.family, fallback.family),\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n    size,\n    style,\n    weight: valueOrDefault(options.weight, fallback.weight),\n    string: ''\n  };\n  font.string = toFontString(font);\n  return font;\n}\nfunction resolve(inputs, context, index, info) {\n  let cacheable = true;\n  let i, ilen, value;\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n    value = inputs[i];\n    if (value === undefined) {\n      continue;\n    }\n    if (context !== undefined && typeof value === 'function') {\n      value = value(context);\n      cacheable = false;\n    }\n    if (index !== undefined && isArray(value)) {\n      value = value[index % value.length];\n      cacheable = false;\n    }\n    if (value !== undefined) {\n      if (info && !cacheable) {\n        info.cacheable = false;\n      }\n      return value;\n    }\n  }\n}\nfunction _addGrace(minmax, grace, beginAtZero) {\n  const {min, max} = minmax;\n  const change = toDimension(grace, (max - min) / 2);\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\n  return {\n    min: keepZero(min, -Math.abs(change)),\n    max: keepZero(max, change)\n  };\n}\nfunction createContext(parentContext, context) {\n  return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _lookup(table, value, cmp) {\n  cmp = cmp || ((index) => table[index] < value);\n  let hi = table.length - 1;\n  let lo = 0;\n  let mid;\n  while (hi - lo > 1) {\n    mid = (lo + hi) >> 1;\n    if (cmp(mid)) {\n      lo = mid;\n    } else {\n      hi = mid;\n    }\n  }\n  return {lo, hi};\n}\nconst _lookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] < value);\nconst _rlookupByKey = (table, key, value) =>\n  _lookup(table, value, index => table[index][key] >= value);\nfunction _filterBetween(values, min, max) {\n  let start = 0;\n  let end = values.length;\n  while (start < end && values[start] < min) {\n    start++;\n  }\n  while (end > start && values[end - 1] > max) {\n    end--;\n  }\n  return start > 0 || end < values.length\n    ? values.slice(start, end)\n    : values;\n}\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\nfunction listenArrayEvents(array, listener) {\n  if (array._chartjs) {\n    array._chartjs.listeners.push(listener);\n    return;\n  }\n  Object.defineProperty(array, '_chartjs', {\n    configurable: true,\n    enumerable: false,\n    value: {\n      listeners: [listener]\n    }\n  });\n  arrayEvents.forEach((key) => {\n    const method = '_onData' + _capitalize(key);\n    const base = array[key];\n    Object.defineProperty(array, key, {\n      configurable: true,\n      enumerable: false,\n      value(...args) {\n        const res = base.apply(this, args);\n        array._chartjs.listeners.forEach((object) => {\n          if (typeof object[method] === 'function') {\n            object[method](...args);\n          }\n        });\n        return res;\n      }\n    });\n  });\n}\nfunction unlistenArrayEvents(array, listener) {\n  const stub = array._chartjs;\n  if (!stub) {\n    return;\n  }\n  const listeners = stub.listeners;\n  const index = listeners.indexOf(listener);\n  if (index !== -1) {\n    listeners.splice(index, 1);\n  }\n  if (listeners.length > 0) {\n    return;\n  }\n  arrayEvents.forEach((key) => {\n    delete array[key];\n  });\n  delete array._chartjs;\n}\nfunction _arrayUnique(items) {\n  const set = new Set();\n  let i, ilen;\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\n    set.add(items[i]);\n  }\n  if (set.size === ilen) {\n    return items;\n  }\n  return Array.from(set);\n}\n\nfunction _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\n  if (!defined(fallback)) {\n    fallback = _resolve('_fallback', scopes);\n  }\n  const cache = {\n    [Symbol.toStringTag]: 'Object',\n    _cacheable: true,\n    _scopes: scopes,\n    _rootScopes: rootScopes,\n    _fallback: fallback,\n    _getTarget: getTarget,\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete target._keys;\n      delete scopes[0][prop];\n      return true;\n    },\n    get(target, prop) {\n      return _cached(target, prop,\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(scopes[0]);\n    },\n    has(target, prop) {\n      return getKeysFromAllScopes(target).includes(prop);\n    },\n    ownKeys(target) {\n      return getKeysFromAllScopes(target);\n    },\n    set(target, prop, value) {\n      const storage = target._storage || (target._storage = getTarget());\n      storage[prop] = value;\n      delete target[prop];\n      delete target._keys;\n      return true;\n    }\n  });\n}\nfunction _attachContext(proxy, context, subProxy, descriptorDefaults) {\n  const cache = {\n    _cacheable: false,\n    _proxy: proxy,\n    _context: context,\n    _subProxy: subProxy,\n    _stack: new Set(),\n    _descriptors: _descriptors(proxy, descriptorDefaults),\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n  };\n  return new Proxy(cache, {\n    deleteProperty(target, prop) {\n      delete target[prop];\n      delete proxy[prop];\n      return true;\n    },\n    get(target, prop, receiver) {\n      return _cached(target, prop,\n        () => _resolveWithContext(target, prop, receiver));\n    },\n    getOwnPropertyDescriptor(target, prop) {\n      return target._descriptors.allKeys\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\n    },\n    getPrototypeOf() {\n      return Reflect.getPrototypeOf(proxy);\n    },\n    has(target, prop) {\n      return Reflect.has(proxy, prop);\n    },\n    ownKeys() {\n      return Reflect.ownKeys(proxy);\n    },\n    set(target, prop, value) {\n      proxy[prop] = value;\n      delete target[prop];\n      return true;\n    }\n  });\n}\nfunction _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\n  return {\n    allKeys: _allKeys,\n    scriptable: _scriptable,\n    indexable: _indexable,\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\n  };\n}\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters';\nfunction _cached(target, prop, resolve) {\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\n    return target[prop];\n  }\n  const value = resolve();\n  target[prop] = value;\n  return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  let value = _proxy[prop];\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\n    value = _resolveScriptable(prop, value, target, receiver);\n  }\n  if (isArray(value) && value.length) {\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\n  }\n  if (needsSubResolver(prop, value)) {\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n  }\n  return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n  const {_proxy, _context, _subProxy, _stack} = target;\n  if (_stack.has(prop)) {\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n  }\n  _stack.add(prop);\n  value = value(_context, _subProxy || receiver);\n  _stack.delete(prop);\n  if (isObject(value)) {\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n  }\n  return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\n  if (defined(_context.index) && isIndexable(prop)) {\n    value = value[_context.index % value.length];\n  } else if (isObject(value[0])) {\n    const arr = value;\n    const scopes = _proxy._scopes.filter(s => s !== arr);\n    value = [];\n    for (const item of arr) {\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n    }\n  }\n  return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent) => key === true ? parent\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback) {\n  for (const parent of parentScopes) {\n    const scope = getScope(key, parent);\n    if (scope) {\n      set.add(scope);\n      const fallback = resolveFallback(scope._fallback, key, scope);\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n        return fallback;\n      }\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n      return null;\n    }\n  }\n  return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n  const rootScopes = resolver._rootScopes;\n  const fallback = resolveFallback(resolver._fallback, prop, value);\n  const allScopes = [...parentScopes, ...rootScopes];\n  const set = new Set();\n  set.add(value);\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop);\n  if (key === null) {\n    return false;\n  }\n  if (defined(fallback) && fallback !== prop) {\n    key = addScopesFromKey(set, allScopes, fallback, key);\n    if (key === null) {\n      return false;\n    }\n  }\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\n    () => subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback) {\n  while (key) {\n    key = addScopes(set, allScopes, key, fallback);\n  }\n  return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n  const parent = resolver._getTarget();\n  if (!(prop in parent)) {\n    parent[prop] = {};\n  }\n  const target = parent[prop];\n  if (isArray(target) && isObject(value)) {\n    return value;\n  }\n  return target;\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n  let value;\n  for (const prefix of prefixes) {\n    value = _resolve(readKey(prefix, prop), scopes);\n    if (defined(value)) {\n      return needsSubResolver(prop, value)\n        ? createSubResolver(scopes, proxy, prop, value)\n        : value;\n    }\n  }\n}\nfunction _resolve(key, scopes) {\n  for (const scope of scopes) {\n    if (!scope) {\n      continue;\n    }\n    const value = scope[key];\n    if (defined(value)) {\n      return value;\n    }\n  }\n}\nfunction getKeysFromAllScopes(target) {\n  let keys = target._keys;\n  if (!keys) {\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n  }\n  return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n  const set = new Set();\n  for (const scope of scopes) {\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\n      set.add(key);\n    }\n  }\n  return Array.from(set);\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i) => i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis) => indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\n  const current = middlePoint;\n  const next = afterPoint.skip ? middlePoint : afterPoint;\n  const d01 = distanceBetweenPoints(current, previous);\n  const d12 = distanceBetweenPoints(next, current);\n  let s01 = d01 / (d01 + d12);\n  let s12 = d12 / (d01 + d12);\n  s01 = isNaN(s01) ? 0 : s01;\n  s12 = isNaN(s12) ? 0 : s12;\n  const fa = t * s01;\n  const fb = t * s12;\n  return {\n    previous: {\n      x: current.x - fa * (next.x - previous.x),\n      y: current.y - fa * (next.y - previous.y)\n    },\n    next: {\n      x: current.x + fb * (next.x - previous.x),\n      y: current.y + fb * (next.y - previous.y)\n    }\n  };\n}\nfunction monotoneAdjust(points, deltaK, mK) {\n  const pointsLen = points.length;\n  let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen - 1; ++i) {\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent || !pointAfter) {\n      continue;\n    }\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\n      mK[i] = mK[i + 1] = 0;\n      continue;\n    }\n    alphaK = mK[i] / deltaK[i];\n    betaK = mK[i + 1] / deltaK[i];\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n    if (squaredMagnitude <= 9) {\n      continue;\n    }\n    tauK = 3 / Math.sqrt(squaredMagnitude);\n    mK[i] = alphaK * tauK * deltaK[i];\n    mK[i + 1] = betaK * tauK * deltaK[i];\n  }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  let delta, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (let i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    const iPixel = pointCurrent[indexAxis];\n    const vPixel = pointCurrent[valueAxis];\n    if (pointBefore) {\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n    }\n    if (pointAfter) {\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n    }\n  }\n}\nfunction splineCurveMonotone(points, indexAxis = 'x') {\n  const valueAxis = getValueAxis(indexAxis);\n  const pointsLen = points.length;\n  const deltaK = Array(pointsLen).fill(0);\n  const mK = Array(pointsLen);\n  let i, pointBefore, pointCurrent;\n  let pointAfter = getPoint(points, 0);\n  for (i = 0; i < pointsLen; ++i) {\n    pointBefore = pointCurrent;\n    pointCurrent = pointAfter;\n    pointAfter = getPoint(points, i + 1);\n    if (!pointCurrent) {\n      continue;\n    }\n    if (pointAfter) {\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n    }\n    mK[i] = !pointBefore ? deltaK[i]\n      : !pointAfter ? deltaK[i - 1]\n      : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\n      : (deltaK[i - 1] + deltaK[i]) / 2;\n  }\n  monotoneAdjust(points, deltaK, mK);\n  monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n  return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n  let i, ilen, point, inArea, inAreaPrev;\n  let inAreaNext = _isPointInArea(points[0], area);\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\n    inAreaPrev = inArea;\n    inArea = inAreaNext;\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n    if (!inArea) {\n      continue;\n    }\n    point = points[i];\n    if (inAreaPrev) {\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n    }\n    if (inAreaNext) {\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n    }\n  }\n}\nfunction _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n  let i, ilen, point, controlPoints;\n  if (options.spanGaps) {\n    points = points.filter((pt) => !pt.skip);\n  }\n  if (options.cubicInterpolationMode === 'monotone') {\n    splineCurveMonotone(points, indexAxis);\n  } else {\n    let prev = loop ? points[points.length - 1] : points[0];\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\n      point = points[i];\n      controlPoints = splineCurve(\n        prev,\n        point,\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\n        options.tension\n      );\n      point.cp1x = controlPoints.previous.x;\n      point.cp1y = controlPoints.previous.y;\n      point.cp2x = controlPoints.next.x;\n      point.cp2y = controlPoints.next.y;\n      prev = point;\n    }\n  }\n  if (options.capBezierPoints) {\n    capBezierPoints(points, area);\n  }\n}\n\nfunction _isDomSupported() {\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\nfunction _getParentNode(domNode) {\n  let parent = domNode.parentNode;\n  if (parent && parent.toString() === '[object ShadowRoot]') {\n    parent = parent.host;\n  }\n  return parent;\n}\nfunction parseMaxStyle(styleValue, node, parentProperty) {\n  let valueInPixels;\n  if (typeof styleValue === 'string') {\n    valueInPixels = parseInt(styleValue, 10);\n    if (styleValue.indexOf('%') !== -1) {\n      valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n    }\n  } else {\n    valueInPixels = styleValue;\n  }\n  return valueInPixels;\n}\nconst getComputedStyle = (element) => window.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n  return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = ['top', 'right', 'bottom', 'left'];\nfunction getPositionedStyle(styles, style, suffix) {\n  const result = {};\n  suffix = suffix ? '-' + suffix : '';\n  for (let i = 0; i < 4; i++) {\n    const pos = positions[i];\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n  }\n  result.width = result.left + result.right;\n  result.height = result.top + result.bottom;\n  return result;\n}\nconst useOffsetPos = (x, y, target) => (x > 0 || y > 0) && (!target || !target.shadowRoot);\nfunction getCanvasPosition(evt, canvas) {\n  const e = evt.native || evt;\n  const touches = e.touches;\n  const source = touches && touches.length ? touches[0] : e;\n  const {offsetX, offsetY} = source;\n  let box = false;\n  let x, y;\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\n    x = offsetX;\n    y = offsetY;\n  } else {\n    const rect = canvas.getBoundingClientRect();\n    x = source.clientX - rect.left;\n    y = source.clientY - rect.top;\n    box = true;\n  }\n  return {x, y, box};\n}\nfunction getRelativePosition(evt, chart) {\n  const {canvas, currentDevicePixelRatio} = chart;\n  const style = getComputedStyle(canvas);\n  const borderBox = style.boxSizing === 'border-box';\n  const paddings = getPositionedStyle(style, 'padding');\n  const borders = getPositionedStyle(style, 'border', 'width');\n  const {x, y, box} = getCanvasPosition(evt, canvas);\n  const xOffset = paddings.left + (box && borders.left);\n  const yOffset = paddings.top + (box && borders.top);\n  let {width, height} = chart;\n  if (borderBox) {\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  return {\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n  };\n}\nfunction getContainerSize(canvas, width, height) {\n  let maxWidth, maxHeight;\n  if (width === undefined || height === undefined) {\n    const container = _getParentNode(canvas);\n    if (!container) {\n      width = canvas.clientWidth;\n      height = canvas.clientHeight;\n    } else {\n      const rect = container.getBoundingClientRect();\n      const containerStyle = getComputedStyle(container);\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\n      width = rect.width - containerPadding.width - containerBorder.width;\n      height = rect.height - containerPadding.height - containerBorder.height;\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n    }\n  }\n  return {\n    width,\n    height,\n    maxWidth: maxWidth || INFINITY,\n    maxHeight: maxHeight || INFINITY\n  };\n}\nconst round1 = v => Math.round(v * 10) / 10;\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n  const style = getComputedStyle(canvas);\n  const margins = getPositionedStyle(style, 'margin');\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n  let {width, height} = containerSize;\n  if (style.boxSizing === 'content-box') {\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const paddings = getPositionedStyle(style, 'padding');\n    width -= paddings.width + borders.width;\n    height -= paddings.height + borders.height;\n  }\n  width = Math.max(0, width - margins.width);\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n  if (width && !height) {\n    height = round1(width / 2);\n  }\n  return {\n    width,\n    height\n  };\n}\nfunction retinaScale(chart, forceRatio, forceStyle) {\n  const pixelRatio = forceRatio || 1;\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\n  chart.height = deviceHeight / pixelRatio;\n  chart.width = deviceWidth / pixelRatio;\n  const canvas = chart.canvas;\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\n    canvas.style.height = `${chart.height}px`;\n    canvas.style.width = `${chart.width}px`;\n  }\n  if (chart.currentDevicePixelRatio !== pixelRatio\n      || canvas.height !== deviceHeight\n      || canvas.width !== deviceWidth) {\n    chart.currentDevicePixelRatio = pixelRatio;\n    canvas.height = deviceHeight;\n    canvas.width = deviceWidth;\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    return true;\n  }\n  return false;\n}\nconst supportsEventListenerOptions = (function() {\n  let passiveSupported = false;\n  try {\n    const options = {\n      get passive() {\n        passiveSupported = true;\n        return false;\n      }\n    };\n    window.addEventListener('test', null, options);\n    window.removeEventListener('test', null, options);\n  } catch (e) {\n  }\n  return passiveSupported;\n}());\nfunction readUsedSize(element, property) {\n  const value = getStyle(element, property);\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n  return matches ? +matches[1] : undefined;\n}\n\nfunction _pointInLine(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: p1.y + t * (p2.y - p1.y)\n  };\n}\nfunction _steppedInterpolation(p1, p2, t, mode) {\n  return {\n    x: p1.x + t * (p2.x - p1.x),\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\n    : mode === 'after' ? t < 1 ? p1.y : p2.y\n    : t > 0 ? p2.y : p1.y\n  };\n}\nfunction _bezierInterpolation(p1, p2, t, mode) {\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\n  const a = _pointInLine(p1, cp1, t);\n  const b = _pointInLine(cp1, cp2, t);\n  const c = _pointInLine(cp2, p2, t);\n  const d = _pointInLine(a, b, t);\n  const e = _pointInLine(b, c, t);\n  return _pointInLine(d, e, t);\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n  options = options || {};\n  const cacheKey = locale + JSON.stringify(options);\n  let formatter = intlCache.get(cacheKey);\n  if (!formatter) {\n    formatter = new Intl.NumberFormat(locale, options);\n    intlCache.set(cacheKey, formatter);\n  }\n  return formatter;\n}\nfunction formatNumber(num, locale, options) {\n  return getNumberFormat(locale, options).format(num);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n  return {\n    x(x) {\n      return rectX + rectX + width - x;\n    },\n    setWidth(w) {\n      width = w;\n    },\n    textAlign(align) {\n      if (align === 'center') {\n        return align;\n      }\n      return align === 'right' ? 'left' : 'right';\n    },\n    xPlus(x, value) {\n      return x - value;\n    },\n    leftForLtr(x, itemWidth) {\n      return x - itemWidth;\n    },\n  };\n};\nconst getLeftToRightAdapter = function() {\n  return {\n    x(x) {\n      return x;\n    },\n    setWidth(w) {\n    },\n    textAlign(align) {\n      return align;\n    },\n    xPlus(x, value) {\n      return x + value;\n    },\n    leftForLtr(x, _itemWidth) {\n      return x;\n    },\n  };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n  let style, original;\n  if (direction === 'ltr' || direction === 'rtl') {\n    style = ctx.canvas.style;\n    original = [\n      style.getPropertyValue('direction'),\n      style.getPropertyPriority('direction'),\n    ];\n    style.setProperty('direction', direction, 'important');\n    ctx.prevTextDirection = original;\n  }\n}\nfunction restoreTextDirection(ctx, original) {\n  if (original !== undefined) {\n    delete ctx.prevTextDirection;\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\n  }\n}\n\nfunction propertyFn(property) {\n  if (property === 'angle') {\n    return {\n      between: _angleBetween,\n      compare: _angleDiff,\n      normalize: _normalizeAngle,\n    };\n  }\n  return {\n    between: (n, s, e) => n >= Math.min(s, e) && n <= Math.max(e, s),\n    compare: (a, b) => a - b,\n    normalize: x => x\n  };\n}\nfunction normalizeSegment({start, end, count, loop, style}) {\n  return {\n    start: start % count,\n    end: end % count,\n    loop: loop && (end - start + 1) % count === 0,\n    style\n  };\n}\nfunction getSegment(segment, points, bounds) {\n  const {property, start: startBound, end: endBound} = bounds;\n  const {between, normalize} = propertyFn(property);\n  const count = points.length;\n  let {start, end, loop} = segment;\n  let i, ilen;\n  if (loop) {\n    start += count;\n    end += count;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n        break;\n      }\n      start--;\n      end--;\n    }\n    start %= count;\n    end %= count;\n  }\n  if (end < start) {\n    end += count;\n  }\n  return {start, end, loop, style: segment.style};\n}\nfunction _boundSegment(segment, points, bounds) {\n  if (!bounds) {\n    return [segment];\n  }\n  const {property, start: startBound, end: endBound} = bounds;\n  const count = points.length;\n  const {compare, between, normalize} = propertyFn(property);\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\n  const result = [];\n  let inside = false;\n  let subStart = null;\n  let value, point, prevValue;\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\n  const shouldStart = () => inside || startIsBefore();\n  const shouldStop = () => !inside || endIsBefore();\n  for (let i = start, prev = start; i <= end; ++i) {\n    point = points[i % count];\n    if (point.skip) {\n      continue;\n    }\n    value = normalize(point[property]);\n    if (value === prevValue) {\n      continue;\n    }\n    inside = between(value, startBound, endBound);\n    if (subStart === null && shouldStart()) {\n      subStart = compare(value, startBound) === 0 ? i : prev;\n    }\n    if (subStart !== null && shouldStop()) {\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\n      subStart = null;\n    }\n    prev = i;\n    prevValue = value;\n  }\n  if (subStart !== null) {\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\n  }\n  return result;\n}\nfunction _boundSegments(line, bounds) {\n  const result = [];\n  const segments = line.segments;\n  for (let i = 0; i < segments.length; i++) {\n    const sub = _boundSegment(segments[i], line.points, bounds);\n    if (sub.length) {\n      result.push(...sub);\n    }\n  }\n  return result;\n}\nfunction findStartAndEnd(points, count, loop, spanGaps) {\n  let start = 0;\n  let end = count - 1;\n  if (loop && !spanGaps) {\n    while (start < count && !points[start].skip) {\n      start++;\n    }\n  }\n  while (start < count && points[start].skip) {\n    start++;\n  }\n  start %= count;\n  if (loop) {\n    end += start;\n  }\n  while (end > start && points[end % count].skip) {\n    end--;\n  }\n  end %= count;\n  return {start, end};\n}\nfunction solidSegments(points, start, max, loop) {\n  const count = points.length;\n  const result = [];\n  let last = start;\n  let prev = points[start];\n  let end;\n  for (end = start + 1; end <= max; ++end) {\n    const cur = points[end % count];\n    if (cur.skip || cur.stop) {\n      if (!prev.skip) {\n        loop = false;\n        result.push({start: start % count, end: (end - 1) % count, loop});\n        start = last = cur.stop ? end : null;\n      }\n    } else {\n      last = end;\n      if (prev.skip) {\n        start = end;\n      }\n    }\n    prev = cur;\n  }\n  if (last !== null) {\n    result.push({start: start % count, end: last % count, loop});\n  }\n  return result;\n}\nfunction _computeSegments(line, segmentOptions) {\n  const points = line.points;\n  const spanGaps = line.options.spanGaps;\n  const count = points.length;\n  if (!count) {\n    return [];\n  }\n  const loop = !!line._loop;\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\n  if (spanGaps === true) {\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\n  }\n  const max = end < start ? end + count : end;\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\nfunction splitByStyles(line, segments, points, segmentOptions) {\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\n    return segments;\n  }\n  return doSplitByStyles(line, segments, points, segmentOptions);\n}\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\n  const chartContext = line._chart.getContext();\n  const baseStyle = readStyle(line.options);\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\n  const count = points.length;\n  const result = [];\n  let prevStyle = baseStyle;\n  let start = segments[0].start;\n  let i = start;\n  function addStyle(s, e, l, st) {\n    const dir = spanGaps ? -1 : 1;\n    if (s === e) {\n      return;\n    }\n    s += count;\n    while (points[s % count].skip) {\n      s -= dir;\n    }\n    while (points[e % count].skip) {\n      e += dir;\n    }\n    if (s % count !== e % count) {\n      result.push({start: s % count, end: e % count, loop: l, style: st});\n      prevStyle = st;\n      start = e % count;\n    }\n  }\n  for (const segment of segments) {\n    start = spanGaps ? start : segment.start;\n    let prev = points[start % count];\n    let style;\n    for (i = start + 1; i <= segment.end; i++) {\n      const pt = points[i % count];\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n        type: 'segment',\n        p0: prev,\n        p1: pt,\n        p0DataIndex: (i - 1) % count,\n        p1DataIndex: i % count,\n        datasetIndex\n      })));\n      if (styleChanged(style, prevStyle)) {\n        addStyle(start, i - 1, segment.loop, prevStyle);\n      }\n      prev = pt;\n      prevStyle = style;\n    }\n    if (start < i - 1) {\n      addStyle(start, i - 1, segment.loop, prevStyle);\n    }\n  }\n  return result;\n}\nfunction readStyle(options) {\n  return {\n    backgroundColor: options.backgroundColor,\n    borderCapStyle: options.borderCapStyle,\n    borderDash: options.borderDash,\n    borderDashOffset: options.borderDashOffset,\n    borderJoinStyle: options.borderJoinStyle,\n    borderWidth: options.borderWidth,\n    borderColor: options.borderColor\n  };\n}\nfunction styleChanged(style, prevStyle) {\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { _alignStartEnd as $, _rlookupByKey as A, toPadding as B, each as C, getMaximumSize as D, _getParentNode as E, readUsedSize as F, throttled as G, HALF_PI as H, supportsEventListenerOptions as I, _isDomSupported as J, log10 as K, _factorize as L, finiteOrDefault as M, callback as N, _addGrace as O, PI as P, toDegrees as Q, _measureText as R, _int16Range as S, TAU as T, _alignPixel as U, clipArea as V, renderText as W, unclipArea as X, toFont as Y, _toLeftRightCenter as Z, _arrayUnique as _, resolve as a, overrides as a0, merge as a1, _capitalize as a2, descriptors as a3, isFunction as a4, _attachContext as a5, _createResolver as a6, _descriptors as a7, mergeIf as a8, uid as a9, distanceBetweenPoints as aA, _setMinAndMaxByKey as aB, niceNum as aC, almostWhole as aD, almostEquals as aE, _decimalPlaces as aF, _longestText as aG, _filterBetween as aH, _lookup as aI, getHoverColor as aJ, clone$1 as aK, _merger as aL, _mergerIf as aM, _deprecated as aN, toFontString as aO, splineCurve as aP, splineCurveMonotone as aQ, getStyle as aR, fontString as aS, toLineHeight as aT, PITAU as aU, INFINITY as aV, RAD_PER_DEG as aW, QUARTER_PI as aX, TWO_THIRDS_PI as aY, _angleDiff as aZ, debounce as aa, retinaScale as ab, clearCanvas as ac, setsEqual as ad, _elementsEqual as ae, getAngleFromPoint as af, _readValueToProps as ag, _updateBezierControlPoints as ah, _computeSegments as ai, _boundSegments as aj, _steppedInterpolation as ak, _bezierInterpolation as al, _pointInLine as am, _steppedLineTo as an, _bezierCurveTo as ao, drawPoint as ap, addRoundedRectPath as aq, toTRBL as ar, toTRBLCorners as as, _boundSegment as at, _normalizeAngle as au, getRtlAdapter as av, overrideTextDirection as aw, _textX as ax, restoreTextDirection as ay, noop as az, isArray as b, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, createContext as h, isObject as i, defined as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, isNumber as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _limitValue as w, _lookupByKey as x, getRelativePosition as y, _isPointInArea as z };\n","/*!\n * Chart.js v3.6.0\n * https://www.chartjs.org\n * (c) 2021 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, d as defaults, i as isObject, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as createContext, j as defined, s as sign, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as isNumber, w as _limitValue, x as _lookupByKey, y as getRelativePosition$1, z as _isPointInArea, A as _rlookupByKey, B as toPadding, C as each, D as getMaximumSize, E as _getParentNode, F as readUsedSize, G as throttled, I as supportsEventListenerOptions, J as _isDomSupported, K as log10, L as _factorize, M as finiteOrDefault, N as callback, O as _addGrace, Q as toDegrees, R as _measureText, S as _int16Range, U as _alignPixel, V as clipArea, W as renderText, X as unclipArea, Y as toFont, Z as _toLeftRightCenter, $ as _alignStartEnd, a0 as overrides, a1 as merge, a2 as _capitalize, a3 as descriptors, a4 as isFunction, a5 as _attachContext, a6 as _createResolver, a7 as _descriptors, a8 as mergeIf, a9 as uid, aa as debounce, ab as retinaScale, ac as clearCanvas, ad as setsEqual, ae as _elementsEqual, af as getAngleFromPoint, ag as _readValueToProps, ah as _updateBezierControlPoints, ai as _computeSegments, aj as _boundSegments, ak as _steppedInterpolation, al as _bezierInterpolation, am as _pointInLine, an as _steppedLineTo, ao as _bezierCurveTo, ap as drawPoint, aq as addRoundedRectPath, ar as toTRBL, as as toTRBLCorners, at as _boundSegment, au as _normalizeAngle, av as getRtlAdapter, aw as overrideTextDirection, ax as _textX, ay as restoreTextDirection, az as noop, aA as distanceBetweenPoints, aB as _setMinAndMaxByKey, aC as niceNum, aD as almostWhole, aE as almostEquals, aF as _decimalPlaces, aG as _longestText, aH as _filterBetween, aI as _lookup } from './chunks/helpers.segment.js';\nexport { d as defaults } from './chunks/helpers.segment.js';\n\nclass Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n  _update(date = Date.now()) {\n    let remaining = 0;\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n      for (; i >= 0; --i) {\n        item = items[i];\n        if (item._active) {\n          if (item._total > anims.duration) {\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n      remaining += items.length;\n    });\n    this._lastDate = date;\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\nvar animator = new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color(from, to, factor) {\n    const c0 = color(from || transparent);\n    const c1 = c0.valid && color(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\nclass Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n  active() {\n    return this._active;\n  }\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n  cancel() {\n    if (this._active) {\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n    this._active = from !== to && (loop || (elapsed < duration));\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n    this._target[prop] = this._fn(from, to, factor);\n  }\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n\nconst numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\nconst colors = ['color', 'borderColor', 'backgroundColor'];\ndefaults.set('animation', {\n  delay: undefined,\n  duration: 1000,\n  easing: 'easeOutQuart',\n  fn: undefined,\n  from: undefined,\n  loop: undefined,\n  to: undefined,\n  type: undefined,\n});\nconst animationOptions = Object.keys(defaults.animation);\ndefaults.describe('animation', {\n  _fallback: false,\n  _indexable: false,\n  _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\n});\ndefaults.set('animations', {\n  colors: {\n    type: 'color',\n    properties: colors\n  },\n  numbers: {\n    type: 'number',\n    properties: numbers\n  },\n});\ndefaults.describe('animations', {\n  _fallback: 'animation',\n});\ndefaults.set('transitions', {\n  active: {\n    animation: {\n      duration: 400\n    }\n  },\n  resize: {\n    animation: {\n      duration: 0\n    }\n  },\n  show: {\n    animations: {\n      colors: {\n        from: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        duration: 0\n      },\n    }\n  },\n  hide: {\n    animations: {\n      colors: {\n        to: 'transparent'\n      },\n      visible: {\n        type: 'boolean',\n        easing: 'linear',\n        fn: v => v | 0\n      },\n    }\n  }\n});\nclass Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n    const animatedProps = this._properties;\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n      });\n    }\n    return animations;\n  }\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n      if (animation) {\n        if (cfg && animation.active()) {\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        target[prop] = value;\n        continue;\n      }\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n  update(target, values) {\n    if (this._properties.size === 0) {\n      Object.assign(target, values);\n      return;\n    }\n    const animations = this._createAnimations(target, values);\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\nfunction toClip(value) {\n  let t, r, b, l;\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n  if (value === null) {\n    return;\n  }\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isNumberFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\nfunction convertObjectDataToArray(data) {\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      x: key,\n      y: data[key]\n    };\n  }\n  return adata;\n}\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n  return null;\n}\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {});\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n  }\n}\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\nfunction clearStacks(meta, items) {\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n  }\n}\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\nclass DatasetController {\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.initialize();\n  }\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n  }\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n  reset() {\n    this._update('reset');\n  }\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n    if (isObject(data)) {\n      this._data = convertObjectDataToArray(data);\n    } else if (_data !== data) {\n      if (_data) {\n        unlistenArrayEvents(_data, this);\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n  addElements() {\n    const meta = this._cachedMeta;\n    this._dataCheck();\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n    this._dataCheck();\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n    this._resyncElements(resetNewElements);\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n  }\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        break;\n      }\n    }\n    if (sorted) {\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isNumberFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n  getMaxOverflow() {\n    return false;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.configure();\n    this._cachedDataOpts = {};\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n  update(mode) {}\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    let i;\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    const context = () => this.getContext(index, active);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n    if (values.$shared) {\n      values.$shared = sharing;\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n    return values;\n  }\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n    if (count) {\n      this.parse(0, count);\n    }\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n  updateElements(element, start, count, mode) {}\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n  }\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n  _onDataSplice(start, count) {\n    this._sync(['_removeElements', start, count]);\n    this._sync(['_insertElements', start, arguments.length - 2]);\n  }\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\nDatasetController.defaults = {};\nDatasetController.prototype.datasetElementType = null;\nDatasetController.prototype.dataElementType = null;\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n  return min;\n}\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\nclass BarController extends DatasetController {\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n  getMaxOverflow() {\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n  _getStacks(last, dataIndex) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const metasets = iScale.getMatchingVisibleMetas(this._type);\n    const stacked = iScale.options.stacked;\n    const ilen = metasets.length;\n    const stacks = [];\n    let i, item;\n    for (i = 0; i < ilen; ++i) {\n      item = metasets[i];\n      if (!item.controller.options.grouped) {\n        continue;\n      }\n      if (typeof dataIndex !== 'undefined') {\n        const val = item.controller.getParsed(dataIndex)[\n          item.controller._cachedMeta.vScale.axis\n        ];\n        if (isNullOrUndef(val) || isNaN(val)) {\n          continue;\n        }\n      }\n      if (stacked === false || stacks.indexOf(item.stack) === -1 ||\n\t\t\t\t(stacked === undefined && item.stack === undefined)) {\n        stacks.push(item.stack);\n      }\n      if (item.index === last) {\n        break;\n      }\n    }\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n    return stacks;\n  }\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1;\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      head = base;\n    }\n    size = head - base;\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      head = base + size;\n    }\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n}\nBarController.id = 'bar';\nBarController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n};\nBarController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true,\n    }\n  }\n};\n\nclass BubbleController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n    return {\n      label: meta.label,\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n  update(mode) {\n    const points = this._cachedMeta.data;\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n      if (includeOptions) {\n        properties.options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n      this.updateElement(point, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n    return values;\n  }\n}\nBubbleController.id = 'bubble';\nBubbleController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n};\nBubbleController.overrides = {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        }\n      }\n    }\n  }\n};\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\nclass DoughnutController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n  linkScales() {}\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n    meta.total = this.calculateTotal();\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    let startAngle = this._getRotation();\n    let i;\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n      this.updateElement(arc, i, properties, mode);\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n    return total;\n  }\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n    if (!arcs) {\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          if (controller !== this) {\n            controller.configure();\n          }\n          break;\n        }\n      }\n    }\n    if (!arcs) {\n      return 0;\n    }\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n  getMaxOffset(arcs) {\n    let max = 0;\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n    return ringWeightOffset;\n  }\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\nDoughnutController.id = 'doughnut';\nDoughnutController.defaults = {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    },\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r',\n};\nDoughnutController.descriptors = {\n  _scriptable: (name) => name !== 'spacing',\n  _indexable: (name) => name !== 'spacing',\n};\nDoughnutController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(tooltipItem) {\n          let dataLabel = tooltipItem.label;\n          const value = ': ' + tooltipItem.formattedValue;\n          if (isArray(dataLabel)) {\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n          return dataLabel;\n        }\n      }\n    }\n  }\n};\n\nclass LineController extends DatasetController {\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n    this._drawStart = start;\n    this._drawCount = count;\n    if (scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n    this.updateElements(points, start, count, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n      prevParsed = parsed;\n    }\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\nLineController.id = 'line';\nLineController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false,\n};\nLineController.overrides = {\n  scales: {\n    _index_: {\n      type: 'category',\n    },\n    _value_: {\n      type: 'linear',\n    },\n  }\n};\nfunction getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n  const pointCount = points.length;\n  let start = 0;\n  let count = pointCount;\n  if (meta._sorted) {\n    const {iScale, _parsed} = meta;\n    const axis = iScale.axis;\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n    if (minDefined) {\n      start = _limitValue(Math.min(\n        _lookupByKey(_parsed, iScale.axis, min).lo,\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\n      0, pointCount - 1);\n    }\n    if (maxDefined) {\n      count = _limitValue(Math.max(\n        _lookupByKey(_parsed, iScale.axis, max).hi + 1,\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max)).hi + 1),\n      start, pointCount) - start;\n    } else {\n      count = pointCount - start;\n    }\n  }\n  return {start, count};\n}\nfunction scaleRangesChanged(meta) {\n  const {xScale, yScale, _scaleRanges} = meta;\n  const newRanges = {\n    xmin: xScale.min,\n    xmax: xScale.max,\n    ymin: yScale.min,\n    ymax: yScale.max\n  };\n  if (!_scaleRanges) {\n    meta._scaleRanges = newRanges;\n    return true;\n  }\n  const changed = _scaleRanges.xmin !== xScale.min\n\t\t|| _scaleRanges.xmax !== xScale.max\n\t\t|| _scaleRanges.ymin !== yScale.min\n\t\t|| _scaleRanges.ymax !== yScale.max;\n  Object.assign(_scaleRanges, newRanges);\n  return changed;\n}\n\nclass PolarAreaController extends DatasetController {\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const dataset = this.getDataset();\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n    const defaultAngle = 360 / this.countVisibleElements();\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(dataset.data[i]) : 0;\n      angle = endAngle;\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n  countVisibleElements() {\n    const dataset = this.getDataset();\n    const meta = this._cachedMeta;\n    let count = 0;\n    meta.data.forEach((element, index) => {\n      if (!isNaN(dataset.data[index]) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n    return count;\n  }\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\nPolarAreaController.id = 'polarArea';\nPolarAreaController.defaults = {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    },\n  },\n  indexAxis: 'r',\n  startAngle: 0,\n};\nPolarAreaController.overrides = {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels(chart) {\n          const data = chart.data;\n          if (data.labels.length && data.datasets.length) {\n            const {labels: {pointStyle}} = chart.legend.options;\n            return data.labels.map((label, i) => {\n              const meta = chart.getDatasetMeta(0);\n              const style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n          return [];\n        }\n      },\n      onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    },\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(context) {\n          return context.chart.data.labels[context.dataIndex] + ': ' + context.formattedValue;\n        }\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n};\n\nclass PieController extends DoughnutController {\n}\nPieController.id = 'pie';\nPieController.defaults = {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n};\n\nclass RadarController extends DatasetController {\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n    line.points = points;\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n      this.updateElement(line, undefined, properties, mode);\n    }\n    this.updateElements(points, 0, points.length, mode);\n  }\n  updateElements(points, start, count, mode) {\n    const dataset = this.getDataset();\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, dataset.data[i]);\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\nRadarController.id = 'radar';\nRadarController.defaults = {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  },\n};\nRadarController.overrides = {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear',\n    }\n  }\n};\n\nclass ScatterController extends LineController {\n}\nScatterController.id = 'scatter';\nScatterController.defaults = {\n  showLine: false,\n  fill: false\n};\nScatterController.overrides = {\n  interaction: {\n    mode: 'point'\n  },\n  plugins: {\n    tooltip: {\n      callbacks: {\n        title() {\n          return '';\n        },\n        label(item) {\n          return '(' + item.label + ', ' + item.formattedValue + ')';\n        }\n      }\n    }\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n};\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\nclass DateAdapter {\n  constructor(options) {\n    this.options = options || {};\n  }\n  formats() {\n    return abstract();\n  }\n  parse(value, format) {\n    return abstract();\n  }\n  format(timestamp, format) {\n    return abstract();\n  }\n  add(timestamp, amount, unit) {\n    return abstract();\n  }\n  diff(a, b, unit) {\n    return abstract();\n  }\n  startOf(timestamp, unit, weekday) {\n    return abstract();\n  }\n  endOf(timestamp, unit) {\n    return abstract();\n  }\n}\nDateAdapter.override = function(members) {\n  Object.assign(DateAdapter.prototype, members);\n};\nvar adapters = {\n  _date: DateAdapter\n};\n\nfunction getRelativePosition(e, chart) {\n  if ('native' in e) {\n    return {\n      x: e.x,\n      y: e.y\n    };\n  }\n  return getRelativePosition$1(e, chart);\n}\nfunction evaluateAllVisibleItems(chart, handler) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  let index, data, element;\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    ({index, data} = metasets[i]);\n    for (let j = 0, jlen = data.length; j < jlen; ++j) {\n      element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  return {lo: 0, hi: data.length - 1};\n}\nfunction optimizedEvaluateItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\nfunction getIntersectItems(chart, position, axis, useFinalPosition) {\n  const items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition) {\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n  let items = [];\n  if (!_isPointInArea(position, chart.chartArea, chart._minPadding)) {\n    return items;\n  }\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (intersect && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const center = element.getCenterPoint(useFinalPosition);\n    if (!_isPointInArea(center, chart.chartArea, chart._minPadding) && !element.inRange(position.x, position.y, useFinalPosition)) {\n      return;\n    }\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n  optimizedEvaluateItems(chart, axis, position, evaluationFunc);\n  return items;\n}\nfunction getAxisItems(chart, e, options, useFinalPosition) {\n  const position = getRelativePosition(e, chart);\n  const items = [];\n  const axis = options.axis;\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n  evaluateAllVisibleItems(chart, (element, datasetIndex, index) => {\n    if (element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      intersectsItem = true;\n    }\n  });\n  if (options.intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\nvar Interaction = {\n  modes: {\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'x';\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition)\n        : getNearestItems(chart, position, axis, false, useFinalPosition);\n      const elements = [];\n      if (!items.length) {\n        return [];\n      }\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n      return elements;\n    },\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition) :\n        getNearestItems(chart, position, axis, false, useFinalPosition);\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n      return items;\n    },\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getIntersectItems(chart, position, axis, useFinalPosition);\n    },\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition);\n    },\n    x(chart, e, options, useFinalPosition) {\n      options.axis = 'x';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    },\n    y(chart, e, options, useFinalPosition) {\n      options.axis = 'y';\n      return getAxisItems(chart, e, options, useFinalPosition);\n    }\n  }\n};\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n  chartArea.x = x;\n  chartArea.y = y;\n}\ndefaults.set('layout', {\n  autoPadding: true,\n  padding: {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0\n  }\n});\nvar layouts = {\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n    chart.boxes.push(item);\n  },\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h);\n    });\n  }\n};\n\nclass BasePlatform {\n  acquireContext(canvas, aspectRatio) {}\n  releaseContext(context) {\n    return false;\n  }\n  addEventListener(chart, type, listener) {}\n  removeEventListener(chart, type, listener) {}\n  getDevicePixelRatio() {\n    return 1;\n  }\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n  isAttached(canvas) {\n    return true;\n  }\n  updateConfig(config) {\n  }\n}\n\nclass BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n\nconst EXPANDO_KEY = '$chartjs';\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\nconst isNullOrEmpty = value => value === null || value === '';\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n  return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\nfunction addListener(node, type, listener) {\n  node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n  chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition$1(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.addedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    for (const entry of entries) {\n      for (const node of entry.removedNodes) {\n        if (node === canvas || node.contains(canvas)) {\n          return listener();\n        }\n      }\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart, (args) => {\n    const event = args[0];\n    return [event, event.offsetX, event.offsetY];\n  });\n  addListener(canvas, type, proxy);\n  return proxy;\n}\nclass DomPlatform extends BasePlatform {\n  acquireContext(canvas, aspectRatio) {\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n    if (context && context.canvas === canvas) {\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n    return null;\n  }\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n    canvas.width = canvas.width;\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n  addEventListener(chart, type, listener) {\n    this.removeEventListener(chart, type);\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n    if (!proxy) {\n      return;\n    }\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n  isAttached(canvas) {\n    const container = _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nclass Element {\n  constructor() {\n    this.x = undefined;\n    this.y = undefined;\n    this.active = false;\n    this.options = undefined;\n    this.$animations = undefined;\n  }\n  tooltipPosition(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n  getProps(props, final) {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      return this;\n    }\n    const ret = {};\n    props.forEach(prop => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n    });\n    return ret;\n  }\n}\nElement.defaults = {};\nElement.defaultRoutes = undefined;\n\nconst formatters = {\n  values(value) {\n    return isArray(value) ? value : '' + value;\n  },\n  numeric(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const locale = this.chart.options.locale;\n    let notation;\n    let delta = tickValue;\n    if (ticks.length > 1) {\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\n        notation = 'scientific';\n      }\n      delta = calculateDelta(tickValue, ticks);\n    }\n    const logDelta = log10(Math.abs(delta));\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\n    Object.assign(options, this.options.ticks.format);\n    return formatNumber(tickValue, locale, options);\n  },\n  logarithmic(tickValue, index, ticks) {\n    if (tickValue === 0) {\n      return '0';\n    }\n    const remain = tickValue / (Math.pow(10, Math.floor(log10(tickValue))));\n    if (remain === 1 || remain === 2 || remain === 5) {\n      return formatters.numeric.call(this, tickValue, index, ticks);\n    }\n    return '';\n  }\n};\nfunction calculateDelta(tickValue, ticks) {\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n    delta = tickValue - Math.floor(tickValue);\n  }\n  return delta;\n}\nvar Ticks = {formatters};\n\ndefaults.set('scale', {\n  display: true,\n  offset: false,\n  reverse: false,\n  beginAtZero: false,\n  bounds: 'ticks',\n  grace: 0,\n  grid: {\n    display: true,\n    lineWidth: 1,\n    drawBorder: true,\n    drawOnChartArea: true,\n    drawTicks: true,\n    tickLength: 8,\n    tickWidth: (_ctx, options) => options.lineWidth,\n    tickColor: (_ctx, options) => options.color,\n    offset: false,\n    borderDash: [],\n    borderDashOffset: 0.0,\n    borderWidth: 1\n  },\n  title: {\n    display: false,\n    text: '',\n    padding: {\n      top: 4,\n      bottom: 4\n    }\n  },\n  ticks: {\n    minRotation: 0,\n    maxRotation: 50,\n    mirror: false,\n    textStrokeWidth: 0,\n    textStrokeColor: '',\n    padding: 3,\n    display: true,\n    autoSkip: true,\n    autoSkipPadding: 3,\n    labelOffset: 0,\n    callback: Ticks.formatters.values,\n    minor: {},\n    major: {},\n    align: 'center',\n    crossAlign: 'near',\n    showLabelBackdrop: false,\n    backdropColor: 'rgba(255, 255, 255, 0.75)',\n    backdropPadding: 2,\n  }\n});\ndefaults.route('scale.ticks', 'color', '', 'color');\ndefaults.route('scale.grid', 'color', '', 'borderColor');\ndefaults.route('scale.grid', 'borderColor', '', 'borderColor');\ndefaults.route('scale.title', 'color', '', 'color');\ndefaults.describe('scale', {\n  _fallback: false,\n  _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n  _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash',\n});\ndefaults.describe('scales', {\n  _fallback: 'scale',\n});\ndefaults.describe('scale.ticks', {\n  _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\n  _indexable: (name) => name !== 'backdropPadding',\n});\n\nfunction autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const ticksLimit = tickOpts.maxTicksLimit || determineMaxTicks(scale);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n  next = start;\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n  if (len < 2) {\n    return false;\n  }\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6;\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n  return (lines * font.lineHeight) + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\nfunction titleAlign(align, position, reverse) {\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\nclass Scale extends Element {\n  constructor(cfg) {\n    super();\n    this.id = cfg.id;\n    this.type = cfg.type;\n    this.options = undefined;\n    this.ctx = cfg.ctx;\n    this.chart = cfg.chart;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    this.maxWidth = undefined;\n    this.maxHeight = undefined;\n    this.paddingTop = undefined;\n    this.paddingBottom = undefined;\n    this.paddingLeft = undefined;\n    this.paddingRight = undefined;\n    this.axis = undefined;\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    this.ticks = [];\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    this._startPixel = undefined;\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n  init(options) {\n    this.options = options.setContext(this.getContext());\n    this.axis = options.axis;\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n  parse(raw, index) {\n    return raw;\n  }\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isNumberFinite(_userMin),\n      maxDefined: isNumberFinite(_userMax)\n    };\n  }\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n  getTicks() {\n    return this.ticks;\n  }\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n  beforeUpdate() {\n    callback(this.options.beforeUpdate, [this]);\n  }\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n    this.beforeUpdate();\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n    this.beforeBuildTicks();\n    this.ticks = this.buildTicks() || [];\n    this.afterBuildTicks();\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n    this.configure();\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation();\n    this.afterCalculateLabelRotation();\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n    }\n    if (samplingEnabled) {\n      this._convertTicksToLabels(this.ticks);\n    }\n    this.beforeFit();\n    this.fit();\n    this.afterFit();\n    this.afterUpdate();\n  }\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n  afterUpdate() {\n    callback(this.options.afterUpdate, [this]);\n  }\n  beforeSetDimensions() {\n    callback(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = 0;\n      this.bottom = this.height;\n    }\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    callback(this.options.afterSetDimensions, [this]);\n  }\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    callback(this.options[name], [this]);\n  }\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n  beforeTickToLabelConversion() {\n    callback(this.options.beforeTickToLabelConversion, [this]);\n  }\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    callback(this.options.afterTickToLabelConversion, [this]);\n  }\n  beforeCalculateLabelRotation() {\n    callback(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = this.ticks.length;\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    callback(this.options.afterCalculateLabelRotation, [this]);\n  }\n  beforeFit() {\n    callback(this.options.beforeFit, [this]);\n  }\n  fit() {\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight;\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n        if (isHorizontal) {\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n    this._handleMargins();\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n  afterFit() {\n    callback(this.options.afterFit, [this]);\n  }\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  isFullSize() {\n    return this.options.fullSize;\n  }\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n    this.generateTickLabels(ticks);\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n    this.afterTickToLabelConversion();\n  }\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length);\n    }\n    return labelSizes;\n  }\n  _computeLabelSizes(ticks, length) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n    for (i = 0; i < length; ++i) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = label[j];\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n  getLabelForValue(value) {\n    return value;\n  }\n  getPixelForValue(value, index) {\n    return NaN;\n  }\n  getValueForPixel(pixel) {}\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n  getBaseValue() {\n    const {min, max} = this;\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n  getContext(index) {\n    const ticks = this.ticks || [];\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n  _isVisible() {\n    const display = this.options.display;\n    if (display !== 'auto') {\n      return !!display;\n    }\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = borderOpts.drawBorder ? borderOpts.borderWidth : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const optsAtIndex = grid.setContext(this.getContext(i));\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = grid.borderDash || [];\n      const borderDashOffset = optsAtIndex.borderDashOffset;\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n      lineValue = getPixelForGridLine(this, i, offset);\n      if (lineValue === undefined) {\n        continue;\n      }\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n    return items;\n  }\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      if (isHorizontal) {\n        x = pixel;\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n      let backdrop;\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n        let top = y + textOffset - labelPadding.top;\n        let left = x - labelPadding.left;\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        }\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        }\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n          color: optsAtIndex.backdropColor,\n        };\n      }\n      items.push({\n        rotation,\n        label,\n        font,\n        color,\n        strokeColor,\n        strokeWidth,\n        textOffset,\n        textAlign,\n        textBaseline,\n        translation: [x, y],\n        backdrop,\n      });\n    }\n    return items;\n  }\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n    let align = 'center';\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    }\n    return align;\n  }\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n    let textAlign;\n    let x;\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n    return {textAlign, x};\n  }\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n    const chart = this.chart;\n    const position = this.options.position;\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n  drawBorder() {\n    const {chart, ctx, options: {grid}} = this;\n    const borderOpts = grid.setContext(this.getContext());\n    const axisWidth = grid.drawBorder ? borderOpts.borderWidth : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.borderWidth;\n    ctx.strokeStyle = borderOpts.borderColor;\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n    ctx.restore();\n  }\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n    if (!optionTicks.display) {\n      return;\n    }\n    const ctx = this.ctx;\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    let i, ilen;\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      const item = items[i];\n      const tickFont = item.font;\n      const label = item.label;\n      if (item.backdrop) {\n        ctx.fillStyle = item.backdrop.color;\n        ctx.fillRect(item.backdrop.left, item.backdrop.top, item.backdrop.width, item.backdrop.height);\n      }\n      let y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, item);\n    }\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n    if (!title.display) {\n      return;\n    }\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: gz + 1,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n\nclass TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n    if (isIChartComponent(proto)) {\n      parentScope = this.register(proto);\n    }\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n    if (id in items) {\n      return scope;\n    }\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n    return scope;\n  }\n  get(id) {\n    return this.items[id];\n  }\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n    if (id in items) {\n      delete items[id];\n    }\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\nfunction registerDefaults(item, scope, parentScope) {\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n  defaults.set(scope, itemDefaults);\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n  add(...args) {\n    this._each('register', args);\n  }\n  remove(...args) {\n    this._each('unregister', args);\n  }\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        each(arg, item => {\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    callback(component['before' + camelMethod], [], component);\n    registry[method](component);\n    callback(component['after' + camelMethod], [], component);\n  }\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    return this.plugins;\n  }\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n}\nvar registry = new Registry();\n\nclass PluginService {\n  constructor() {\n    this._init = [];\n  }\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n    if (hook === 'destroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n    return true;\n  }\n  invalidate() {\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n    const descriptors = this._cache = this._createDescriptors(chart);\n    this._notifyStateChanges(chart);\n    return descriptors;\n  }\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\nfunction allPlugins(config) {\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n    }\n  }\n  return plugins;\n}\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\nfunction createDescriptors(chart, plugins, options, all) {\n  const result = [];\n  const context = chart.getContext();\n  for (let i = 0; i < plugins.length; i++) {\n    const plugin = plugins[i];\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, plugin, opts, context)\n    });\n  }\n  return result;\n}\nfunction pluginOpts(config, plugin, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  return config.createResolver(scopes, context, [''], {scriptable: false, indexable: false, allKeys: true});\n}\n\nfunction getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\nfunction determineAxis(id, scaleOptions) {\n  if (id === 'x' || id === 'y') {\n    return id;\n  }\n  return scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.charAt(0).toLowerCase();\n}\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const firstIDs = Object.create(null);\n  const scales = Object.create(null);\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    firstIDs[axis] = firstIDs[axis] || id;\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || firstIDs[axis] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\nclass Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n  get platform() {\n    return this._config.platform;\n  }\n  get type() {\n    return this._config.type;\n  }\n  set type(type) {\n    this._config.type = type;\n  }\n  get data() {\n    return this._config.data;\n  }\n  set data(data) {\n    this._config.data = initData(data);\n  }\n  get options() {\n    return this._config.options;\n  }\n  set options(options) {\n    this._config.options = options;\n  }\n  get plugins() {\n    return this._config.plugins;\n  }\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n    const scopes = new Set();\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n  chartOptionScopes() {\n    const {options, type} = this;\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {},\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).reduce((acc, key) => acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n\nvar version = \"3.6.0\";\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n  return item;\n}\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\nclass Chart {\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas can be reused.'\n      );\n    }\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    instances[this.id] = this;\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      return aspectRatio;\n    }\n    if (maintainAspectRatio && _aspectRatio) {\n      return _aspectRatio;\n    }\n    return height ? width / height : null;\n  }\n  get data() {\n    return this.config.data;\n  }\n  set data(data) {\n    this.config.data = data;\n  }\n  get options() {\n    return this._options;\n  }\n  set options(options) {\n    this.config.options = options;\n  }\n  _initialize() {\n    this.notifyPlugins('beforeInit');\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n    this.bindEvents();\n    this.notifyPlugins('afterInit');\n    return this;\n  }\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n    this.notifyPlugins('resize', {size: newSize});\n    callback(options.onResize, [this, newSize], this);\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        this.render();\n      }\n    }\n  }\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n      scale.init(scaleOptions, options);\n    });\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n    this._removeUnreferencedMetasets();\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass.prototype, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n    this._updateMetasets();\n    return newControllers;\n  }\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n  update(mode) {\n    const config = this.config;\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n    const animsDisabled = this._animationsDisabled = !options.animation;\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      this.unbindEvents();\n      this.bindEvents();\n    }\n    this._plugins.invalidate();\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    const newControllers = this.buildOrUpdateControllers();\n    this.notifyPlugins('beforeElementsUpdate');\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n    if (!animsDisabled) {\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n    this._updateDatasets(mode);\n    this.notifyPlugins('afterUpdate', {mode});\n    this._layers.sort(compare2Level('z', '_idx'));\n    if (this._lastEvent) {\n      this._eventHandler(this._lastEvent, true);\n    }\n    this.render();\n  }\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n    layouts.update(this, this.width, this.height, minPadding);\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        return;\n      }\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n    this.notifyPlugins('afterLayout');\n  }\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n    meta.controller._update(mode);\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      this._resize(width, height);\n      this._resizeBeforeDraw = null;\n    }\n    this.clear();\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this._drawDatasets();\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n    this.notifyPlugins('afterDraw');\n  }\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = this.chartArea;\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n    meta.controller.draw();\n    if (useClip) {\n      unclipArea(ctx);\n    }\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n    return [];\n  }\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n    return meta;\n  }\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n    const meta = this.getDatasetMeta(datasetIndex);\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n  destroy() {\n    const {canvas, ctx} = this;\n    this._stop();\n    this.config.clearCache();\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n    this.notifyPlugins('destroy');\n    delete instances[this.id];\n  }\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n    each(this.options.events, (type) => _add(type, listener));\n  }\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n    let detached;\n    const attached = () => {\n      _remove('attach', attached);\n      this.attached = true;\n      this.resize();\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n    detached = () => {\n      this.attached = false;\n      _remove('resize', listener);\n      this._stop();\n      this._resize(0, 0);\n      _add('attach', attached);\n    };\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n  _eventHandler(e, replay) {\n    const args = {event: e, replay, cancelable: true};\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n    const changed = this._handleEvent(e, replay);\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n    if (changed || args.changed) {\n      this.render();\n    }\n    return this;\n  }\n  _handleEvent(e, replay) {\n    const {_active: lastActive = [], options} = this;\n    const hoverOptions = options.hover;\n    const useFinalPosition = replay;\n    let active = [];\n    let changed = false;\n    let lastEvent = null;\n    if (e.type !== 'mouseout') {\n      active = this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n      lastEvent = e.type === 'click' ? this._lastEvent : e;\n    }\n    this._lastEvent = null;\n    if (_isPointInArea(e, this.chartArea, this._minPadding)) {\n      callback(options.onHover, [e, active, this], this);\n      if (e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu') {\n        callback(options.onClick, [e, active, this], this);\n      }\n    }\n    changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n    this._lastEvent = lastEvent;\n    return changed;\n  }\n}\nconst invalidatePlugins = () => each(Chart.instances, (chart) => chart._plugins.invalidate());\nconst enumerable = true;\nObject.defineProperties(Chart, {\n  defaults: {\n    enumerable,\n    value: defaults\n  },\n  instances: {\n    enumerable,\n    value: instances\n  },\n  overrides: {\n    enumerable,\n    value: overrides\n  },\n  registry: {\n    enumerable,\n    value: registry\n  },\n  version: {\n    enumerable,\n    value: version\n  },\n  getChart: {\n    enumerable,\n    value: getChart\n  },\n  register: {\n    enumerable,\n    value: (...items) => {\n      registry.add(...items);\n      invalidatePlugins();\n    }\n  },\n  unregister: {\n    enumerable,\n    value: (...items) => {\n      registry.remove(...items);\n      invalidatePlugins();\n    }\n  }\n});\n\nfunction clipArc(ctx, element, endAngle) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\nfunction pathArc(ctx, element, offset, spacing, end) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  let spacingOffset = 0;\n  const alpha = end - start;\n  if (spacing) {\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerEndAdjustedAngle);\n  if (outerEnd > 0) {\n    const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n  }\n  const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n  ctx.lineTo(p4.x, p4.y);\n  if (innerEnd > 0) {\n    const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n  }\n  ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), startAngle + (innerStart / innerRadius), true);\n  if (innerStart > 0) {\n    const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n  }\n  const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n  ctx.lineTo(p8.x, p8.y);\n  if (outerStart > 0) {\n    const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n    ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n  }\n  ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, startAngle + TAU);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + circumference % TAU;\n      if (circumference % TAU === 0) {\n        endAngle += TAU;\n      }\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.fill();\n  return endAngle;\n}\nfunction drawFullCircleBorders(ctx, element, inner) {\n  const {x, y, startAngle, pixelMargin, fullCircles} = element;\n  const outerRadius = Math.max(element.outerRadius - pixelMargin, 0);\n  const innerRadius = element.innerRadius + pixelMargin;\n  let i;\n  if (inner) {\n    clipArc(ctx, element, startAngle + TAU);\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, innerRadius, startAngle + TAU, startAngle, true);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle, startAngle + TAU);\n  for (i = 0; i < fullCircles; ++i) {\n    ctx.stroke();\n  }\n}\nfunction drawBorder(ctx, element, offset, spacing, endAngle) {\n  const {options} = element;\n  const inner = options.borderAlign === 'inner';\n  if (!options.borderWidth) {\n    return;\n  }\n  if (inner) {\n    ctx.lineWidth = options.borderWidth * 2;\n    ctx.lineJoin = 'round';\n  } else {\n    ctx.lineWidth = options.borderWidth;\n    ctx.lineJoin = 'bevel';\n  }\n  if (element.fullCircles) {\n    drawFullCircleBorders(ctx, element, inner);\n  }\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n  pathArc(ctx, element, offset, spacing, endAngle);\n  ctx.stroke();\n}\nclass ArcElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(chartX, chartY, useFinalPosition) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = this.options.spacing / 2;\n    const betweenAngles = circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n    const withinRadius = (distance >= innerRadius + rAdjust && distance <= outerRadius + rAdjust);\n    return (betweenAngles && withinRadius);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference',\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n  tooltipPosition(useFinalPosition) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n  draw(ctx) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 2;\n    const spacing = (options.spacing || 0) / 2;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n    ctx.save();\n    let radiusOffset = 0;\n    if (offset) {\n      radiusOffset = offset / 2;\n      const halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * radiusOffset, Math.sin(halfAngle) * radiusOffset);\n      if (this.circumference >= PI) {\n        radiusOffset = offset;\n      }\n    }\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    const endAngle = drawArc(ctx, this, radiusOffset, spacing);\n    drawBorder(ctx, this, radiusOffset, spacing, endAngle);\n    ctx.restore();\n  }\n}\nArcElement.id = 'arc';\nArcElement.defaults = {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n};\nArcElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor'\n};\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n  return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    prev = point;\n  }\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n  return !!loop;\n}\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n    if (point.skip) {\n      continue;\n    }\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    lastY = y;\n  }\n  drawX();\n}\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n  return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\nclass LineElement extends Element {\n  constructor(cfg) {\n    super();\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n  get points() {\n    return this._points;\n  }\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n    if (!segments.length) {\n      return;\n    }\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n    start = start || 0;\n    count = count || (this.points.length - start);\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n    if (points.length && options.borderWidth) {\n      ctx.save();\n      draw(ctx, this, start, count);\n      ctx.restore();\n    }\n    if (this.animated) {\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\nLineElement.id = 'line';\nLineElement.defaults = {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0,\n};\nLineElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\nLineElement.descriptors = {\n  _scriptable: true,\n  _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n};\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\nclass PointElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange$1(this, mouseX, 'x', useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange$1(this, mouseY, 'y', useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n  size(options) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n  draw(ctx, area) {\n    const options = this.options;\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n  getRange() {\n    const options = this.options || {};\n    return options.radius + options.hitRadius;\n  }\n}\nPointElement.id = 'point';\nPointElement.defaults = {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n};\nPointElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition);\n  let left, right, top, bottom, half;\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n  return {left, top, right, bottom};\n}\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n  const enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds\n\t\t&& (skipX || x >= bounds.left && x <= bounds.right)\n\t\t&& (skipY || y >= bounds.top && y <= bounds.bottom);\n}\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\nclass BarElement extends Element {\n  constructor(cfg) {\n    super();\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n    ctx.save();\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n    ctx.restore();\n  }\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition);\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\nBarElement.id = 'bar';\nBarElement.defaults = {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n};\nBarElement.defaultRoutes = {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n};\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  const samples = options.samples || availableWidth;\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n  const decimated = [];\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n    maxArea = area = -1;\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      const lastIndex = i - 1;\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n  return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {value: data});\n  }\n}\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n  let start = 0;\n  let count;\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n  return {start, count};\n}\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n    const availableWidth = chart.width;\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n      if (meta.type !== 'line') {\n        return;\n      }\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n      if (chart.options.parsing) {\n        return;\n      }\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n      dataset._decimated = decimated;\n    });\n  },\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n  if (fill === false || fill === null) {\n    return false;\n  }\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\nfunction decodeFill(line, index, count) {\n  const fill = parseFillOption(line);\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n  let target = parseFloat(fill);\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    if (fill[0] === '-' || fill[0] === '+') {\n      target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n      return false;\n    }\n    return target;\n  }\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  let target = null;\n  let horizontal;\n  if (fill === 'start') {\n    target = scale.bottom;\n  } else if (fill === 'end') {\n    target = scale.top;\n  } else if (isObject(fill)) {\n    target = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    target = scale.getBasePixel();\n  }\n  if (isNumberFinite(target)) {\n    horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? target : null,\n      y: horizontal ? null : target\n    };\n  }\n  return null;\n}\nclass simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const target = [];\n  const start = options.reverse ? scale.max : scale.min;\n  const end = options.reverse ? scale.min : scale.max;\n  let i, center, value;\n  if (fill === 'start') {\n    value = start;\n  } else if (fill === 'end') {\n    value = end;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  if (options.grid.circular) {\n    center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n  for (i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\nfunction findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\nfunction pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\nfunction buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(createBoundaryLine({x: null, y: scale.bottom}, line));\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (pointValue >= firstValue && pointValue <= lastValue) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\nfunction getTarget(source) {\n  const {chart, fill, line} = source;\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n  if (fill === 'stack') {\n    return buildStackLine(source);\n  }\n  if (fill === 'shape') {\n    return true;\n  }\n  const boundary = computeBoundary(source);\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n  return createBoundaryLine(boundary, line);\n}\nfunction createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = pointsFromSegments(boundary, line);\n  }\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\nfunction resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n  if (!propagate) {\n    return fill;\n  }\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n    if (target.visible) {\n      return fill;\n    }\n    visited.push(fill);\n    fill = target.fill;\n  }\n  return false;\n}\nfunction _clip(ctx, target, clipY) {\n  ctx.beginPath();\n  target.path(ctx);\n  ctx.lineTo(target.last().x, clipY);\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\nfunction getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\nfunction _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = findSegmentEnd(start, end, points);\n    const bounds = getBounds(property, points[start], points[end], segment.loop);\n    if (!target.segments) {\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n    const targetSegments = _boundSegments(target, bounds);\n    for (const tgt of targetSegments) {\n      const subBounds = getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\nfunction _fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n    clipBounds(ctx, scale, notShape && getBounds(property, start, end));\n    ctx.beginPath();\n    const lineLoop = !!line.pathSegment(ctx, src);\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n    ctx.restore();\n  }\n}\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n  if (property === 'x' && below !== above) {\n    _clip(ctx, target, area.top);\n    _fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    _clip(ctx, target, area.bottom);\n  }\n  _fill(ctx, {line, target, color: below, scale, property});\n  ctx.restore();\n}\nfunction drawfill(ctx, source, area) {\n  const target = getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\nvar plugin_filler = {\n  id: 'filler',\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n      meta.$filler = source;\n      sources.push(source);\n    }\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n      source.fill = resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n      source.line.updateControlPoints(area, source.axis);\n      if (draw) {\n        drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (source) {\n        drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n    if (!source || source.fill === false || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n    drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = Math.min(boxWidth, fontSize);\n  }\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n  constructor(config) {\n    super();\n    this._added = false;\n    this.legendHitBoxes = [];\n    this._hoveredItem = null;\n    this.doughnutMode = false;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n    this.legendItems = legendItems;\n  }\n  fit() {\n    const {options, ctx} = this;\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n    let width, height;\n    ctx.font = labelFont.string;\n    if (this.isHorizontal()) {\n      width = this.maxWidth;\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight;\n      width = this._fitCols(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    }\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n    return totalHeight;\n  }\n  _fitCols(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n    let left = 0;\n    let col = 0;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight});\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight});\n    return totalWidth;\n  }\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n      this._draw();\n      unclipArea(ctx);\n    }\n  }\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {color: fontColor, padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n    this.drawTitle();\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n      ctx.save();\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n      if (labelOpts.usePointStyle) {\n        const drawOptions = {\n          radius: boxWidth * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n        ctx.beginPath();\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n      ctx.restore();\n    };\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n    overrideTextDirection(this.ctx, opts.textDirection);\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor || fontColor;\n      ctx.fillStyle = legendItem.fontColor || fontColor;\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n      rtlHelper.setWidth(this.width);\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n      const realX = rtlHelper.x(x);\n      drawLegendBox(realX, y, legendItem);\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n      fillText(rtlHelper.x(x), y, legendItem);\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    if (!titleOpts.display) {\n      return;\n    }\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n    let left = this.left;\n    let maxWidth = this.width;\n    if (this.isHorizontal()) {\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n    const x = _alignStartEnd(position, left, left + maxWidth);\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n    if (x >= this.left && x <= this.right && y >= this.top && y <= this.bottom) {\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n        if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n          return this.legendItems[i];\n        }\n      }\n    }\n    return null;\n  }\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n    if (e.type === 'mousemove') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        callback(opts.onLeave, [e, previous, this], this);\n      }\n      this._hoveredItem = hoveredItem;\n      if (hoveredItem && !sameItem) {\n        callback(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      callback(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\nfunction isListened(type, opts) {\n  if (type === 'mousemove' && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color}} = chart.legend.options;\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: 0,\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n\nclass Title extends Element {\n  constructor(config) {\n    super();\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n    this.left = 0;\n    this.top = 0;\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    if (!opts.display) {\n      return;\n    }\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n\nconst positioners = {\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n    let i, len;\n    let x = 0;\n    let y = 0;\n    let count = 0;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        x += pos.x;\n        y += pos.y;\n        ++count;\n      }\n    }\n    return {\n      x: x / count,\n      y: y / count\n    };\n  },\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n    return {\n      x,\n      y\n    };\n  }\n};\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n  return base;\n}\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip._chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {width, height};\n}\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n  return xAlign;\n}\nfunction determineAlignment(chart, options, size) {\n  const yAlign = options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretPadding;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretPadding;\n  }\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\nclass Tooltip extends Element {\n  constructor(config) {\n    super();\n    this.opacity = 0;\n    this._active = [];\n    this._chart = config._chart;\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n    if (cached) {\n      return cached;\n    }\n    const chart = this._chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this._chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n    return animations;\n  }\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this._chart.getContext(), this, this._tooltipItems));\n  }\n  getTitle(context, options) {\n    const {callbacks} = options;\n    const beforeTitle = callbacks.beforeTitle.apply(this, [context]);\n    const title = callbacks.title.apply(this, [context]);\n    const afterTitle = callbacks.afterTitle.apply(this, [context]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n    return lines;\n  }\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.beforeBody.apply(this, [tooltipItems]));\n  }\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(scoped.beforeLabel.call(this, context)));\n      pushOrConcat(bodyItem.lines, scoped.label.call(this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(scoped.afterLabel.call(this, context)));\n      bodyItems.push(bodyItem);\n    });\n    return bodyItems;\n  }\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(options.callbacks.afterBody.apply(this, [tooltipItems]));\n  }\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n    const beforeFooter = callbacks.beforeFooter.apply(this, [tooltipItems]);\n    const footer = callbacks.footer.apply(this, [tooltipItems]);\n    const afterFooter = callbacks.afterFooter.apply(this, [tooltipItems]);\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n    return lines;\n  }\n  _createItems(options) {\n    const active = this._active;\n    const data = this._chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this._chart, active[i]));\n    }\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(scoped.labelColor.call(this, context));\n      labelPointStyles.push(scoped.labelPointStyle.call(this, context));\n      labelTextColors.push(scoped.labelTextColor.call(this, context));\n    });\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this._chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this._chart);\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n    if (changed && options.external) {\n      options.external.call(this, {chart: this._chart, tooltip: this, replay});\n    }\n  }\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.titleAlign, options);\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing;\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing;\n        }\n      }\n    }\n  }\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColors = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2,\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.fillStyle = labelColors.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      ctx.lineWidth = labelColors.borderWidth || 1;\n      ctx.strokeStyle = labelColors.borderColor;\n      ctx.setLineDash(labelColors.borderDash || []);\n      ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n      const borderRadius = toTRBLCorners(labelColors.borderRadius);\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.fillStyle = labelColors.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n      lines = bodyItem.lines;\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n      each(bodyItem.after, fillLineOfText);\n    }\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing;\n  }\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n      footerFont = toFont(options.footerFont);\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n    ctx.fill();\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n  _updateAnimationTarget(options) {\n    const chart = this._chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n    if (!opacity) {\n      return;\n    }\n    this._updateAnimationTarget(options);\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n    const padding = toPadding(options.padding);\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n      this.drawBackground(pt, ctx, tooltipSize, options);\n      overrideTextDirection(ctx, options.textDirection);\n      pt.y += padding.top;\n      this.drawTitle(pt, ctx, options);\n      this.drawBody(pt, ctx, options);\n      this.drawFooter(pt, ctx, options);\n      restoreTextDirection(ctx, options.textDirection);\n      ctx.restore();\n    }\n  }\n  getActiveElements() {\n    return this._active || [];\n  }\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this._chart.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this.update(true);\n    }\n  }\n  handleEvent(e, replay) {\n    const options = this.options;\n    const lastActive = this._active || [];\n    let changed = false;\n    let active = [];\n    if (e.type !== 'mouseout') {\n      active = this._chart.getElementsAtEventForMode(e, options.mode, options, replay);\n      if (options.reverse) {\n        active.reverse();\n      }\n    }\n    const positionChanged = this._positionChanged(active, e);\n    changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n    if (changed) {\n      this._active = active;\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n        this.update(true, replay);\n      }\n    }\n    return changed;\n  }\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\nTooltip.positioners = positioners;\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({_chart: chart, options});\n    }\n  },\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n    const args = {\n      tooltip\n    };\n    if (chart.notifyPlugins('beforeTooltipDraw', args) === false) {\n      return;\n    }\n    if (tooltip) {\n      tooltip.draw(chart.ctx);\n    }\n    chart.notifyPlugins('afterTooltipDraw', args);\n  },\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: {\n      beforeTitle: noop,\n      title(tooltipItems) {\n        if (tooltipItems.length > 0) {\n          const item = tooltipItems[0];\n          const labels = item.chart.data.labels;\n          const labelCount = labels ? labels.length : 0;\n          if (this && this.options && this.options.mode === 'dataset') {\n            return item.dataset.label || '';\n          } else if (item.label) {\n            return item.label;\n          } else if (labelCount > 0 && item.dataIndex < labelCount) {\n            return labels[item.dataIndex];\n          }\n        }\n        return '';\n      },\n      afterTitle: noop,\n      beforeBody: noop,\n      beforeLabel: noop,\n      label(tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n          return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n          label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n          label += value;\n        }\n        return label;\n      },\n      labelColor(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          borderColor: options.borderColor,\n          backgroundColor: options.backgroundColor,\n          borderWidth: options.borderWidth,\n          borderDash: options.borderDash,\n          borderDashOffset: options.borderDashOffset,\n          borderRadius: 0,\n        };\n      },\n      labelTextColor() {\n        return this.options.bodyColor;\n      },\n      labelPointStyle(tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n          pointStyle: options.pointStyle,\n          rotation: options.rotation,\n        };\n      },\n      afterLabel: noop,\n      afterBody: noop,\n      beforeFooter: noop,\n      footer: noop,\n      afterFooter: noop\n    }\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nDecimation: plugin_decimation,\nFiller: plugin_filler,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index) => typeof raw === 'string'\n  ? labels.push(raw) - 1\n  : isNaN(raw) ? null : index;\nfunction findOrAddLabel(labels, raw, index) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\nclass CategoryScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw));\n    return validIndex(index, labels.length - 1);\n  }\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n      return labels[value];\n    }\n    return value;\n  }\n  configure() {\n    super.configure();\n    if (!this.isHorizontal()) {\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n  getBasePixel() {\n    return this.bottom;\n  }\n}\nCategoryScale.id = 'category';\nCategoryScale.defaults = {\n  ticks: {\n    callback: CategoryScale.prototype.getLabelForValue\n  }\n};\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  const ticks = [];\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n      if (niceMin < min) {\n        j++;\n      }\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n  for (; j < numSpaces; ++j) {\n    ticks.push({value: Math.round((niceMin + j * spacing) * factor) / factor});\n  }\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n  return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n    return +raw;\n  }\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n    if (min === max) {\n      let offset = 1;\n      if (max >= Number.MAX_SAFE_INTEGER || min <= Number.MIN_SAFE_INTEGER) {\n        offset = Math.abs(max * 0.05);\n      }\n      setMax(max + offset);\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n    return maxTicks;\n  }\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n    super.configure();\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale);\n  }\n}\n\nclass LinearScale extends LinearScaleBase {\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? min : 0;\n    this.max = isNumberFinite(max) ? max : 1;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\nLinearScale.id = 'linear';\nLinearScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n};\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, Math.floor(log10(tickVal))));\n  return remain === 1;\n}\nfunction generateTicks(generationOptions, dataRange) {\n  const endExp = Math.floor(log10(dataRange.max));\n  const endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n  const ticks = [];\n  let tickVal = finiteOrDefault(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));\n  let exp = Math.floor(log10(tickVal));\n  let significand = Math.floor(tickVal / Math.pow(10, exp));\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  do {\n    ticks.push({value: tickVal, major: isMajor(tickVal)});\n    ++significand;\n    if (significand === 10) {\n      significand = 1;\n      ++exp;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n  } while (exp < endExp || (exp === endExp && significand < endSignificand));\n  const lastTick = finiteOrDefault(generationOptions.max, tickVal);\n  ticks.push({value: lastTick, major: isMajor(tickVal)});\n  return ticks;\n}\nclass LogarithmicScale extends Scale {\n  constructor(cfg) {\n    super(cfg);\n    this.start = undefined;\n    this.end = undefined;\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isNumberFinite(value) && value > 0 ? value : null;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n    this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n    this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n    this.handleTickRangeOptions();\n  }\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n    const exp = (v, m) => Math.pow(10, Math.floor(log10(v)) + m);\n    if (min === max) {\n      if (min <= 0) {\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(exp(min, -1));\n        setMax(exp(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(exp(max, -1));\n    }\n    if (max <= 0) {\n      setMax(exp(min, +1));\n    }\n    if (this._zero && this.min !== this._suggestedMin && min === exp(this.min, 0)) {\n      setMin(exp(min, -1));\n    }\n    this.min = min;\n    this.max = max;\n  }\n  buildTicks() {\n    const opts = this.options;\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n    if (opts.reverse) {\n      ticks.reverse();\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n    return ticks;\n  }\n  getLabelForValue(value) {\n    return value === undefined ? '0' : formatNumber(value, this.chart.options.locale);\n  }\n  configure() {\n    const start = this.min;\n    super.configure();\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\nLogarithmicScale.id = 'logarithmic';\nLogarithmicScale.defaults = {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n};\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\nfunction fitWithPointLabels(scale) {\n  const furthestLimits = {\n    l: 0,\n    r: scale.width,\n    t: 0,\n    b: scale.height - scale.paddingTop\n  };\n  const furthestAngles = {};\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale.getLabels().length;\n  for (let i = 0; i < valueCount; i++) {\n    const opts = scale.options.pointLabels.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i]);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n    const angleRadians = scale.getIndexAngle(i);\n    const angle = toDegrees(angleRadians);\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    if (hLimits.start < furthestLimits.l) {\n      furthestLimits.l = hLimits.start;\n      furthestAngles.l = angleRadians;\n    }\n    if (hLimits.end > furthestLimits.r) {\n      furthestLimits.r = hLimits.end;\n      furthestAngles.r = angleRadians;\n    }\n    if (vLimits.start < furthestLimits.t) {\n      furthestLimits.t = vLimits.start;\n      furthestAngles.t = angleRadians;\n    }\n    if (vLimits.end > furthestLimits.b) {\n      furthestLimits.b = vLimits.end;\n      furthestAngles.b = angleRadians;\n    }\n  }\n  scale._setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale.getLabels().length;\n  const opts = scale.options;\n  const tickBackdropHeight = getTickBackdropHeight(opts);\n  const outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n  for (let i = 0; i < valueCount; i++) {\n    const extra = (i === 0 ? tickBackdropHeight / 2 : 0);\n    const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i]);\n    const angle = toDegrees(scale.getIndexAngle(i));\n    const size = labelSizes[i];\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    items.push({\n      x: pointLabelPosition.x,\n      y,\n      textAlign,\n      left,\n      top: y,\n      right: left + size.w,\n      bottom: y + size.h\n    });\n  }\n  return items;\n}\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n  return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign, left, top, right, bottom} = scale._pointLabelItems[i];\n    const {backdropColor} = optsAtIndex;\n    if (!isNullOrUndef(backdropColor)) {\n      const padding = toPadding(optsAtIndex.backdropPadding);\n      ctx.fillStyle = backdropColor;\n      ctx.fillRect(left - padding.left, top - padding.top, right - left + padding.width, bottom - top + padding.height);\n    }\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n  const {color, lineWidth} = gridLineOpts;\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(gridLineOpts.borderDash);\n  ctx.lineDashOffset = gridLineOpts.borderDashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\nfunction numberOrZero(param) {\n  return isNumber(param) ? param : 0;\n}\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\nclass RadialLinearScale extends LinearScaleBase {\n  constructor(cfg) {\n    super(cfg);\n    this.xCenter = undefined;\n    this.yCenter = undefined;\n    this.drawingArea = undefined;\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n  setDimensions() {\n    this.width = this.maxWidth;\n    this.height = this.maxHeight;\n    this.paddingTop = getTickBackdropHeight(this.options) / 2;\n    this.xCenter = Math.floor(this.width / 2);\n    this.yCenter = Math.floor((this.height - this.paddingTop) / 2);\n    this.drawingArea = Math.min(this.height - this.paddingTop, this.width) / 2;\n  }\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n    this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n    this.handleTickRangeOptions();\n  }\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n    this._pointLabels = this.getLabels().map((value, index) => {\n      const label = callback(this.options.pointLabels.callback, [value, index], this);\n      return label || label === 0 ? label : '';\n    });\n  }\n  fit() {\n    const opts = this.options;\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n  _setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n    let radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n    let radiusReductionRight = Math.max(furthestLimits.r - this.width, 0) / Math.sin(furthestAngles.r);\n    let radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n    let radiusReductionBottom = -Math.max(furthestLimits.b - (this.height - this.paddingTop), 0) / Math.cos(furthestAngles.b);\n    radiusReductionLeft = numberOrZero(radiusReductionLeft);\n    radiusReductionRight = numberOrZero(radiusReductionRight);\n    radiusReductionTop = numberOrZero(radiusReductionTop);\n    radiusReductionBottom = numberOrZero(radiusReductionBottom);\n    this.drawingArea = Math.max(largestPossibleRadius / 2, Math.min(\n      Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n      Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2)));\n    this.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n  }\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    const maxRight = this.width - rightMovement - this.drawingArea;\n    const maxLeft = leftMovement + this.drawingArea;\n    const maxTop = topMovement + this.drawingArea;\n    const maxBottom = (this.height - this.paddingTop) - bottomMovement - this.drawingArea;\n    this.xCenter = Math.floor(((maxLeft + maxRight) / 2) + this.left);\n    this.yCenter = Math.floor(((maxTop + maxBottom) / 2) + this.top + this.paddingTop);\n  }\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / this.getLabels().length;\n    const startAngle = this.options.startAngle || 0;\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n  getPointPosition(index, distanceFromCenter) {\n    const angle = this.getIndexAngle(index) - HALF_PI;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this.getLabels().length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid} = opts;\n    const labelCount = this.getLabels().length;\n    let i, offset, position;\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const optsAtIndex = grid.setContext(this.getContext(index - 1));\n          drawRadiusLine(this, optsAtIndex, offset, labelCount);\n        }\n      });\n    }\n    if (angleLines.display) {\n      ctx.save();\n      for (i = this.getLabels().length - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n        if (!lineWidth || !color) {\n          continue;\n        }\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n        offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n      ctx.restore();\n    }\n  }\n  drawBorder() {}\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n    if (!tickOpts.display) {\n      return;\n    }\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n    this.ticks.forEach((tick, index) => {\n      if (index === 0 && !opts.reverse) {\n        return;\n      }\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n      });\n    });\n    ctx.restore();\n  }\n  drawTitle() {}\n}\nRadialLinearScale.id = 'radialLinear';\nRadialLinearScale.defaults = {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback(label) {\n      return label;\n    },\n    padding: 5\n  }\n};\nRadialLinearScale.defaultRoutes = {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n};\nRadialLinearScale.descriptors = {\n  angleLines: {\n    _fallback: 'grid'\n  }\n};\n\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\nconst UNITS = (Object.keys(INTERVALS));\nfunction sorter(a, b) {\n  return a - b;\n}\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, parser)\n      : adapter.parse(value);\n  }\n  if (value === null) {\n    return null;\n  }\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n  return +value;\n}\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n  return UNITS[ilen - 1];\n}\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n  constructor(props) {\n    super(props);\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    this._unit = 'day';\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n  init(scaleOpts, opts) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n    mergeIf(time.displayFormats, adapter.formats());\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n    super.init(scaleOpts);\n    this._normalized = opts.normalized;\n  }\n  parse(raw, index) {\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n    if (!minDefined || !maxDefined) {\n      _applyBounds(this._getLabelBounds());\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n    min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n    const min = this.min;\n    const max = this.max;\n    const ticks = _filterBetween(timestamps, min, max);\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n    if (options.reverse) {\n      ticks.reverse();\n    }\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n  initOffsets(timestamps) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(timeOpts.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n    return Object.keys(ticks).sort((a, b) => a - b).map(x => +x);\n  }\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n    const label = this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    const formatter = options.ticks.callback;\n    return formatter ? callback(formatter, [label, index, ticks], this) : label;\n  }\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const metas = this.getMatchingVisibleMetas();\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n    return (this._cache.data = this.normalize(timestamps));\n  }\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n  normalize(values) {\n    return _arrayUnique(values.sort(sorter));\n  }\n}\nTimeScale.id = 'time';\nTimeScale.defaults = {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    major: {\n      enabled: false\n    }\n  }\n};\n\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n  constructor(props) {\n    super(props);\n    this._table = [];\n    this._minPos = undefined;\n    this._tableRange = undefined;\n  }\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n    if (items.length < 2) {\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n    if (timestamps.length) {\n      return timestamps;\n    }\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n    return timestamps;\n  }\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\nTimeSeriesScale.id = 'timeseries';\nTimeSeriesScale.defaults = TimeScale.defaults;\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, plugin_filler as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n","<script lang=\"ts\">\n\timport {\n\t\tChart,\n\t\tLinearScale,\n\t\tBarController,\n\t\tLineController,\n\t\tCategoryScale,\n\t\tBarElement,\n\t\tTitle,\n\t\tTooltip,\n\t\tPointElement,\n\t\tLineElement,\n\t} from \"chart.js\";\n\timport { onDestroy, onMount } from \"svelte\";\n\timport type { PowerSummary } from \"./powersummary\";\n\n\tChart.register(\n\t\tLinearScale,\n\t\tBarController,\n\t\tLineController,\n\t\tCategoryScale,\n\t\tBarElement,\n\t\tTitle,\n\t\tTooltip,\n\t\tPointElement,\n\t\tLineElement\n\t);\n\n\t// refreshRateInMS sets the refresh rate of the live view in milliseconds\n\texport let refreshRateInMS: number = 60_000;\n\n\tasync function fetchPower() {\n\t\t// fetch Power entries\n\t\tconst today: Date = new Date();\n\t\tconst queries: Promise<Response>[] = [];\n\n\t\t// fetch 3 days worth of data to ensure we are able to get 48 entries\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tconst y: number = today.getFullYear();\n\t\t\tconst m: number = today.getMonth() + 1;\n\t\t\tconst d: number = today.getDate();\n\n\t\t\t// @ts-ignore: SERVICE_URL is included in rollup build.\n\t\t\tconst url = SERVICE_URL + `/${y}/${m}/${d}`;\n\t\t\tqueries.push(fetch(url));\n\t\t\ttoday.setDate(d - 1);\n\t\t}\n\n\t\tconst resp = await Promise.all<Response, Response, Response>([\n\t\t\tqueries[0],\n\t\t\tqueries[1],\n\t\t\tqueries[2],\n\t\t]);\n\n\t\tlet usage = await Promise.all<PowerSummary[], PowerSummary[], PowerSummary[]>([\n\t\t\tresp[0].json(),\n\t\t\tresp[1].json(),\n\t\t\tresp[2].json(),\n\t\t]);\n\n\t\tconst allUsage = [...usage[2], ...usage[1], ...usage[0]];\n\n\t\tconst now: Date = new Date();\n\n\t\tlet entries: number[] = new Array(48);\n\t\tlet labels: string[] = new Array(48);\n\t\tlet j = allUsage.length - 1;\n\t\tfor (let i = 47; i >= 0; i--) {\n\t\t\tconst h = now.getHours();\n\t\t\tlabels[i] = `${h}h`;\n\n\t\t\tentries[i] = 0;\n\t\t\tif (j >= 0 && allUsage[j].hour == h) {\n\t\t\t\tentries[i] = allUsage[j].consumption;\n\t\t\t\tj--;\n\t\t\t}\n\n\t\t\tnow.setHours(h - 1);\n\t\t}\n\n\t\tlet avg = new Array<number>(3);\n\t\tchart.data.labels = labels;\n\t\tchart.data.datasets[0].data = entries;\n\t\tchart.data.datasets[1].data = entries.map<number>((v, i) => {\n\t\t\tavg[i % 3] = v;\n\t\t\treturn avg.reduce<number>((tot, v) => tot + v, 0) / 3;\n\t\t});\n\t\tchart.options.scales.y.max = Math.max(...entries) + 1;\n\t\tchart.update();\n\t}\n\n\tlet ctx: HTMLCanvasElement;\n\tlet timer: NodeJS.Timer;\n\tlet chart: Chart;\n\n\tonMount(() => {\n\t\tfetchPower();\n\t\ttimer = setInterval(() => fetchPower(), refreshRateInMS);\n\n\t\tchart = new Chart(ctx, {\n\t\t\ttype: \"bar\",\n\t\t\tdata: {\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"bar\",\n\t\t\t\t\t\tlabel: \"kWh\",\n\t\t\t\t\t\tbackgroundColor: \"rgba(0, 128, 0, 0.6)\",\n\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: \"line\",\n\t\t\t\t\t\tlabel: \"3-hour moving average\",\n\t\t\t\t\t\tborderColor: \"rgba(255, 215, 0, 1)\",\n\t\t\t\t\t\tdata: null,\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\taspectRatio: 5,\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t\tmax: 10,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t});\n\n\tonDestroy(() => clearInterval(timer));\n</script>\n\n<canvas bind:this={ctx} />\n","<script lang=\"ts\">\n\timport {\n\t\tChart,\n\t\tLinearScale,\n\t\tBarController,\n\t\tLineController,\n\t\tCategoryScale,\n\t\tBarElement,\n\t\tTitle,\n\t\tTooltip,\n\t\tPointElement,\n\t\tLineElement,\n\t\tLegend,\n\t} from \"chart.js\";\n\timport type { ChartDataset } from \"chart.js\";\n\timport { onMount } from \"svelte\";\n\timport type { PowerSummary } from \"./powersummary\";\n\timport PowerMeter from \"./PowerMeter.svelte\";\n\n\tChart.register(\n\t\tLinearScale,\n\t\tBarController,\n\t\tLineController,\n\t\tCategoryScale,\n\t\tBarElement,\n\t\tTitle,\n\t\tTooltip,\n\t\tPointElement,\n\t\tLineElement,\n\t\tLegend\n\t);\n\n\tlet ctx: HTMLCanvasElement;\n\tlet chart: Chart;\n\n\tconst colors = [\n\t\t\"rgba(255, 99, 132, 0.5)\",\n\t\t\"rgba(54, 162, 235, 0.5)\",\n\t\t\"rgba(255, 206, 86, 0.5)\",\n\t\t\"rgba(75, 192, 192, 0.5)\",\n\t\t\"rgba(153, 102, 255, 0.5)\",\n\t\t\"rgba(255, 159, 64, 0.5)\",\n\t];\n\n\tonMount(async () => {\n\t\t// @ts-ignore: SERVICE_URL is included in rollup build.\n\t\tconst serviceURL = SERVICE_URL;\n\n\t\tchart = new Chart(ctx, {\n\t\t\ttype: \"bar\",\n\t\t\tdata: {\n\t\t\t\tdatasets: [],\n\t\t\t},\n\t\t\toptions: {\n\t\t\t\tresponsive: true,\n\t\t\t\tmaintainAspectRatio: true,\n\t\t\t\taspectRatio: 4,\n\t\t\t\tscales: {\n\t\t\t\t\ty: {\n\t\t\t\t\t\tbeginAtZero: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\n\t\tconst years: PowerSummary[] = await fetch(serviceURL).then(async (r) => r.json());\n\n\t\tvar yearDetail = await Promise.all(\n\t\t\tyears.map((y) => fetch(serviceURL + `/${y.year}`).then((response) => response.json()))\n\t\t);\n\n\t\tyearDetail.map((usage, i) => {\n\t\t\tconst dataset: ChartDataset<\"bar\", number[]> = {\n\t\t\t\tdata: new Array<number>(12),\n\t\t\t\tbackgroundColor: colors[i % colors.length],\n\t\t\t\tlabel: `${usage[0].year}`,\n\t\t\t};\n\n\t\t\tdataset.data = usage.map((u) => (dataset.data[u.month - 1] = u.consumption));\n\n\t\t\tchart.data.datasets.push(dataset);\n\t\t});\n\n\t\tchart.data.labels = [\n\t\t\t\"January\",\n\t\t\t\"February\",\n\t\t\t\"March\",\n\t\t\t\"April\",\n\t\t\t\"May\",\n\t\t\t\"June\",\n\t\t\t\"July\",\n\t\t\t\"August\",\n\t\t\t\"September\",\n\t\t\t\"October\",\n\t\t\t\"November\",\n\t\t\t\"December\",\n\t\t];\n\n\t\tchart.update();\n\t});\n</script>\n\n<canvas bind:this={ctx} />\n","<script lang=\"ts\">\n\timport PowerMeter from \"./PowerMeter.svelte\";\n\timport Live from \"./Live.svelte\";\n\timport Yearly from \"./Yearly.svelte\";\n\n\tlet year: number = new Date().getFullYear();\n\tlet month: number = new Date().getMonth() + 1;\n\n\tfunction next() {\n\t\tmonth++;\n\t\tif (month <= 12) {\n\t\t\treturn;\n\t\t}\n\n\t\tyear++;\n\t\tmonth = 1;\n\t}\n\n\tfunction prev() {\n\t\tmonth--;\n\t\tif (month >= 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tyear--;\n\t\tmonth = 12;\n\t}\n</script>\n\n<main>\n\t<h1>PowerMeter</h1>\n\n\t<Live />\n\n\t<Yearly />\n\n\t<button on:click={prev}>&lt;</button>\n\t<label>\n\t\t<input type=\"number\" bind:value={year} />\n\t</label>\n\n\t<label>\n\t\t<input type=\"number\" bind:value={month} />\n\t</label>\n\t<button on:click={next}>&gt;</button>\n\n\t<PowerMeter {year} {month} />\n</main>\n\n<style>\n\tmain {\n\t\ttext-align: center;\n\t\tpadding: 1em;\n\t\tmax-width: 240px;\n\t\tmargin: 0 auto;\n\t}\n\n\th1 {\n\t\tcolor: #ff3e00;\n\t\t/* text-transform: uppercase; */\n\t\tfont-size: 4em;\n\t\tfont-weight: 100;\n\t}\n\n\t@media (min-width: 640px) {\n\t\tmain {\n\t\t\tmax-width: none;\n\t\t}\n\t}\n\n\tlabel,\n\tbutton {\n\t\tdisplay: inline;\n\t\tfont-size: 1.5em;\n\t}\n\n\tinput {\n\t\twidth: 4em;\n\t\ttext-align: center;\n\t}\n</style>\n","import App from \"./App.svelte\";\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","to_number","set_data","wholeText","set_input_value","input","current_component","set_current_component","component","get_current_component","Error","onMount","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","customElement","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","year","format","month","day","consumption","iterations","formater","Intl","NumberFormat","minimumIntegerDigits","mounted","url","total","entries","fetchPower","resp","fetch","json","reduce","sum","current","requestAnimFrame","window","requestAnimationFrame","throttled","thisArg","updateFn","updateArgs","args","prototype","slice","call","ticking","apply","_toLeftRightCenter","align","_alignStartEnd","start","end","uid","id","isNullOrUndef","isArray","toString","substr","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","each","loopable","reverse","len","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","clone$1","source","klen","k","isValidKey","key","_merger","tval","sval","merge","sources","merger","mergeIf","_mergerIf","hasOwnProperty","indexOfDotOrLength","idx","resolveObjectKey","pos","_capitalize","str","charAt","toUpperCase","defined","isFunction","PI","Math","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","niceNum","range","roundedRange","round","almostEquals","niceRange","pow","floor","fraction","isNumber","n","isNaN","x","y","epsilon","abs","_setMinAndMaxByKey","array","property","min","max","toRadians","degrees","toDegrees","radians","_decimalPlaces","e","distanceBetweenPoints","pt1","pt2","sqrt","_angleDiff","_normalizeAngle","_angleBetween","angle","sameAngleIsFullCircle","s","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","atEdge","t","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","A","B","C","D","E","F","f","hex","h1","h2","eq","hexString","v","r","g","isShort","lim","h","p2b","n2b","b2n","n2p","RGB_RE","HUE_RE","hsl2rgbn","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","calln","hsl2rgb","hue","hueParse","exec","p1","p2","hwb2rgb","hsv2rgb","map$1","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names$1","nameParse","unpacked","tkeys","j","ok","nk","replace","parseInt","unpack","transparent","toLowerCase","modHSL","ratio","tmp","clone","proto","assign","fromObject","functionParse","rgbParse","Color","constructor","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","me","c1","c2","w2","w1","alpha","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","index_esm","isPatternOrGradient","CanvasGradient","CanvasPattern","getHoverColor","overrides","descriptors","getScope$1","split","set","scope","values","defaults","_descriptors","animation","undefined","backgroundColor","borderColor","datasets","devicePixelRatio","chart","platform","getDevicePixelRatio","elements","events","font","family","size","style","lineHeight","hover","hoverBackgroundColor","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","describe","get","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","_scriptable","startsWith","_indexable","_fallback","_measureText","gc","longest","string","textWidth","measureText","width","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","xOffset","yOffset","cornerRadius","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","arc","closePath","moveTo","lineTo","SQRT1_2","rect","borderWidth","stroke","_isPointInArea","point","area","margin","left","right","top","bottom","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","translation","fillStyle","textAlign","textBaseline","setRenderOpts","strokeStyle","lineWidth","strokeText","maxWidth","fillText","decorateText","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","toFontString","inputs","info","cacheable","createContext","parentContext","_lookup","table","cmp","mid","hi","lo","_lookupByKey","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","_arrayUnique","items","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","includes","ownKeys","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","join","_resolveScriptable","isIndexable","arr","item","resolver","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","points","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","delta","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","loop","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","positions","getPositionedStyle","styles","suffix","result","getRelativePosition","evt","borderBox","boxSizing","paddings","borders","box","native","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","intlCache","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","getNumberFormat","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","count","_boundSegment","segment","bounds","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","splitByStyles","segments","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","animator","_request","_charts","_running","_lastDate","_notify","anims","date","numSteps","duration","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","cb","acc","cur","_duration","stop","cancel","remove","interpolators","boolean","to","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","easing","_start","delay","_loop","_target","_prop","_from","_to","_promises","active","elapsed","remain","wait","promises","res","rej","resolved","method","animationOptions","colors","properties","numbers","resize","show","animations","visible","hide","Animations","config","_properties","configure","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","meta","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iScale","iAxis","axis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","getFirstScaleId","shift","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","$context","_syncList","initialize","linkScales","_stacked","addElements","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","xScale","getScaleForId","yScale","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","datasetElementType","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","_sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","minDefined","maxDefined","getUserBounds","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","disabled","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","dataElementType","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","updateElement","updateSharedOptions","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForValue","ticks","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","BarController","iAxisKey","vAxisKey","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","firstOpts","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","last","grouped","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","halfGrid","getLineWidthForValue","skipNull","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","offset","grid","_value_","beginAtZero","BubbleController","getPixelForDecimal","tooltip","title","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","legendItem","toggleDataVisibility","tooltipItem","dataLabel","formattedValue","LineController","_dataset","animationsDisabled","pointCount","getStartAndCountOfVisiblePoints","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","scaleRangesChanged","_decimated","animated","maxGapLength","directUpdate","prevParsed","nullData","border","lastPoint","updateControlPoints","PolarAreaController","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","abstract","DateAdapter","formats","timestamp","amount","unit","diff","startOf","weekday","endOf","members","adapters","_date","getRelativePosition$1","binarySearch","metaset","lookupMethod","_reversePixels","getRange","optimizedEvaluateItems","position","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","_minPadding","inRange","getNearestItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","distance","getAxisItems","rangeMethod","intersectsItem","evaluateAllVisibleItems","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","padding","autoPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","createAttachObserver","observer","MutationObserver","addedNodes","contains","observe","childList","subtree","createDetachObserver","removedNodes","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","proxies","$proxies","attach","isConnected","Element","tooltipPosition","getProps","hasValue","final","defaultRoutes","formatters","numeric","tickValue","notation","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","Ticks","autoSkip","tickOpts","ticksLimit","maxTicksLimit","tickLength","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","grace","drawBorder","drawOnChartArea","drawTicks","tickWidth","tickColor","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkipPadding","labelOffset","minor","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","offsetFromEdge","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","beforeFit","fit","afterFit","afterUpdate","startPixel","endPixel","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","getValueForPixel","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","ticksLength","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","lineColor","tickBorderDash","tickBorderDashOffset","_computeLabelItems","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","backdrop","labelPadding","_computeLabelArea","drawBackground","fillRect","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","lastLineWidth","drawLabels","drawTitle","titleX","titleY","titleArgs","tz","gz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","routes","propertyParts","sourceName","sourceScope","parts","routeDefaults","registerDefaults","unregister","registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","determineAxis","scaleOptions","initOptions","chartDefaults","configScales","chartIndexAxis","firstIDs","scaleConf","error","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","mergeScaleConfig","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","Chart","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","setsEqual","unbindEvents","_updateLayout","_updateDatasets","_eventHandler","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","_updateHoverStyles","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","lastEvent","invalidatePlugins","clipArc","pixelMargin","angleMargin","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","pCenter","p4","p8","inner","lineJoin","fullCircles","drawFullCircleBorders","version","ArcElement","chartX","chartY","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","getAngleFromPoint","rAdjust","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","interpolate","sub","_boundSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","heightLimit","totalWidth","currentColWidth","currentColHeight","col","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","fontColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","_args","afterEvent","ci","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","getTooltipSize","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","tooltipItems","getTitle","beforeTitle","afterTitle","getBeforeBody","getBody","bodyItems","scoped","beforeLabel","afterLabel","getAfterBody","getFooter","beforeFooter","afterFooter","_createItems","itemSort","labelColor","labelPointStyle","labelTextColor","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","bodyColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","plugin_tooltip","afterInit","afterDraw","labelCount","findOrAddLabel","addIfString","lastIndexOf","CategoryScale","_startValue","_valueRange","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","getTickLimit","stepSize","computeTickLimit","LinearScale","isMajor","tickVal","LogarithmicScale","_zero","exp","endExp","endSignificand","significand","lastTick","generateTicks","getTickBackdropHeight","determineLimits","fitWithPointLabels","furthestLimits","furthestAngles","valueCount","getPointLabelContext","getPointPosition","drawingArea","plFont","_pointLabels","hLimits","vLimits","_setReductions","_pointLabelItems","tickBackdropHeight","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","buildPointLabelItems","pathRadiusLine","numberOrZero","param","RadialLinearScale","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","steps","second","minute","hour","week","quarter","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","getDecimalForValue","hasWeekday","getDataTimestamps","tooltipFormat","datetime","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","timer","refreshRateInMS","today","queries","getFullYear","getMonth","getDate","setDate","usage","allUsage","getHours","setHours","avg","tot","setInterval","clearInterval","serviceURL","years","response","u"],"mappings":"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"}